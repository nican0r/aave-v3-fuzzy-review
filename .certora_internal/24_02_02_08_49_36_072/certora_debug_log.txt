Saving last configuration file to .certora_internal/24_02_02_08_49_36_072/run.conf
You are using certora-cli version 6.1.3; however, version 6.1.4 is available. It is recommended to upgrade by running: pip install certora-cli --upgrade
or
pip3 install certora-cli --upgrade
There is no TAC file. Going to script EVMVerifier/certoraBuild.py to main_with_args()
Creating dir /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_config
In /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/Certora/specs/priceOracleCounter.spec, found the imports: []
copying spec file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/Certora/specs/priceOracleCounter.spec to /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/.0_priceOracleCounter.spec.spec
writing /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_verify.json
Path to typechecker is /Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/certora_jars/Typechecker.jar
running ['java', '-jar', '/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/certora_jars/Typechecker.jar', '-buildDirectory', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072']

building file Certora/harness/PoolHarness.sol
Running cmd solc -o ".certora_internal/24_02_02_08_49_36_072/.certora_config/PoolHarness.sol_0/" --overwrite --allow-paths "/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts",.,"node_modules/@nomiclabs/hardhat-etherscan","node_modules/axios-curlirize","node_modules/tmp-promise" --standard-json
stdout, stderr = .certora_internal/24_02_02_08_49_36_072/.certora_config/PoolHarness.sol_0.standard.json.stdout, .certora_internal/24_02_02_08_49_36_072/.certora_config/PoolHarness.sol_0.standard.json.stderr
Exitcode 0
Solc run solc -o ".certora_internal/24_02_02_08_49_36_072/.certora_config/PoolHarness.sol_0/" --overwrite --allow-paths "/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts",.,"node_modules/@nomiclabs/hardhat-etherscan","node_modules/axios-curlirize","node_modules/tmp-promise" --standard-json time: 4.7764
reading standard json data from .certora_internal/24_02_02_08_49_36_072/.certora_config/PoolHarness.sol_0.standard.json.stdout
Running cmd solc --version
stdout, stderr = .certora_internal/24_02_02_08_49_36_072/.certora_config/version_check_solc.stdout, .certora_internal/24_02_02_08_49_36_072/.certora_config/version_check_solc.stderr
Exitcode 0
Solc run solc --version time: 0.1353
collecting worklist for /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/Certora/harness/PoolHarness.sol
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/Certora/harness/PoolHarness.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/Certora/harness/PoolHarness.sol', 'contracts/dependencies/openzeppelin/contracts/Address.sol', 'contracts/dependencies/openzeppelin/contracts/IERC20.sol', 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', 'contracts/flashloan/interfaces/IFlashLoanReceiver.sol', 'contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol', 'contracts/interfaces/IACLManager.sol', 'contracts/interfaces/IAToken.sol', 'contracts/interfaces/IAaveIncentivesController.sol', 'contracts/interfaces/IERC20WithPermit.sol', 'contracts/interfaces/IInitializableAToken.sol', 'contracts/interfaces/IInitializableDebtToken.sol', 'contracts/interfaces/IPool.sol', 'contracts/interfaces/IPoolAddressesProvider.sol', 'contracts/interfaces/IPriceOracleGetter.sol', 'contracts/interfaces/IPriceOracleSentinel.sol', 'contracts/interfaces/IReserveInterestRateStrategy.sol', 'contracts/interfaces/IScaledBalanceToken.sol', 'contracts/interfaces/IStableDebtToken.sol', 'contracts/interfaces/IVariableDebtToken.sol', 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol', 'contracts/protocol/libraries/configuration/UserConfiguration.sol', 'contracts/protocol/libraries/helpers/Errors.sol', 'contracts/protocol/libraries/helpers/Helpers.sol', 'contracts/protocol/libraries/logic/BorrowLogic.sol', 'contracts/protocol/libraries/logic/BridgeLogic.sol', 'contracts/protocol/libraries/logic/EModeLogic.sol', 'contracts/protocol/libraries/logic/FlashLoanLogic.sol', 'contracts/protocol/libraries/logic/GenericLogic.sol', 'contracts/protocol/libraries/logic/IsolationModeLogic.sol', 'contracts/protocol/libraries/logic/LiquidationLogic.sol', 'contracts/protocol/libraries/logic/ReserveLogic.sol', 'contracts/protocol/libraries/logic/SupplyLogic.sol', 'contracts/protocol/libraries/logic/ValidationLogic.sol', 'contracts/protocol/libraries/math/MathUtils.sol', 'contracts/protocol/libraries/math/PercentageMath.sol', 'contracts/protocol/libraries/math/WadRayMath.sol', 'contracts/protocol/libraries/types/DataTypes.sol', 'contracts/protocol/pool/Pool.sol', 'contracts/protocol/pool/PoolStorage.sol'])
Adding a base contract link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPool.sol to worklist
Adding a base contract link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol to worklist
Adding a base contract link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/pool/Pool.sol to worklist
Adding a base contract link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/pool/PoolStorage.sol to worklist
Adding library link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/BorrowLogic.sol to worklist
Adding library link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/BridgeLogic.sol to worklist
Adding library link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/EModeLogic.sol to worklist
Adding library link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/FlashLoanLogic.sol to worklist
Adding library link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/LiquidationLogic.sol to worklist
Adding library link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/SupplyLogic.sol to worklist
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/SupplyLogic.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/Certora/harness/PoolHarness.sol', 'contracts/dependencies/openzeppelin/contracts/Address.sol', 'contracts/dependencies/openzeppelin/contracts/IERC20.sol', 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', 'contracts/flashloan/interfaces/IFlashLoanReceiver.sol', 'contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol', 'contracts/interfaces/IACLManager.sol', 'contracts/interfaces/IAToken.sol', 'contracts/interfaces/IAaveIncentivesController.sol', 'contracts/interfaces/IERC20WithPermit.sol', 'contracts/interfaces/IInitializableAToken.sol', 'contracts/interfaces/IInitializableDebtToken.sol', 'contracts/interfaces/IPool.sol', 'contracts/interfaces/IPoolAddressesProvider.sol', 'contracts/interfaces/IPriceOracleGetter.sol', 'contracts/interfaces/IPriceOracleSentinel.sol', 'contracts/interfaces/IReserveInterestRateStrategy.sol', 'contracts/interfaces/IScaledBalanceToken.sol', 'contracts/interfaces/IStableDebtToken.sol', 'contracts/interfaces/IVariableDebtToken.sol', 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol', 'contracts/protocol/libraries/configuration/UserConfiguration.sol', 'contracts/protocol/libraries/helpers/Errors.sol', 'contracts/protocol/libraries/helpers/Helpers.sol', 'contracts/protocol/libraries/logic/BorrowLogic.sol', 'contracts/protocol/libraries/logic/BridgeLogic.sol', 'contracts/protocol/libraries/logic/EModeLogic.sol', 'contracts/protocol/libraries/logic/FlashLoanLogic.sol', 'contracts/protocol/libraries/logic/GenericLogic.sol', 'contracts/protocol/libraries/logic/IsolationModeLogic.sol', 'contracts/protocol/libraries/logic/LiquidationLogic.sol', 'contracts/protocol/libraries/logic/ReserveLogic.sol', 'contracts/protocol/libraries/logic/SupplyLogic.sol', 'contracts/protocol/libraries/logic/ValidationLogic.sol', 'contracts/protocol/libraries/math/MathUtils.sol', 'contracts/protocol/libraries/math/PercentageMath.sol', 'contracts/protocol/libraries/math/WadRayMath.sol', 'contracts/protocol/libraries/types/DataTypes.sol', 'contracts/protocol/pool/Pool.sol', 'contracts/protocol/pool/PoolStorage.sol'])
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IAToken.sol to worklist
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/IERC20.sol to worklist
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IScaledBalanceToken.sol to worklist
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/configuration/ReserveConfiguration.sol to worklist
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/ReserveLogic.sol to worklist
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/SafeERC20.sol to worklist
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/configuration/UserConfiguration.sol to worklist
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/ValidationLogic.sol to worklist
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/WadRayMath.sol to worklist
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/WadRayMath.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/Certora/harness/PoolHarness.sol', 'contracts/dependencies/openzeppelin/contracts/Address.sol', 'contracts/dependencies/openzeppelin/contracts/IERC20.sol', 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', 'contracts/flashloan/interfaces/IFlashLoanReceiver.sol', 'contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol', 'contracts/interfaces/IACLManager.sol', 'contracts/interfaces/IAToken.sol', 'contracts/interfaces/IAaveIncentivesController.sol', 'contracts/interfaces/IERC20WithPermit.sol', 'contracts/interfaces/IInitializableAToken.sol', 'contracts/interfaces/IInitializableDebtToken.sol', 'contracts/interfaces/IPool.sol', 'contracts/interfaces/IPoolAddressesProvider.sol', 'contracts/interfaces/IPriceOracleGetter.sol', 'contracts/interfaces/IPriceOracleSentinel.sol', 'contracts/interfaces/IReserveInterestRateStrategy.sol', 'contracts/interfaces/IScaledBalanceToken.sol', 'contracts/interfaces/IStableDebtToken.sol', 'contracts/interfaces/IVariableDebtToken.sol', 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol', 'contracts/protocol/libraries/configuration/UserConfiguration.sol', 'contracts/protocol/libraries/helpers/Errors.sol', 'contracts/protocol/libraries/helpers/Helpers.sol', 'contracts/protocol/libraries/logic/BorrowLogic.sol', 'contracts/protocol/libraries/logic/BridgeLogic.sol', 'contracts/protocol/libraries/logic/EModeLogic.sol', 'contracts/protocol/libraries/logic/FlashLoanLogic.sol', 'contracts/protocol/libraries/logic/GenericLogic.sol', 'contracts/protocol/libraries/logic/IsolationModeLogic.sol', 'contracts/protocol/libraries/logic/LiquidationLogic.sol', 'contracts/protocol/libraries/logic/ReserveLogic.sol', 'contracts/protocol/libraries/logic/SupplyLogic.sol', 'contracts/protocol/libraries/logic/ValidationLogic.sol', 'contracts/protocol/libraries/math/MathUtils.sol', 'contracts/protocol/libraries/math/PercentageMath.sol', 'contracts/protocol/libraries/math/WadRayMath.sol', 'contracts/protocol/libraries/types/DataTypes.sol', 'contracts/protocol/pool/Pool.sol', 'contracts/protocol/pool/PoolStorage.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/ValidationLogic.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/Certora/harness/PoolHarness.sol', 'contracts/dependencies/openzeppelin/contracts/Address.sol', 'contracts/dependencies/openzeppelin/contracts/IERC20.sol', 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', 'contracts/flashloan/interfaces/IFlashLoanReceiver.sol', 'contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol', 'contracts/interfaces/IACLManager.sol', 'contracts/interfaces/IAToken.sol', 'contracts/interfaces/IAaveIncentivesController.sol', 'contracts/interfaces/IERC20WithPermit.sol', 'contracts/interfaces/IInitializableAToken.sol', 'contracts/interfaces/IInitializableDebtToken.sol', 'contracts/interfaces/IPool.sol', 'contracts/interfaces/IPoolAddressesProvider.sol', 'contracts/interfaces/IPriceOracleGetter.sol', 'contracts/interfaces/IPriceOracleSentinel.sol', 'contracts/interfaces/IReserveInterestRateStrategy.sol', 'contracts/interfaces/IScaledBalanceToken.sol', 'contracts/interfaces/IStableDebtToken.sol', 'contracts/interfaces/IVariableDebtToken.sol', 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol', 'contracts/protocol/libraries/configuration/UserConfiguration.sol', 'contracts/protocol/libraries/helpers/Errors.sol', 'contracts/protocol/libraries/helpers/Helpers.sol', 'contracts/protocol/libraries/logic/BorrowLogic.sol', 'contracts/protocol/libraries/logic/BridgeLogic.sol', 'contracts/protocol/libraries/logic/EModeLogic.sol', 'contracts/protocol/libraries/logic/FlashLoanLogic.sol', 'contracts/protocol/libraries/logic/GenericLogic.sol', 'contracts/protocol/libraries/logic/IsolationModeLogic.sol', 'contracts/protocol/libraries/logic/LiquidationLogic.sol', 'contracts/protocol/libraries/logic/ReserveLogic.sol', 'contracts/protocol/libraries/logic/SupplyLogic.sol', 'contracts/protocol/libraries/logic/ValidationLogic.sol', 'contracts/protocol/libraries/math/MathUtils.sol', 'contracts/protocol/libraries/math/PercentageMath.sol', 'contracts/protocol/libraries/math/WadRayMath.sol', 'contracts/protocol/libraries/types/DataTypes.sol', 'contracts/protocol/pool/Pool.sol', 'contracts/protocol/pool/PoolStorage.sol'])
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/types/DataTypes.sol to worklist
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/GenericLogic.sol to worklist
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/helpers/Helpers.sol to worklist
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPriceOracleGetter.sol to worklist
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPriceOracleSentinel.sol to worklist
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IReserveInterestRateStrategy.sol to worklist
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IStableDebtToken.sol to worklist
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/PercentageMath.sol to worklist
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/PercentageMath.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/Certora/harness/PoolHarness.sol', 'contracts/dependencies/openzeppelin/contracts/Address.sol', 'contracts/dependencies/openzeppelin/contracts/IERC20.sol', 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', 'contracts/flashloan/interfaces/IFlashLoanReceiver.sol', 'contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol', 'contracts/interfaces/IACLManager.sol', 'contracts/interfaces/IAToken.sol', 'contracts/interfaces/IAaveIncentivesController.sol', 'contracts/interfaces/IERC20WithPermit.sol', 'contracts/interfaces/IInitializableAToken.sol', 'contracts/interfaces/IInitializableDebtToken.sol', 'contracts/interfaces/IPool.sol', 'contracts/interfaces/IPoolAddressesProvider.sol', 'contracts/interfaces/IPriceOracleGetter.sol', 'contracts/interfaces/IPriceOracleSentinel.sol', 'contracts/interfaces/IReserveInterestRateStrategy.sol', 'contracts/interfaces/IScaledBalanceToken.sol', 'contracts/interfaces/IStableDebtToken.sol', 'contracts/interfaces/IVariableDebtToken.sol', 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol', 'contracts/protocol/libraries/configuration/UserConfiguration.sol', 'contracts/protocol/libraries/helpers/Errors.sol', 'contracts/protocol/libraries/helpers/Helpers.sol', 'contracts/protocol/libraries/logic/BorrowLogic.sol', 'contracts/protocol/libraries/logic/BridgeLogic.sol', 'contracts/protocol/libraries/logic/EModeLogic.sol', 'contracts/protocol/libraries/logic/FlashLoanLogic.sol', 'contracts/protocol/libraries/logic/GenericLogic.sol', 'contracts/protocol/libraries/logic/IsolationModeLogic.sol', 'contracts/protocol/libraries/logic/LiquidationLogic.sol', 'contracts/protocol/libraries/logic/ReserveLogic.sol', 'contracts/protocol/libraries/logic/SupplyLogic.sol', 'contracts/protocol/libraries/logic/ValidationLogic.sol', 'contracts/protocol/libraries/math/MathUtils.sol', 'contracts/protocol/libraries/math/PercentageMath.sol', 'contracts/protocol/libraries/math/WadRayMath.sol', 'contracts/protocol/libraries/types/DataTypes.sol', 'contracts/protocol/pool/Pool.sol', 'contracts/protocol/pool/PoolStorage.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IStableDebtToken.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/Certora/harness/PoolHarness.sol', 'contracts/dependencies/openzeppelin/contracts/Address.sol', 'contracts/dependencies/openzeppelin/contracts/IERC20.sol', 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', 'contracts/flashloan/interfaces/IFlashLoanReceiver.sol', 'contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol', 'contracts/interfaces/IACLManager.sol', 'contracts/interfaces/IAToken.sol', 'contracts/interfaces/IAaveIncentivesController.sol', 'contracts/interfaces/IERC20WithPermit.sol', 'contracts/interfaces/IInitializableAToken.sol', 'contracts/interfaces/IInitializableDebtToken.sol', 'contracts/interfaces/IPool.sol', 'contracts/interfaces/IPoolAddressesProvider.sol', 'contracts/interfaces/IPriceOracleGetter.sol', 'contracts/interfaces/IPriceOracleSentinel.sol', 'contracts/interfaces/IReserveInterestRateStrategy.sol', 'contracts/interfaces/IScaledBalanceToken.sol', 'contracts/interfaces/IStableDebtToken.sol', 'contracts/interfaces/IVariableDebtToken.sol', 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol', 'contracts/protocol/libraries/configuration/UserConfiguration.sol', 'contracts/protocol/libraries/helpers/Errors.sol', 'contracts/protocol/libraries/helpers/Helpers.sol', 'contracts/protocol/libraries/logic/BorrowLogic.sol', 'contracts/protocol/libraries/logic/BridgeLogic.sol', 'contracts/protocol/libraries/logic/EModeLogic.sol', 'contracts/protocol/libraries/logic/FlashLoanLogic.sol', 'contracts/protocol/libraries/logic/GenericLogic.sol', 'contracts/protocol/libraries/logic/IsolationModeLogic.sol', 'contracts/protocol/libraries/logic/LiquidationLogic.sol', 'contracts/protocol/libraries/logic/ReserveLogic.sol', 'contracts/protocol/libraries/logic/SupplyLogic.sol', 'contracts/protocol/libraries/logic/ValidationLogic.sol', 'contracts/protocol/libraries/math/MathUtils.sol', 'contracts/protocol/libraries/math/PercentageMath.sol', 'contracts/protocol/libraries/math/WadRayMath.sol', 'contracts/protocol/libraries/types/DataTypes.sol', 'contracts/protocol/pool/Pool.sol', 'contracts/protocol/pool/PoolStorage.sol'])
Adding a base contract link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IInitializableDebtToken.sol to worklist
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IInitializableDebtToken.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/Certora/harness/PoolHarness.sol', 'contracts/dependencies/openzeppelin/contracts/Address.sol', 'contracts/dependencies/openzeppelin/contracts/IERC20.sol', 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', 'contracts/flashloan/interfaces/IFlashLoanReceiver.sol', 'contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol', 'contracts/interfaces/IACLManager.sol', 'contracts/interfaces/IAToken.sol', 'contracts/interfaces/IAaveIncentivesController.sol', 'contracts/interfaces/IERC20WithPermit.sol', 'contracts/interfaces/IInitializableAToken.sol', 'contracts/interfaces/IInitializableDebtToken.sol', 'contracts/interfaces/IPool.sol', 'contracts/interfaces/IPoolAddressesProvider.sol', 'contracts/interfaces/IPriceOracleGetter.sol', 'contracts/interfaces/IPriceOracleSentinel.sol', 'contracts/interfaces/IReserveInterestRateStrategy.sol', 'contracts/interfaces/IScaledBalanceToken.sol', 'contracts/interfaces/IStableDebtToken.sol', 'contracts/interfaces/IVariableDebtToken.sol', 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol', 'contracts/protocol/libraries/configuration/UserConfiguration.sol', 'contracts/protocol/libraries/helpers/Errors.sol', 'contracts/protocol/libraries/helpers/Helpers.sol', 'contracts/protocol/libraries/logic/BorrowLogic.sol', 'contracts/protocol/libraries/logic/BridgeLogic.sol', 'contracts/protocol/libraries/logic/EModeLogic.sol', 'contracts/protocol/libraries/logic/FlashLoanLogic.sol', 'contracts/protocol/libraries/logic/GenericLogic.sol', 'contracts/protocol/libraries/logic/IsolationModeLogic.sol', 'contracts/protocol/libraries/logic/LiquidationLogic.sol', 'contracts/protocol/libraries/logic/ReserveLogic.sol', 'contracts/protocol/libraries/logic/SupplyLogic.sol', 'contracts/protocol/libraries/logic/ValidationLogic.sol', 'contracts/protocol/libraries/math/MathUtils.sol', 'contracts/protocol/libraries/math/PercentageMath.sol', 'contracts/protocol/libraries/math/WadRayMath.sol', 'contracts/protocol/libraries/types/DataTypes.sol', 'contracts/protocol/pool/Pool.sol', 'contracts/protocol/pool/PoolStorage.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IReserveInterestRateStrategy.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/Certora/harness/PoolHarness.sol', 'contracts/dependencies/openzeppelin/contracts/Address.sol', 'contracts/dependencies/openzeppelin/contracts/IERC20.sol', 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', 'contracts/flashloan/interfaces/IFlashLoanReceiver.sol', 'contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol', 'contracts/interfaces/IACLManager.sol', 'contracts/interfaces/IAToken.sol', 'contracts/interfaces/IAaveIncentivesController.sol', 'contracts/interfaces/IERC20WithPermit.sol', 'contracts/interfaces/IInitializableAToken.sol', 'contracts/interfaces/IInitializableDebtToken.sol', 'contracts/interfaces/IPool.sol', 'contracts/interfaces/IPoolAddressesProvider.sol', 'contracts/interfaces/IPriceOracleGetter.sol', 'contracts/interfaces/IPriceOracleSentinel.sol', 'contracts/interfaces/IReserveInterestRateStrategy.sol', 'contracts/interfaces/IScaledBalanceToken.sol', 'contracts/interfaces/IStableDebtToken.sol', 'contracts/interfaces/IVariableDebtToken.sol', 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol', 'contracts/protocol/libraries/configuration/UserConfiguration.sol', 'contracts/protocol/libraries/helpers/Errors.sol', 'contracts/protocol/libraries/helpers/Helpers.sol', 'contracts/protocol/libraries/logic/BorrowLogic.sol', 'contracts/protocol/libraries/logic/BridgeLogic.sol', 'contracts/protocol/libraries/logic/EModeLogic.sol', 'contracts/protocol/libraries/logic/FlashLoanLogic.sol', 'contracts/protocol/libraries/logic/GenericLogic.sol', 'contracts/protocol/libraries/logic/IsolationModeLogic.sol', 'contracts/protocol/libraries/logic/LiquidationLogic.sol', 'contracts/protocol/libraries/logic/ReserveLogic.sol', 'contracts/protocol/libraries/logic/SupplyLogic.sol', 'contracts/protocol/libraries/logic/ValidationLogic.sol', 'contracts/protocol/libraries/math/MathUtils.sol', 'contracts/protocol/libraries/math/PercentageMath.sol', 'contracts/protocol/libraries/math/WadRayMath.sol', 'contracts/protocol/libraries/types/DataTypes.sol', 'contracts/protocol/pool/Pool.sol', 'contracts/protocol/pool/PoolStorage.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPriceOracleSentinel.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/Certora/harness/PoolHarness.sol', 'contracts/dependencies/openzeppelin/contracts/Address.sol', 'contracts/dependencies/openzeppelin/contracts/IERC20.sol', 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', 'contracts/flashloan/interfaces/IFlashLoanReceiver.sol', 'contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol', 'contracts/interfaces/IACLManager.sol', 'contracts/interfaces/IAToken.sol', 'contracts/interfaces/IAaveIncentivesController.sol', 'contracts/interfaces/IERC20WithPermit.sol', 'contracts/interfaces/IInitializableAToken.sol', 'contracts/interfaces/IInitializableDebtToken.sol', 'contracts/interfaces/IPool.sol', 'contracts/interfaces/IPoolAddressesProvider.sol', 'contracts/interfaces/IPriceOracleGetter.sol', 'contracts/interfaces/IPriceOracleSentinel.sol', 'contracts/interfaces/IReserveInterestRateStrategy.sol', 'contracts/interfaces/IScaledBalanceToken.sol', 'contracts/interfaces/IStableDebtToken.sol', 'contracts/interfaces/IVariableDebtToken.sol', 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol', 'contracts/protocol/libraries/configuration/UserConfiguration.sol', 'contracts/protocol/libraries/helpers/Errors.sol', 'contracts/protocol/libraries/helpers/Helpers.sol', 'contracts/protocol/libraries/logic/BorrowLogic.sol', 'contracts/protocol/libraries/logic/BridgeLogic.sol', 'contracts/protocol/libraries/logic/EModeLogic.sol', 'contracts/protocol/libraries/logic/FlashLoanLogic.sol', 'contracts/protocol/libraries/logic/GenericLogic.sol', 'contracts/protocol/libraries/logic/IsolationModeLogic.sol', 'contracts/protocol/libraries/logic/LiquidationLogic.sol', 'contracts/protocol/libraries/logic/ReserveLogic.sol', 'contracts/protocol/libraries/logic/SupplyLogic.sol', 'contracts/protocol/libraries/logic/ValidationLogic.sol', 'contracts/protocol/libraries/math/MathUtils.sol', 'contracts/protocol/libraries/math/PercentageMath.sol', 'contracts/protocol/libraries/math/WadRayMath.sol', 'contracts/protocol/libraries/types/DataTypes.sol', 'contracts/protocol/pool/Pool.sol', 'contracts/protocol/pool/PoolStorage.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPriceOracleGetter.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/Certora/harness/PoolHarness.sol', 'contracts/dependencies/openzeppelin/contracts/Address.sol', 'contracts/dependencies/openzeppelin/contracts/IERC20.sol', 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', 'contracts/flashloan/interfaces/IFlashLoanReceiver.sol', 'contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol', 'contracts/interfaces/IACLManager.sol', 'contracts/interfaces/IAToken.sol', 'contracts/interfaces/IAaveIncentivesController.sol', 'contracts/interfaces/IERC20WithPermit.sol', 'contracts/interfaces/IInitializableAToken.sol', 'contracts/interfaces/IInitializableDebtToken.sol', 'contracts/interfaces/IPool.sol', 'contracts/interfaces/IPoolAddressesProvider.sol', 'contracts/interfaces/IPriceOracleGetter.sol', 'contracts/interfaces/IPriceOracleSentinel.sol', 'contracts/interfaces/IReserveInterestRateStrategy.sol', 'contracts/interfaces/IScaledBalanceToken.sol', 'contracts/interfaces/IStableDebtToken.sol', 'contracts/interfaces/IVariableDebtToken.sol', 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol', 'contracts/protocol/libraries/configuration/UserConfiguration.sol', 'contracts/protocol/libraries/helpers/Errors.sol', 'contracts/protocol/libraries/helpers/Helpers.sol', 'contracts/protocol/libraries/logic/BorrowLogic.sol', 'contracts/protocol/libraries/logic/BridgeLogic.sol', 'contracts/protocol/libraries/logic/EModeLogic.sol', 'contracts/protocol/libraries/logic/FlashLoanLogic.sol', 'contracts/protocol/libraries/logic/GenericLogic.sol', 'contracts/protocol/libraries/logic/IsolationModeLogic.sol', 'contracts/protocol/libraries/logic/LiquidationLogic.sol', 'contracts/protocol/libraries/logic/ReserveLogic.sol', 'contracts/protocol/libraries/logic/SupplyLogic.sol', 'contracts/protocol/libraries/logic/ValidationLogic.sol', 'contracts/protocol/libraries/math/MathUtils.sol', 'contracts/protocol/libraries/math/PercentageMath.sol', 'contracts/protocol/libraries/math/WadRayMath.sol', 'contracts/protocol/libraries/types/DataTypes.sol', 'contracts/protocol/pool/Pool.sol', 'contracts/protocol/pool/PoolStorage.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/helpers/Helpers.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/Certora/harness/PoolHarness.sol', 'contracts/dependencies/openzeppelin/contracts/Address.sol', 'contracts/dependencies/openzeppelin/contracts/IERC20.sol', 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', 'contracts/flashloan/interfaces/IFlashLoanReceiver.sol', 'contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol', 'contracts/interfaces/IACLManager.sol', 'contracts/interfaces/IAToken.sol', 'contracts/interfaces/IAaveIncentivesController.sol', 'contracts/interfaces/IERC20WithPermit.sol', 'contracts/interfaces/IInitializableAToken.sol', 'contracts/interfaces/IInitializableDebtToken.sol', 'contracts/interfaces/IPool.sol', 'contracts/interfaces/IPoolAddressesProvider.sol', 'contracts/interfaces/IPriceOracleGetter.sol', 'contracts/interfaces/IPriceOracleSentinel.sol', 'contracts/interfaces/IReserveInterestRateStrategy.sol', 'contracts/interfaces/IScaledBalanceToken.sol', 'contracts/interfaces/IStableDebtToken.sol', 'contracts/interfaces/IVariableDebtToken.sol', 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol', 'contracts/protocol/libraries/configuration/UserConfiguration.sol', 'contracts/protocol/libraries/helpers/Errors.sol', 'contracts/protocol/libraries/helpers/Helpers.sol', 'contracts/protocol/libraries/logic/BorrowLogic.sol', 'contracts/protocol/libraries/logic/BridgeLogic.sol', 'contracts/protocol/libraries/logic/EModeLogic.sol', 'contracts/protocol/libraries/logic/FlashLoanLogic.sol', 'contracts/protocol/libraries/logic/GenericLogic.sol', 'contracts/protocol/libraries/logic/IsolationModeLogic.sol', 'contracts/protocol/libraries/logic/LiquidationLogic.sol', 'contracts/protocol/libraries/logic/ReserveLogic.sol', 'contracts/protocol/libraries/logic/SupplyLogic.sol', 'contracts/protocol/libraries/logic/ValidationLogic.sol', 'contracts/protocol/libraries/math/MathUtils.sol', 'contracts/protocol/libraries/math/PercentageMath.sol', 'contracts/protocol/libraries/math/WadRayMath.sol', 'contracts/protocol/libraries/types/DataTypes.sol', 'contracts/protocol/pool/Pool.sol', 'contracts/protocol/pool/PoolStorage.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/GenericLogic.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/Certora/harness/PoolHarness.sol', 'contracts/dependencies/openzeppelin/contracts/Address.sol', 'contracts/dependencies/openzeppelin/contracts/IERC20.sol', 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', 'contracts/flashloan/interfaces/IFlashLoanReceiver.sol', 'contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol', 'contracts/interfaces/IACLManager.sol', 'contracts/interfaces/IAToken.sol', 'contracts/interfaces/IAaveIncentivesController.sol', 'contracts/interfaces/IERC20WithPermit.sol', 'contracts/interfaces/IInitializableAToken.sol', 'contracts/interfaces/IInitializableDebtToken.sol', 'contracts/interfaces/IPool.sol', 'contracts/interfaces/IPoolAddressesProvider.sol', 'contracts/interfaces/IPriceOracleGetter.sol', 'contracts/interfaces/IPriceOracleSentinel.sol', 'contracts/interfaces/IReserveInterestRateStrategy.sol', 'contracts/interfaces/IScaledBalanceToken.sol', 'contracts/interfaces/IStableDebtToken.sol', 'contracts/interfaces/IVariableDebtToken.sol', 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol', 'contracts/protocol/libraries/configuration/UserConfiguration.sol', 'contracts/protocol/libraries/helpers/Errors.sol', 'contracts/protocol/libraries/helpers/Helpers.sol', 'contracts/protocol/libraries/logic/BorrowLogic.sol', 'contracts/protocol/libraries/logic/BridgeLogic.sol', 'contracts/protocol/libraries/logic/EModeLogic.sol', 'contracts/protocol/libraries/logic/FlashLoanLogic.sol', 'contracts/protocol/libraries/logic/GenericLogic.sol', 'contracts/protocol/libraries/logic/IsolationModeLogic.sol', 'contracts/protocol/libraries/logic/LiquidationLogic.sol', 'contracts/protocol/libraries/logic/ReserveLogic.sol', 'contracts/protocol/libraries/logic/SupplyLogic.sol', 'contracts/protocol/libraries/logic/ValidationLogic.sol', 'contracts/protocol/libraries/math/MathUtils.sol', 'contracts/protocol/libraries/math/PercentageMath.sol', 'contracts/protocol/libraries/math/WadRayMath.sol', 'contracts/protocol/libraries/types/DataTypes.sol', 'contracts/protocol/pool/Pool.sol', 'contracts/protocol/pool/PoolStorage.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/types/DataTypes.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/Certora/harness/PoolHarness.sol', 'contracts/dependencies/openzeppelin/contracts/Address.sol', 'contracts/dependencies/openzeppelin/contracts/IERC20.sol', 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', 'contracts/flashloan/interfaces/IFlashLoanReceiver.sol', 'contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol', 'contracts/interfaces/IACLManager.sol', 'contracts/interfaces/IAToken.sol', 'contracts/interfaces/IAaveIncentivesController.sol', 'contracts/interfaces/IERC20WithPermit.sol', 'contracts/interfaces/IInitializableAToken.sol', 'contracts/interfaces/IInitializableDebtToken.sol', 'contracts/interfaces/IPool.sol', 'contracts/interfaces/IPoolAddressesProvider.sol', 'contracts/interfaces/IPriceOracleGetter.sol', 'contracts/interfaces/IPriceOracleSentinel.sol', 'contracts/interfaces/IReserveInterestRateStrategy.sol', 'contracts/interfaces/IScaledBalanceToken.sol', 'contracts/interfaces/IStableDebtToken.sol', 'contracts/interfaces/IVariableDebtToken.sol', 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol', 'contracts/protocol/libraries/configuration/UserConfiguration.sol', 'contracts/protocol/libraries/helpers/Errors.sol', 'contracts/protocol/libraries/helpers/Helpers.sol', 'contracts/protocol/libraries/logic/BorrowLogic.sol', 'contracts/protocol/libraries/logic/BridgeLogic.sol', 'contracts/protocol/libraries/logic/EModeLogic.sol', 'contracts/protocol/libraries/logic/FlashLoanLogic.sol', 'contracts/protocol/libraries/logic/GenericLogic.sol', 'contracts/protocol/libraries/logic/IsolationModeLogic.sol', 'contracts/protocol/libraries/logic/LiquidationLogic.sol', 'contracts/protocol/libraries/logic/ReserveLogic.sol', 'contracts/protocol/libraries/logic/SupplyLogic.sol', 'contracts/protocol/libraries/logic/ValidationLogic.sol', 'contracts/protocol/libraries/math/MathUtils.sol', 'contracts/protocol/libraries/math/PercentageMath.sol', 'contracts/protocol/libraries/math/WadRayMath.sol', 'contracts/protocol/libraries/types/DataTypes.sol', 'contracts/protocol/pool/Pool.sol', 'contracts/protocol/pool/PoolStorage.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/configuration/UserConfiguration.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/Certora/harness/PoolHarness.sol', 'contracts/dependencies/openzeppelin/contracts/Address.sol', 'contracts/dependencies/openzeppelin/contracts/IERC20.sol', 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', 'contracts/flashloan/interfaces/IFlashLoanReceiver.sol', 'contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol', 'contracts/interfaces/IACLManager.sol', 'contracts/interfaces/IAToken.sol', 'contracts/interfaces/IAaveIncentivesController.sol', 'contracts/interfaces/IERC20WithPermit.sol', 'contracts/interfaces/IInitializableAToken.sol', 'contracts/interfaces/IInitializableDebtToken.sol', 'contracts/interfaces/IPool.sol', 'contracts/interfaces/IPoolAddressesProvider.sol', 'contracts/interfaces/IPriceOracleGetter.sol', 'contracts/interfaces/IPriceOracleSentinel.sol', 'contracts/interfaces/IReserveInterestRateStrategy.sol', 'contracts/interfaces/IScaledBalanceToken.sol', 'contracts/interfaces/IStableDebtToken.sol', 'contracts/interfaces/IVariableDebtToken.sol', 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol', 'contracts/protocol/libraries/configuration/UserConfiguration.sol', 'contracts/protocol/libraries/helpers/Errors.sol', 'contracts/protocol/libraries/helpers/Helpers.sol', 'contracts/protocol/libraries/logic/BorrowLogic.sol', 'contracts/protocol/libraries/logic/BridgeLogic.sol', 'contracts/protocol/libraries/logic/EModeLogic.sol', 'contracts/protocol/libraries/logic/FlashLoanLogic.sol', 'contracts/protocol/libraries/logic/GenericLogic.sol', 'contracts/protocol/libraries/logic/IsolationModeLogic.sol', 'contracts/protocol/libraries/logic/LiquidationLogic.sol', 'contracts/protocol/libraries/logic/ReserveLogic.sol', 'contracts/protocol/libraries/logic/SupplyLogic.sol', 'contracts/protocol/libraries/logic/ValidationLogic.sol', 'contracts/protocol/libraries/math/MathUtils.sol', 'contracts/protocol/libraries/math/PercentageMath.sol', 'contracts/protocol/libraries/math/WadRayMath.sol', 'contracts/protocol/libraries/types/DataTypes.sol', 'contracts/protocol/pool/Pool.sol', 'contracts/protocol/pool/PoolStorage.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/SafeERC20.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/Certora/harness/PoolHarness.sol', 'contracts/dependencies/openzeppelin/contracts/Address.sol', 'contracts/dependencies/openzeppelin/contracts/IERC20.sol', 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', 'contracts/flashloan/interfaces/IFlashLoanReceiver.sol', 'contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol', 'contracts/interfaces/IACLManager.sol', 'contracts/interfaces/IAToken.sol', 'contracts/interfaces/IAaveIncentivesController.sol', 'contracts/interfaces/IERC20WithPermit.sol', 'contracts/interfaces/IInitializableAToken.sol', 'contracts/interfaces/IInitializableDebtToken.sol', 'contracts/interfaces/IPool.sol', 'contracts/interfaces/IPoolAddressesProvider.sol', 'contracts/interfaces/IPriceOracleGetter.sol', 'contracts/interfaces/IPriceOracleSentinel.sol', 'contracts/interfaces/IReserveInterestRateStrategy.sol', 'contracts/interfaces/IScaledBalanceToken.sol', 'contracts/interfaces/IStableDebtToken.sol', 'contracts/interfaces/IVariableDebtToken.sol', 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol', 'contracts/protocol/libraries/configuration/UserConfiguration.sol', 'contracts/protocol/libraries/helpers/Errors.sol', 'contracts/protocol/libraries/helpers/Helpers.sol', 'contracts/protocol/libraries/logic/BorrowLogic.sol', 'contracts/protocol/libraries/logic/BridgeLogic.sol', 'contracts/protocol/libraries/logic/EModeLogic.sol', 'contracts/protocol/libraries/logic/FlashLoanLogic.sol', 'contracts/protocol/libraries/logic/GenericLogic.sol', 'contracts/protocol/libraries/logic/IsolationModeLogic.sol', 'contracts/protocol/libraries/logic/LiquidationLogic.sol', 'contracts/protocol/libraries/logic/ReserveLogic.sol', 'contracts/protocol/libraries/logic/SupplyLogic.sol', 'contracts/protocol/libraries/logic/ValidationLogic.sol', 'contracts/protocol/libraries/math/MathUtils.sol', 'contracts/protocol/libraries/math/PercentageMath.sol', 'contracts/protocol/libraries/math/WadRayMath.sol', 'contracts/protocol/libraries/types/DataTypes.sol', 'contracts/protocol/pool/Pool.sol', 'contracts/protocol/pool/PoolStorage.sol'])
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/Address.sol to worklist
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/Address.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/Certora/harness/PoolHarness.sol', 'contracts/dependencies/openzeppelin/contracts/Address.sol', 'contracts/dependencies/openzeppelin/contracts/IERC20.sol', 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', 'contracts/flashloan/interfaces/IFlashLoanReceiver.sol', 'contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol', 'contracts/interfaces/IACLManager.sol', 'contracts/interfaces/IAToken.sol', 'contracts/interfaces/IAaveIncentivesController.sol', 'contracts/interfaces/IERC20WithPermit.sol', 'contracts/interfaces/IInitializableAToken.sol', 'contracts/interfaces/IInitializableDebtToken.sol', 'contracts/interfaces/IPool.sol', 'contracts/interfaces/IPoolAddressesProvider.sol', 'contracts/interfaces/IPriceOracleGetter.sol', 'contracts/interfaces/IPriceOracleSentinel.sol', 'contracts/interfaces/IReserveInterestRateStrategy.sol', 'contracts/interfaces/IScaledBalanceToken.sol', 'contracts/interfaces/IStableDebtToken.sol', 'contracts/interfaces/IVariableDebtToken.sol', 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol', 'contracts/protocol/libraries/configuration/UserConfiguration.sol', 'contracts/protocol/libraries/helpers/Errors.sol', 'contracts/protocol/libraries/helpers/Helpers.sol', 'contracts/protocol/libraries/logic/BorrowLogic.sol', 'contracts/protocol/libraries/logic/BridgeLogic.sol', 'contracts/protocol/libraries/logic/EModeLogic.sol', 'contracts/protocol/libraries/logic/FlashLoanLogic.sol', 'contracts/protocol/libraries/logic/GenericLogic.sol', 'contracts/protocol/libraries/logic/IsolationModeLogic.sol', 'contracts/protocol/libraries/logic/LiquidationLogic.sol', 'contracts/protocol/libraries/logic/ReserveLogic.sol', 'contracts/protocol/libraries/logic/SupplyLogic.sol', 'contracts/protocol/libraries/logic/ValidationLogic.sol', 'contracts/protocol/libraries/math/MathUtils.sol', 'contracts/protocol/libraries/math/PercentageMath.sol', 'contracts/protocol/libraries/math/WadRayMath.sol', 'contracts/protocol/libraries/types/DataTypes.sol', 'contracts/protocol/pool/Pool.sol', 'contracts/protocol/pool/PoolStorage.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/ReserveLogic.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/Certora/harness/PoolHarness.sol', 'contracts/dependencies/openzeppelin/contracts/Address.sol', 'contracts/dependencies/openzeppelin/contracts/IERC20.sol', 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', 'contracts/flashloan/interfaces/IFlashLoanReceiver.sol', 'contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol', 'contracts/interfaces/IACLManager.sol', 'contracts/interfaces/IAToken.sol', 'contracts/interfaces/IAaveIncentivesController.sol', 'contracts/interfaces/IERC20WithPermit.sol', 'contracts/interfaces/IInitializableAToken.sol', 'contracts/interfaces/IInitializableDebtToken.sol', 'contracts/interfaces/IPool.sol', 'contracts/interfaces/IPoolAddressesProvider.sol', 'contracts/interfaces/IPriceOracleGetter.sol', 'contracts/interfaces/IPriceOracleSentinel.sol', 'contracts/interfaces/IReserveInterestRateStrategy.sol', 'contracts/interfaces/IScaledBalanceToken.sol', 'contracts/interfaces/IStableDebtToken.sol', 'contracts/interfaces/IVariableDebtToken.sol', 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol', 'contracts/protocol/libraries/configuration/UserConfiguration.sol', 'contracts/protocol/libraries/helpers/Errors.sol', 'contracts/protocol/libraries/helpers/Helpers.sol', 'contracts/protocol/libraries/logic/BorrowLogic.sol', 'contracts/protocol/libraries/logic/BridgeLogic.sol', 'contracts/protocol/libraries/logic/EModeLogic.sol', 'contracts/protocol/libraries/logic/FlashLoanLogic.sol', 'contracts/protocol/libraries/logic/GenericLogic.sol', 'contracts/protocol/libraries/logic/IsolationModeLogic.sol', 'contracts/protocol/libraries/logic/LiquidationLogic.sol', 'contracts/protocol/libraries/logic/ReserveLogic.sol', 'contracts/protocol/libraries/logic/SupplyLogic.sol', 'contracts/protocol/libraries/logic/ValidationLogic.sol', 'contracts/protocol/libraries/math/MathUtils.sol', 'contracts/protocol/libraries/math/PercentageMath.sol', 'contracts/protocol/libraries/math/WadRayMath.sol', 'contracts/protocol/libraries/types/DataTypes.sol', 'contracts/protocol/pool/Pool.sol', 'contracts/protocol/pool/PoolStorage.sol'])
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/MathUtils.sol to worklist
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/MathUtils.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/Certora/harness/PoolHarness.sol', 'contracts/dependencies/openzeppelin/contracts/Address.sol', 'contracts/dependencies/openzeppelin/contracts/IERC20.sol', 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', 'contracts/flashloan/interfaces/IFlashLoanReceiver.sol', 'contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol', 'contracts/interfaces/IACLManager.sol', 'contracts/interfaces/IAToken.sol', 'contracts/interfaces/IAaveIncentivesController.sol', 'contracts/interfaces/IERC20WithPermit.sol', 'contracts/interfaces/IInitializableAToken.sol', 'contracts/interfaces/IInitializableDebtToken.sol', 'contracts/interfaces/IPool.sol', 'contracts/interfaces/IPoolAddressesProvider.sol', 'contracts/interfaces/IPriceOracleGetter.sol', 'contracts/interfaces/IPriceOracleSentinel.sol', 'contracts/interfaces/IReserveInterestRateStrategy.sol', 'contracts/interfaces/IScaledBalanceToken.sol', 'contracts/interfaces/IStableDebtToken.sol', 'contracts/interfaces/IVariableDebtToken.sol', 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol', 'contracts/protocol/libraries/configuration/UserConfiguration.sol', 'contracts/protocol/libraries/helpers/Errors.sol', 'contracts/protocol/libraries/helpers/Helpers.sol', 'contracts/protocol/libraries/logic/BorrowLogic.sol', 'contracts/protocol/libraries/logic/BridgeLogic.sol', 'contracts/protocol/libraries/logic/EModeLogic.sol', 'contracts/protocol/libraries/logic/FlashLoanLogic.sol', 'contracts/protocol/libraries/logic/GenericLogic.sol', 'contracts/protocol/libraries/logic/IsolationModeLogic.sol', 'contracts/protocol/libraries/logic/LiquidationLogic.sol', 'contracts/protocol/libraries/logic/ReserveLogic.sol', 'contracts/protocol/libraries/logic/SupplyLogic.sol', 'contracts/protocol/libraries/logic/ValidationLogic.sol', 'contracts/protocol/libraries/math/MathUtils.sol', 'contracts/protocol/libraries/math/PercentageMath.sol', 'contracts/protocol/libraries/math/WadRayMath.sol', 'contracts/protocol/libraries/types/DataTypes.sol', 'contracts/protocol/pool/Pool.sol', 'contracts/protocol/pool/PoolStorage.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/configuration/ReserveConfiguration.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/Certora/harness/PoolHarness.sol', 'contracts/dependencies/openzeppelin/contracts/Address.sol', 'contracts/dependencies/openzeppelin/contracts/IERC20.sol', 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', 'contracts/flashloan/interfaces/IFlashLoanReceiver.sol', 'contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol', 'contracts/interfaces/IACLManager.sol', 'contracts/interfaces/IAToken.sol', 'contracts/interfaces/IAaveIncentivesController.sol', 'contracts/interfaces/IERC20WithPermit.sol', 'contracts/interfaces/IInitializableAToken.sol', 'contracts/interfaces/IInitializableDebtToken.sol', 'contracts/interfaces/IPool.sol', 'contracts/interfaces/IPoolAddressesProvider.sol', 'contracts/interfaces/IPriceOracleGetter.sol', 'contracts/interfaces/IPriceOracleSentinel.sol', 'contracts/interfaces/IReserveInterestRateStrategy.sol', 'contracts/interfaces/IScaledBalanceToken.sol', 'contracts/interfaces/IStableDebtToken.sol', 'contracts/interfaces/IVariableDebtToken.sol', 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol', 'contracts/protocol/libraries/configuration/UserConfiguration.sol', 'contracts/protocol/libraries/helpers/Errors.sol', 'contracts/protocol/libraries/helpers/Helpers.sol', 'contracts/protocol/libraries/logic/BorrowLogic.sol', 'contracts/protocol/libraries/logic/BridgeLogic.sol', 'contracts/protocol/libraries/logic/EModeLogic.sol', 'contracts/protocol/libraries/logic/FlashLoanLogic.sol', 'contracts/protocol/libraries/logic/GenericLogic.sol', 'contracts/protocol/libraries/logic/IsolationModeLogic.sol', 'contracts/protocol/libraries/logic/LiquidationLogic.sol', 'contracts/protocol/libraries/logic/ReserveLogic.sol', 'contracts/protocol/libraries/logic/SupplyLogic.sol', 'contracts/protocol/libraries/logic/ValidationLogic.sol', 'contracts/protocol/libraries/math/MathUtils.sol', 'contracts/protocol/libraries/math/PercentageMath.sol', 'contracts/protocol/libraries/math/WadRayMath.sol', 'contracts/protocol/libraries/types/DataTypes.sol', 'contracts/protocol/pool/Pool.sol', 'contracts/protocol/pool/PoolStorage.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IScaledBalanceToken.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/Certora/harness/PoolHarness.sol', 'contracts/dependencies/openzeppelin/contracts/Address.sol', 'contracts/dependencies/openzeppelin/contracts/IERC20.sol', 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', 'contracts/flashloan/interfaces/IFlashLoanReceiver.sol', 'contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol', 'contracts/interfaces/IACLManager.sol', 'contracts/interfaces/IAToken.sol', 'contracts/interfaces/IAaveIncentivesController.sol', 'contracts/interfaces/IERC20WithPermit.sol', 'contracts/interfaces/IInitializableAToken.sol', 'contracts/interfaces/IInitializableDebtToken.sol', 'contracts/interfaces/IPool.sol', 'contracts/interfaces/IPoolAddressesProvider.sol', 'contracts/interfaces/IPriceOracleGetter.sol', 'contracts/interfaces/IPriceOracleSentinel.sol', 'contracts/interfaces/IReserveInterestRateStrategy.sol', 'contracts/interfaces/IScaledBalanceToken.sol', 'contracts/interfaces/IStableDebtToken.sol', 'contracts/interfaces/IVariableDebtToken.sol', 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol', 'contracts/protocol/libraries/configuration/UserConfiguration.sol', 'contracts/protocol/libraries/helpers/Errors.sol', 'contracts/protocol/libraries/helpers/Helpers.sol', 'contracts/protocol/libraries/logic/BorrowLogic.sol', 'contracts/protocol/libraries/logic/BridgeLogic.sol', 'contracts/protocol/libraries/logic/EModeLogic.sol', 'contracts/protocol/libraries/logic/FlashLoanLogic.sol', 'contracts/protocol/libraries/logic/GenericLogic.sol', 'contracts/protocol/libraries/logic/IsolationModeLogic.sol', 'contracts/protocol/libraries/logic/LiquidationLogic.sol', 'contracts/protocol/libraries/logic/ReserveLogic.sol', 'contracts/protocol/libraries/logic/SupplyLogic.sol', 'contracts/protocol/libraries/logic/ValidationLogic.sol', 'contracts/protocol/libraries/math/MathUtils.sol', 'contracts/protocol/libraries/math/PercentageMath.sol', 'contracts/protocol/libraries/math/WadRayMath.sol', 'contracts/protocol/libraries/types/DataTypes.sol', 'contracts/protocol/pool/Pool.sol', 'contracts/protocol/pool/PoolStorage.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/IERC20.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/Certora/harness/PoolHarness.sol', 'contracts/dependencies/openzeppelin/contracts/Address.sol', 'contracts/dependencies/openzeppelin/contracts/IERC20.sol', 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', 'contracts/flashloan/interfaces/IFlashLoanReceiver.sol', 'contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol', 'contracts/interfaces/IACLManager.sol', 'contracts/interfaces/IAToken.sol', 'contracts/interfaces/IAaveIncentivesController.sol', 'contracts/interfaces/IERC20WithPermit.sol', 'contracts/interfaces/IInitializableAToken.sol', 'contracts/interfaces/IInitializableDebtToken.sol', 'contracts/interfaces/IPool.sol', 'contracts/interfaces/IPoolAddressesProvider.sol', 'contracts/interfaces/IPriceOracleGetter.sol', 'contracts/interfaces/IPriceOracleSentinel.sol', 'contracts/interfaces/IReserveInterestRateStrategy.sol', 'contracts/interfaces/IScaledBalanceToken.sol', 'contracts/interfaces/IStableDebtToken.sol', 'contracts/interfaces/IVariableDebtToken.sol', 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol', 'contracts/protocol/libraries/configuration/UserConfiguration.sol', 'contracts/protocol/libraries/helpers/Errors.sol', 'contracts/protocol/libraries/helpers/Helpers.sol', 'contracts/protocol/libraries/logic/BorrowLogic.sol', 'contracts/protocol/libraries/logic/BridgeLogic.sol', 'contracts/protocol/libraries/logic/EModeLogic.sol', 'contracts/protocol/libraries/logic/FlashLoanLogic.sol', 'contracts/protocol/libraries/logic/GenericLogic.sol', 'contracts/protocol/libraries/logic/IsolationModeLogic.sol', 'contracts/protocol/libraries/logic/LiquidationLogic.sol', 'contracts/protocol/libraries/logic/ReserveLogic.sol', 'contracts/protocol/libraries/logic/SupplyLogic.sol', 'contracts/protocol/libraries/logic/ValidationLogic.sol', 'contracts/protocol/libraries/math/MathUtils.sol', 'contracts/protocol/libraries/math/PercentageMath.sol', 'contracts/protocol/libraries/math/WadRayMath.sol', 'contracts/protocol/libraries/types/DataTypes.sol', 'contracts/protocol/pool/Pool.sol', 'contracts/protocol/pool/PoolStorage.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IAToken.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/Certora/harness/PoolHarness.sol', 'contracts/dependencies/openzeppelin/contracts/Address.sol', 'contracts/dependencies/openzeppelin/contracts/IERC20.sol', 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', 'contracts/flashloan/interfaces/IFlashLoanReceiver.sol', 'contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol', 'contracts/interfaces/IACLManager.sol', 'contracts/interfaces/IAToken.sol', 'contracts/interfaces/IAaveIncentivesController.sol', 'contracts/interfaces/IERC20WithPermit.sol', 'contracts/interfaces/IInitializableAToken.sol', 'contracts/interfaces/IInitializableDebtToken.sol', 'contracts/interfaces/IPool.sol', 'contracts/interfaces/IPoolAddressesProvider.sol', 'contracts/interfaces/IPriceOracleGetter.sol', 'contracts/interfaces/IPriceOracleSentinel.sol', 'contracts/interfaces/IReserveInterestRateStrategy.sol', 'contracts/interfaces/IScaledBalanceToken.sol', 'contracts/interfaces/IStableDebtToken.sol', 'contracts/interfaces/IVariableDebtToken.sol', 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol', 'contracts/protocol/libraries/configuration/UserConfiguration.sol', 'contracts/protocol/libraries/helpers/Errors.sol', 'contracts/protocol/libraries/helpers/Helpers.sol', 'contracts/protocol/libraries/logic/BorrowLogic.sol', 'contracts/protocol/libraries/logic/BridgeLogic.sol', 'contracts/protocol/libraries/logic/EModeLogic.sol', 'contracts/protocol/libraries/logic/FlashLoanLogic.sol', 'contracts/protocol/libraries/logic/GenericLogic.sol', 'contracts/protocol/libraries/logic/IsolationModeLogic.sol', 'contracts/protocol/libraries/logic/LiquidationLogic.sol', 'contracts/protocol/libraries/logic/ReserveLogic.sol', 'contracts/protocol/libraries/logic/SupplyLogic.sol', 'contracts/protocol/libraries/logic/ValidationLogic.sol', 'contracts/protocol/libraries/math/MathUtils.sol', 'contracts/protocol/libraries/math/PercentageMath.sol', 'contracts/protocol/libraries/math/WadRayMath.sol', 'contracts/protocol/libraries/types/DataTypes.sol', 'contracts/protocol/pool/Pool.sol', 'contracts/protocol/pool/PoolStorage.sol'])
Adding a base contract link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IInitializableAToken.sol to worklist
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IInitializableAToken.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/Certora/harness/PoolHarness.sol', 'contracts/dependencies/openzeppelin/contracts/Address.sol', 'contracts/dependencies/openzeppelin/contracts/IERC20.sol', 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', 'contracts/flashloan/interfaces/IFlashLoanReceiver.sol', 'contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol', 'contracts/interfaces/IACLManager.sol', 'contracts/interfaces/IAToken.sol', 'contracts/interfaces/IAaveIncentivesController.sol', 'contracts/interfaces/IERC20WithPermit.sol', 'contracts/interfaces/IInitializableAToken.sol', 'contracts/interfaces/IInitializableDebtToken.sol', 'contracts/interfaces/IPool.sol', 'contracts/interfaces/IPoolAddressesProvider.sol', 'contracts/interfaces/IPriceOracleGetter.sol', 'contracts/interfaces/IPriceOracleSentinel.sol', 'contracts/interfaces/IReserveInterestRateStrategy.sol', 'contracts/interfaces/IScaledBalanceToken.sol', 'contracts/interfaces/IStableDebtToken.sol', 'contracts/interfaces/IVariableDebtToken.sol', 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol', 'contracts/protocol/libraries/configuration/UserConfiguration.sol', 'contracts/protocol/libraries/helpers/Errors.sol', 'contracts/protocol/libraries/helpers/Helpers.sol', 'contracts/protocol/libraries/logic/BorrowLogic.sol', 'contracts/protocol/libraries/logic/BridgeLogic.sol', 'contracts/protocol/libraries/logic/EModeLogic.sol', 'contracts/protocol/libraries/logic/FlashLoanLogic.sol', 'contracts/protocol/libraries/logic/GenericLogic.sol', 'contracts/protocol/libraries/logic/IsolationModeLogic.sol', 'contracts/protocol/libraries/logic/LiquidationLogic.sol', 'contracts/protocol/libraries/logic/ReserveLogic.sol', 'contracts/protocol/libraries/logic/SupplyLogic.sol', 'contracts/protocol/libraries/logic/ValidationLogic.sol', 'contracts/protocol/libraries/math/MathUtils.sol', 'contracts/protocol/libraries/math/PercentageMath.sol', 'contracts/protocol/libraries/math/WadRayMath.sol', 'contracts/protocol/libraries/types/DataTypes.sol', 'contracts/protocol/pool/Pool.sol', 'contracts/protocol/pool/PoolStorage.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/LiquidationLogic.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/Certora/harness/PoolHarness.sol', 'contracts/dependencies/openzeppelin/contracts/Address.sol', 'contracts/dependencies/openzeppelin/contracts/IERC20.sol', 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', 'contracts/flashloan/interfaces/IFlashLoanReceiver.sol', 'contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol', 'contracts/interfaces/IACLManager.sol', 'contracts/interfaces/IAToken.sol', 'contracts/interfaces/IAaveIncentivesController.sol', 'contracts/interfaces/IERC20WithPermit.sol', 'contracts/interfaces/IInitializableAToken.sol', 'contracts/interfaces/IInitializableDebtToken.sol', 'contracts/interfaces/IPool.sol', 'contracts/interfaces/IPoolAddressesProvider.sol', 'contracts/interfaces/IPriceOracleGetter.sol', 'contracts/interfaces/IPriceOracleSentinel.sol', 'contracts/interfaces/IReserveInterestRateStrategy.sol', 'contracts/interfaces/IScaledBalanceToken.sol', 'contracts/interfaces/IStableDebtToken.sol', 'contracts/interfaces/IVariableDebtToken.sol', 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol', 'contracts/protocol/libraries/configuration/UserConfiguration.sol', 'contracts/protocol/libraries/helpers/Errors.sol', 'contracts/protocol/libraries/helpers/Helpers.sol', 'contracts/protocol/libraries/logic/BorrowLogic.sol', 'contracts/protocol/libraries/logic/BridgeLogic.sol', 'contracts/protocol/libraries/logic/EModeLogic.sol', 'contracts/protocol/libraries/logic/FlashLoanLogic.sol', 'contracts/protocol/libraries/logic/GenericLogic.sol', 'contracts/protocol/libraries/logic/IsolationModeLogic.sol', 'contracts/protocol/libraries/logic/LiquidationLogic.sol', 'contracts/protocol/libraries/logic/ReserveLogic.sol', 'contracts/protocol/libraries/logic/SupplyLogic.sol', 'contracts/protocol/libraries/logic/ValidationLogic.sol', 'contracts/protocol/libraries/math/MathUtils.sol', 'contracts/protocol/libraries/math/PercentageMath.sol', 'contracts/protocol/libraries/math/WadRayMath.sol', 'contracts/protocol/libraries/types/DataTypes.sol', 'contracts/protocol/pool/Pool.sol', 'contracts/protocol/pool/PoolStorage.sol'])
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IVariableDebtToken.sol to worklist
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/IsolationModeLogic.sol to worklist
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/IsolationModeLogic.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/Certora/harness/PoolHarness.sol', 'contracts/dependencies/openzeppelin/contracts/Address.sol', 'contracts/dependencies/openzeppelin/contracts/IERC20.sol', 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', 'contracts/flashloan/interfaces/IFlashLoanReceiver.sol', 'contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol', 'contracts/interfaces/IACLManager.sol', 'contracts/interfaces/IAToken.sol', 'contracts/interfaces/IAaveIncentivesController.sol', 'contracts/interfaces/IERC20WithPermit.sol', 'contracts/interfaces/IInitializableAToken.sol', 'contracts/interfaces/IInitializableDebtToken.sol', 'contracts/interfaces/IPool.sol', 'contracts/interfaces/IPoolAddressesProvider.sol', 'contracts/interfaces/IPriceOracleGetter.sol', 'contracts/interfaces/IPriceOracleSentinel.sol', 'contracts/interfaces/IReserveInterestRateStrategy.sol', 'contracts/interfaces/IScaledBalanceToken.sol', 'contracts/interfaces/IStableDebtToken.sol', 'contracts/interfaces/IVariableDebtToken.sol', 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol', 'contracts/protocol/libraries/configuration/UserConfiguration.sol', 'contracts/protocol/libraries/helpers/Errors.sol', 'contracts/protocol/libraries/helpers/Helpers.sol', 'contracts/protocol/libraries/logic/BorrowLogic.sol', 'contracts/protocol/libraries/logic/BridgeLogic.sol', 'contracts/protocol/libraries/logic/EModeLogic.sol', 'contracts/protocol/libraries/logic/FlashLoanLogic.sol', 'contracts/protocol/libraries/logic/GenericLogic.sol', 'contracts/protocol/libraries/logic/IsolationModeLogic.sol', 'contracts/protocol/libraries/logic/LiquidationLogic.sol', 'contracts/protocol/libraries/logic/ReserveLogic.sol', 'contracts/protocol/libraries/logic/SupplyLogic.sol', 'contracts/protocol/libraries/logic/ValidationLogic.sol', 'contracts/protocol/libraries/math/MathUtils.sol', 'contracts/protocol/libraries/math/PercentageMath.sol', 'contracts/protocol/libraries/math/WadRayMath.sol', 'contracts/protocol/libraries/types/DataTypes.sol', 'contracts/protocol/pool/Pool.sol', 'contracts/protocol/pool/PoolStorage.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IVariableDebtToken.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/Certora/harness/PoolHarness.sol', 'contracts/dependencies/openzeppelin/contracts/Address.sol', 'contracts/dependencies/openzeppelin/contracts/IERC20.sol', 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', 'contracts/flashloan/interfaces/IFlashLoanReceiver.sol', 'contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol', 'contracts/interfaces/IACLManager.sol', 'contracts/interfaces/IAToken.sol', 'contracts/interfaces/IAaveIncentivesController.sol', 'contracts/interfaces/IERC20WithPermit.sol', 'contracts/interfaces/IInitializableAToken.sol', 'contracts/interfaces/IInitializableDebtToken.sol', 'contracts/interfaces/IPool.sol', 'contracts/interfaces/IPoolAddressesProvider.sol', 'contracts/interfaces/IPriceOracleGetter.sol', 'contracts/interfaces/IPriceOracleSentinel.sol', 'contracts/interfaces/IReserveInterestRateStrategy.sol', 'contracts/interfaces/IScaledBalanceToken.sol', 'contracts/interfaces/IStableDebtToken.sol', 'contracts/interfaces/IVariableDebtToken.sol', 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol', 'contracts/protocol/libraries/configuration/UserConfiguration.sol', 'contracts/protocol/libraries/helpers/Errors.sol', 'contracts/protocol/libraries/helpers/Helpers.sol', 'contracts/protocol/libraries/logic/BorrowLogic.sol', 'contracts/protocol/libraries/logic/BridgeLogic.sol', 'contracts/protocol/libraries/logic/EModeLogic.sol', 'contracts/protocol/libraries/logic/FlashLoanLogic.sol', 'contracts/protocol/libraries/logic/GenericLogic.sol', 'contracts/protocol/libraries/logic/IsolationModeLogic.sol', 'contracts/protocol/libraries/logic/LiquidationLogic.sol', 'contracts/protocol/libraries/logic/ReserveLogic.sol', 'contracts/protocol/libraries/logic/SupplyLogic.sol', 'contracts/protocol/libraries/logic/ValidationLogic.sol', 'contracts/protocol/libraries/math/MathUtils.sol', 'contracts/protocol/libraries/math/PercentageMath.sol', 'contracts/protocol/libraries/math/WadRayMath.sol', 'contracts/protocol/libraries/types/DataTypes.sol', 'contracts/protocol/pool/Pool.sol', 'contracts/protocol/pool/PoolStorage.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/FlashLoanLogic.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/Certora/harness/PoolHarness.sol', 'contracts/dependencies/openzeppelin/contracts/Address.sol', 'contracts/dependencies/openzeppelin/contracts/IERC20.sol', 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', 'contracts/flashloan/interfaces/IFlashLoanReceiver.sol', 'contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol', 'contracts/interfaces/IACLManager.sol', 'contracts/interfaces/IAToken.sol', 'contracts/interfaces/IAaveIncentivesController.sol', 'contracts/interfaces/IERC20WithPermit.sol', 'contracts/interfaces/IInitializableAToken.sol', 'contracts/interfaces/IInitializableDebtToken.sol', 'contracts/interfaces/IPool.sol', 'contracts/interfaces/IPoolAddressesProvider.sol', 'contracts/interfaces/IPriceOracleGetter.sol', 'contracts/interfaces/IPriceOracleSentinel.sol', 'contracts/interfaces/IReserveInterestRateStrategy.sol', 'contracts/interfaces/IScaledBalanceToken.sol', 'contracts/interfaces/IStableDebtToken.sol', 'contracts/interfaces/IVariableDebtToken.sol', 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol', 'contracts/protocol/libraries/configuration/UserConfiguration.sol', 'contracts/protocol/libraries/helpers/Errors.sol', 'contracts/protocol/libraries/helpers/Helpers.sol', 'contracts/protocol/libraries/logic/BorrowLogic.sol', 'contracts/protocol/libraries/logic/BridgeLogic.sol', 'contracts/protocol/libraries/logic/EModeLogic.sol', 'contracts/protocol/libraries/logic/FlashLoanLogic.sol', 'contracts/protocol/libraries/logic/GenericLogic.sol', 'contracts/protocol/libraries/logic/IsolationModeLogic.sol', 'contracts/protocol/libraries/logic/LiquidationLogic.sol', 'contracts/protocol/libraries/logic/ReserveLogic.sol', 'contracts/protocol/libraries/logic/SupplyLogic.sol', 'contracts/protocol/libraries/logic/ValidationLogic.sol', 'contracts/protocol/libraries/math/MathUtils.sol', 'contracts/protocol/libraries/math/PercentageMath.sol', 'contracts/protocol/libraries/math/WadRayMath.sol', 'contracts/protocol/libraries/types/DataTypes.sol', 'contracts/protocol/pool/Pool.sol', 'contracts/protocol/pool/PoolStorage.sol'])
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/flashloan/interfaces/IFlashLoanReceiver.sol to worklist
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol to worklist
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPoolAddressesProvider.sol to worklist
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPoolAddressesProvider.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/Certora/harness/PoolHarness.sol', 'contracts/dependencies/openzeppelin/contracts/Address.sol', 'contracts/dependencies/openzeppelin/contracts/IERC20.sol', 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', 'contracts/flashloan/interfaces/IFlashLoanReceiver.sol', 'contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol', 'contracts/interfaces/IACLManager.sol', 'contracts/interfaces/IAToken.sol', 'contracts/interfaces/IAaveIncentivesController.sol', 'contracts/interfaces/IERC20WithPermit.sol', 'contracts/interfaces/IInitializableAToken.sol', 'contracts/interfaces/IInitializableDebtToken.sol', 'contracts/interfaces/IPool.sol', 'contracts/interfaces/IPoolAddressesProvider.sol', 'contracts/interfaces/IPriceOracleGetter.sol', 'contracts/interfaces/IPriceOracleSentinel.sol', 'contracts/interfaces/IReserveInterestRateStrategy.sol', 'contracts/interfaces/IScaledBalanceToken.sol', 'contracts/interfaces/IStableDebtToken.sol', 'contracts/interfaces/IVariableDebtToken.sol', 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol', 'contracts/protocol/libraries/configuration/UserConfiguration.sol', 'contracts/protocol/libraries/helpers/Errors.sol', 'contracts/protocol/libraries/helpers/Helpers.sol', 'contracts/protocol/libraries/logic/BorrowLogic.sol', 'contracts/protocol/libraries/logic/BridgeLogic.sol', 'contracts/protocol/libraries/logic/EModeLogic.sol', 'contracts/protocol/libraries/logic/FlashLoanLogic.sol', 'contracts/protocol/libraries/logic/GenericLogic.sol', 'contracts/protocol/libraries/logic/IsolationModeLogic.sol', 'contracts/protocol/libraries/logic/LiquidationLogic.sol', 'contracts/protocol/libraries/logic/ReserveLogic.sol', 'contracts/protocol/libraries/logic/SupplyLogic.sol', 'contracts/protocol/libraries/logic/ValidationLogic.sol', 'contracts/protocol/libraries/math/MathUtils.sol', 'contracts/protocol/libraries/math/PercentageMath.sol', 'contracts/protocol/libraries/math/WadRayMath.sol', 'contracts/protocol/libraries/types/DataTypes.sol', 'contracts/protocol/pool/Pool.sol', 'contracts/protocol/pool/PoolStorage.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/Certora/harness/PoolHarness.sol', 'contracts/dependencies/openzeppelin/contracts/Address.sol', 'contracts/dependencies/openzeppelin/contracts/IERC20.sol', 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', 'contracts/flashloan/interfaces/IFlashLoanReceiver.sol', 'contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol', 'contracts/interfaces/IACLManager.sol', 'contracts/interfaces/IAToken.sol', 'contracts/interfaces/IAaveIncentivesController.sol', 'contracts/interfaces/IERC20WithPermit.sol', 'contracts/interfaces/IInitializableAToken.sol', 'contracts/interfaces/IInitializableDebtToken.sol', 'contracts/interfaces/IPool.sol', 'contracts/interfaces/IPoolAddressesProvider.sol', 'contracts/interfaces/IPriceOracleGetter.sol', 'contracts/interfaces/IPriceOracleSentinel.sol', 'contracts/interfaces/IReserveInterestRateStrategy.sol', 'contracts/interfaces/IScaledBalanceToken.sol', 'contracts/interfaces/IStableDebtToken.sol', 'contracts/interfaces/IVariableDebtToken.sol', 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol', 'contracts/protocol/libraries/configuration/UserConfiguration.sol', 'contracts/protocol/libraries/helpers/Errors.sol', 'contracts/protocol/libraries/helpers/Helpers.sol', 'contracts/protocol/libraries/logic/BorrowLogic.sol', 'contracts/protocol/libraries/logic/BridgeLogic.sol', 'contracts/protocol/libraries/logic/EModeLogic.sol', 'contracts/protocol/libraries/logic/FlashLoanLogic.sol', 'contracts/protocol/libraries/logic/GenericLogic.sol', 'contracts/protocol/libraries/logic/IsolationModeLogic.sol', 'contracts/protocol/libraries/logic/LiquidationLogic.sol', 'contracts/protocol/libraries/logic/ReserveLogic.sol', 'contracts/protocol/libraries/logic/SupplyLogic.sol', 'contracts/protocol/libraries/logic/ValidationLogic.sol', 'contracts/protocol/libraries/math/MathUtils.sol', 'contracts/protocol/libraries/math/PercentageMath.sol', 'contracts/protocol/libraries/math/WadRayMath.sol', 'contracts/protocol/libraries/types/DataTypes.sol', 'contracts/protocol/pool/Pool.sol', 'contracts/protocol/pool/PoolStorage.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/flashloan/interfaces/IFlashLoanReceiver.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/Certora/harness/PoolHarness.sol', 'contracts/dependencies/openzeppelin/contracts/Address.sol', 'contracts/dependencies/openzeppelin/contracts/IERC20.sol', 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', 'contracts/flashloan/interfaces/IFlashLoanReceiver.sol', 'contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol', 'contracts/interfaces/IACLManager.sol', 'contracts/interfaces/IAToken.sol', 'contracts/interfaces/IAaveIncentivesController.sol', 'contracts/interfaces/IERC20WithPermit.sol', 'contracts/interfaces/IInitializableAToken.sol', 'contracts/interfaces/IInitializableDebtToken.sol', 'contracts/interfaces/IPool.sol', 'contracts/interfaces/IPoolAddressesProvider.sol', 'contracts/interfaces/IPriceOracleGetter.sol', 'contracts/interfaces/IPriceOracleSentinel.sol', 'contracts/interfaces/IReserveInterestRateStrategy.sol', 'contracts/interfaces/IScaledBalanceToken.sol', 'contracts/interfaces/IStableDebtToken.sol', 'contracts/interfaces/IVariableDebtToken.sol', 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol', 'contracts/protocol/libraries/configuration/UserConfiguration.sol', 'contracts/protocol/libraries/helpers/Errors.sol', 'contracts/protocol/libraries/helpers/Helpers.sol', 'contracts/protocol/libraries/logic/BorrowLogic.sol', 'contracts/protocol/libraries/logic/BridgeLogic.sol', 'contracts/protocol/libraries/logic/EModeLogic.sol', 'contracts/protocol/libraries/logic/FlashLoanLogic.sol', 'contracts/protocol/libraries/logic/GenericLogic.sol', 'contracts/protocol/libraries/logic/IsolationModeLogic.sol', 'contracts/protocol/libraries/logic/LiquidationLogic.sol', 'contracts/protocol/libraries/logic/ReserveLogic.sol', 'contracts/protocol/libraries/logic/SupplyLogic.sol', 'contracts/protocol/libraries/logic/ValidationLogic.sol', 'contracts/protocol/libraries/math/MathUtils.sol', 'contracts/protocol/libraries/math/PercentageMath.sol', 'contracts/protocol/libraries/math/WadRayMath.sol', 'contracts/protocol/libraries/types/DataTypes.sol', 'contracts/protocol/pool/Pool.sol', 'contracts/protocol/pool/PoolStorage.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/EModeLogic.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/Certora/harness/PoolHarness.sol', 'contracts/dependencies/openzeppelin/contracts/Address.sol', 'contracts/dependencies/openzeppelin/contracts/IERC20.sol', 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', 'contracts/flashloan/interfaces/IFlashLoanReceiver.sol', 'contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol', 'contracts/interfaces/IACLManager.sol', 'contracts/interfaces/IAToken.sol', 'contracts/interfaces/IAaveIncentivesController.sol', 'contracts/interfaces/IERC20WithPermit.sol', 'contracts/interfaces/IInitializableAToken.sol', 'contracts/interfaces/IInitializableDebtToken.sol', 'contracts/interfaces/IPool.sol', 'contracts/interfaces/IPoolAddressesProvider.sol', 'contracts/interfaces/IPriceOracleGetter.sol', 'contracts/interfaces/IPriceOracleSentinel.sol', 'contracts/interfaces/IReserveInterestRateStrategy.sol', 'contracts/interfaces/IScaledBalanceToken.sol', 'contracts/interfaces/IStableDebtToken.sol', 'contracts/interfaces/IVariableDebtToken.sol', 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol', 'contracts/protocol/libraries/configuration/UserConfiguration.sol', 'contracts/protocol/libraries/helpers/Errors.sol', 'contracts/protocol/libraries/helpers/Helpers.sol', 'contracts/protocol/libraries/logic/BorrowLogic.sol', 'contracts/protocol/libraries/logic/BridgeLogic.sol', 'contracts/protocol/libraries/logic/EModeLogic.sol', 'contracts/protocol/libraries/logic/FlashLoanLogic.sol', 'contracts/protocol/libraries/logic/GenericLogic.sol', 'contracts/protocol/libraries/logic/IsolationModeLogic.sol', 'contracts/protocol/libraries/logic/LiquidationLogic.sol', 'contracts/protocol/libraries/logic/ReserveLogic.sol', 'contracts/protocol/libraries/logic/SupplyLogic.sol', 'contracts/protocol/libraries/logic/ValidationLogic.sol', 'contracts/protocol/libraries/math/MathUtils.sol', 'contracts/protocol/libraries/math/PercentageMath.sol', 'contracts/protocol/libraries/math/WadRayMath.sol', 'contracts/protocol/libraries/types/DataTypes.sol', 'contracts/protocol/pool/Pool.sol', 'contracts/protocol/pool/PoolStorage.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/BridgeLogic.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/Certora/harness/PoolHarness.sol', 'contracts/dependencies/openzeppelin/contracts/Address.sol', 'contracts/dependencies/openzeppelin/contracts/IERC20.sol', 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', 'contracts/flashloan/interfaces/IFlashLoanReceiver.sol', 'contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol', 'contracts/interfaces/IACLManager.sol', 'contracts/interfaces/IAToken.sol', 'contracts/interfaces/IAaveIncentivesController.sol', 'contracts/interfaces/IERC20WithPermit.sol', 'contracts/interfaces/IInitializableAToken.sol', 'contracts/interfaces/IInitializableDebtToken.sol', 'contracts/interfaces/IPool.sol', 'contracts/interfaces/IPoolAddressesProvider.sol', 'contracts/interfaces/IPriceOracleGetter.sol', 'contracts/interfaces/IPriceOracleSentinel.sol', 'contracts/interfaces/IReserveInterestRateStrategy.sol', 'contracts/interfaces/IScaledBalanceToken.sol', 'contracts/interfaces/IStableDebtToken.sol', 'contracts/interfaces/IVariableDebtToken.sol', 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol', 'contracts/protocol/libraries/configuration/UserConfiguration.sol', 'contracts/protocol/libraries/helpers/Errors.sol', 'contracts/protocol/libraries/helpers/Helpers.sol', 'contracts/protocol/libraries/logic/BorrowLogic.sol', 'contracts/protocol/libraries/logic/BridgeLogic.sol', 'contracts/protocol/libraries/logic/EModeLogic.sol', 'contracts/protocol/libraries/logic/FlashLoanLogic.sol', 'contracts/protocol/libraries/logic/GenericLogic.sol', 'contracts/protocol/libraries/logic/IsolationModeLogic.sol', 'contracts/protocol/libraries/logic/LiquidationLogic.sol', 'contracts/protocol/libraries/logic/ReserveLogic.sol', 'contracts/protocol/libraries/logic/SupplyLogic.sol', 'contracts/protocol/libraries/logic/ValidationLogic.sol', 'contracts/protocol/libraries/math/MathUtils.sol', 'contracts/protocol/libraries/math/PercentageMath.sol', 'contracts/protocol/libraries/math/WadRayMath.sol', 'contracts/protocol/libraries/types/DataTypes.sol', 'contracts/protocol/pool/Pool.sol', 'contracts/protocol/pool/PoolStorage.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/BorrowLogic.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/Certora/harness/PoolHarness.sol', 'contracts/dependencies/openzeppelin/contracts/Address.sol', 'contracts/dependencies/openzeppelin/contracts/IERC20.sol', 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', 'contracts/flashloan/interfaces/IFlashLoanReceiver.sol', 'contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol', 'contracts/interfaces/IACLManager.sol', 'contracts/interfaces/IAToken.sol', 'contracts/interfaces/IAaveIncentivesController.sol', 'contracts/interfaces/IERC20WithPermit.sol', 'contracts/interfaces/IInitializableAToken.sol', 'contracts/interfaces/IInitializableDebtToken.sol', 'contracts/interfaces/IPool.sol', 'contracts/interfaces/IPoolAddressesProvider.sol', 'contracts/interfaces/IPriceOracleGetter.sol', 'contracts/interfaces/IPriceOracleSentinel.sol', 'contracts/interfaces/IReserveInterestRateStrategy.sol', 'contracts/interfaces/IScaledBalanceToken.sol', 'contracts/interfaces/IStableDebtToken.sol', 'contracts/interfaces/IVariableDebtToken.sol', 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol', 'contracts/protocol/libraries/configuration/UserConfiguration.sol', 'contracts/protocol/libraries/helpers/Errors.sol', 'contracts/protocol/libraries/helpers/Helpers.sol', 'contracts/protocol/libraries/logic/BorrowLogic.sol', 'contracts/protocol/libraries/logic/BridgeLogic.sol', 'contracts/protocol/libraries/logic/EModeLogic.sol', 'contracts/protocol/libraries/logic/FlashLoanLogic.sol', 'contracts/protocol/libraries/logic/GenericLogic.sol', 'contracts/protocol/libraries/logic/IsolationModeLogic.sol', 'contracts/protocol/libraries/logic/LiquidationLogic.sol', 'contracts/protocol/libraries/logic/ReserveLogic.sol', 'contracts/protocol/libraries/logic/SupplyLogic.sol', 'contracts/protocol/libraries/logic/ValidationLogic.sol', 'contracts/protocol/libraries/math/MathUtils.sol', 'contracts/protocol/libraries/math/PercentageMath.sol', 'contracts/protocol/libraries/math/WadRayMath.sol', 'contracts/protocol/libraries/types/DataTypes.sol', 'contracts/protocol/pool/Pool.sol', 'contracts/protocol/pool/PoolStorage.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/pool/PoolStorage.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/Certora/harness/PoolHarness.sol', 'contracts/dependencies/openzeppelin/contracts/Address.sol', 'contracts/dependencies/openzeppelin/contracts/IERC20.sol', 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', 'contracts/flashloan/interfaces/IFlashLoanReceiver.sol', 'contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol', 'contracts/interfaces/IACLManager.sol', 'contracts/interfaces/IAToken.sol', 'contracts/interfaces/IAaveIncentivesController.sol', 'contracts/interfaces/IERC20WithPermit.sol', 'contracts/interfaces/IInitializableAToken.sol', 'contracts/interfaces/IInitializableDebtToken.sol', 'contracts/interfaces/IPool.sol', 'contracts/interfaces/IPoolAddressesProvider.sol', 'contracts/interfaces/IPriceOracleGetter.sol', 'contracts/interfaces/IPriceOracleSentinel.sol', 'contracts/interfaces/IReserveInterestRateStrategy.sol', 'contracts/interfaces/IScaledBalanceToken.sol', 'contracts/interfaces/IStableDebtToken.sol', 'contracts/interfaces/IVariableDebtToken.sol', 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol', 'contracts/protocol/libraries/configuration/UserConfiguration.sol', 'contracts/protocol/libraries/helpers/Errors.sol', 'contracts/protocol/libraries/helpers/Helpers.sol', 'contracts/protocol/libraries/logic/BorrowLogic.sol', 'contracts/protocol/libraries/logic/BridgeLogic.sol', 'contracts/protocol/libraries/logic/EModeLogic.sol', 'contracts/protocol/libraries/logic/FlashLoanLogic.sol', 'contracts/protocol/libraries/logic/GenericLogic.sol', 'contracts/protocol/libraries/logic/IsolationModeLogic.sol', 'contracts/protocol/libraries/logic/LiquidationLogic.sol', 'contracts/protocol/libraries/logic/ReserveLogic.sol', 'contracts/protocol/libraries/logic/SupplyLogic.sol', 'contracts/protocol/libraries/logic/ValidationLogic.sol', 'contracts/protocol/libraries/math/MathUtils.sol', 'contracts/protocol/libraries/math/PercentageMath.sol', 'contracts/protocol/libraries/math/WadRayMath.sol', 'contracts/protocol/libraries/types/DataTypes.sol', 'contracts/protocol/pool/Pool.sol', 'contracts/protocol/pool/PoolStorage.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/pool/Pool.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/Certora/harness/PoolHarness.sol', 'contracts/dependencies/openzeppelin/contracts/Address.sol', 'contracts/dependencies/openzeppelin/contracts/IERC20.sol', 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', 'contracts/flashloan/interfaces/IFlashLoanReceiver.sol', 'contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol', 'contracts/interfaces/IACLManager.sol', 'contracts/interfaces/IAToken.sol', 'contracts/interfaces/IAaveIncentivesController.sol', 'contracts/interfaces/IERC20WithPermit.sol', 'contracts/interfaces/IInitializableAToken.sol', 'contracts/interfaces/IInitializableDebtToken.sol', 'contracts/interfaces/IPool.sol', 'contracts/interfaces/IPoolAddressesProvider.sol', 'contracts/interfaces/IPriceOracleGetter.sol', 'contracts/interfaces/IPriceOracleSentinel.sol', 'contracts/interfaces/IReserveInterestRateStrategy.sol', 'contracts/interfaces/IScaledBalanceToken.sol', 'contracts/interfaces/IStableDebtToken.sol', 'contracts/interfaces/IVariableDebtToken.sol', 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol', 'contracts/protocol/libraries/configuration/UserConfiguration.sol', 'contracts/protocol/libraries/helpers/Errors.sol', 'contracts/protocol/libraries/helpers/Helpers.sol', 'contracts/protocol/libraries/logic/BorrowLogic.sol', 'contracts/protocol/libraries/logic/BridgeLogic.sol', 'contracts/protocol/libraries/logic/EModeLogic.sol', 'contracts/protocol/libraries/logic/FlashLoanLogic.sol', 'contracts/protocol/libraries/logic/GenericLogic.sol', 'contracts/protocol/libraries/logic/IsolationModeLogic.sol', 'contracts/protocol/libraries/logic/LiquidationLogic.sol', 'contracts/protocol/libraries/logic/ReserveLogic.sol', 'contracts/protocol/libraries/logic/SupplyLogic.sol', 'contracts/protocol/libraries/logic/ValidationLogic.sol', 'contracts/protocol/libraries/math/MathUtils.sol', 'contracts/protocol/libraries/math/PercentageMath.sol', 'contracts/protocol/libraries/math/WadRayMath.sol', 'contracts/protocol/libraries/types/DataTypes.sol', 'contracts/protocol/pool/Pool.sol', 'contracts/protocol/pool/PoolStorage.sol'])
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IACLManager.sol to worklist
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IERC20WithPermit.sol to worklist
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IERC20WithPermit.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/Certora/harness/PoolHarness.sol', 'contracts/dependencies/openzeppelin/contracts/Address.sol', 'contracts/dependencies/openzeppelin/contracts/IERC20.sol', 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', 'contracts/flashloan/interfaces/IFlashLoanReceiver.sol', 'contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol', 'contracts/interfaces/IACLManager.sol', 'contracts/interfaces/IAToken.sol', 'contracts/interfaces/IAaveIncentivesController.sol', 'contracts/interfaces/IERC20WithPermit.sol', 'contracts/interfaces/IInitializableAToken.sol', 'contracts/interfaces/IInitializableDebtToken.sol', 'contracts/interfaces/IPool.sol', 'contracts/interfaces/IPoolAddressesProvider.sol', 'contracts/interfaces/IPriceOracleGetter.sol', 'contracts/interfaces/IPriceOracleSentinel.sol', 'contracts/interfaces/IReserveInterestRateStrategy.sol', 'contracts/interfaces/IScaledBalanceToken.sol', 'contracts/interfaces/IStableDebtToken.sol', 'contracts/interfaces/IVariableDebtToken.sol', 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol', 'contracts/protocol/libraries/configuration/UserConfiguration.sol', 'contracts/protocol/libraries/helpers/Errors.sol', 'contracts/protocol/libraries/helpers/Helpers.sol', 'contracts/protocol/libraries/logic/BorrowLogic.sol', 'contracts/protocol/libraries/logic/BridgeLogic.sol', 'contracts/protocol/libraries/logic/EModeLogic.sol', 'contracts/protocol/libraries/logic/FlashLoanLogic.sol', 'contracts/protocol/libraries/logic/GenericLogic.sol', 'contracts/protocol/libraries/logic/IsolationModeLogic.sol', 'contracts/protocol/libraries/logic/LiquidationLogic.sol', 'contracts/protocol/libraries/logic/ReserveLogic.sol', 'contracts/protocol/libraries/logic/SupplyLogic.sol', 'contracts/protocol/libraries/logic/ValidationLogic.sol', 'contracts/protocol/libraries/math/MathUtils.sol', 'contracts/protocol/libraries/math/PercentageMath.sol', 'contracts/protocol/libraries/math/WadRayMath.sol', 'contracts/protocol/libraries/types/DataTypes.sol', 'contracts/protocol/pool/Pool.sol', 'contracts/protocol/pool/PoolStorage.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IACLManager.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/Certora/harness/PoolHarness.sol', 'contracts/dependencies/openzeppelin/contracts/Address.sol', 'contracts/dependencies/openzeppelin/contracts/IERC20.sol', 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', 'contracts/flashloan/interfaces/IFlashLoanReceiver.sol', 'contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol', 'contracts/interfaces/IACLManager.sol', 'contracts/interfaces/IAToken.sol', 'contracts/interfaces/IAaveIncentivesController.sol', 'contracts/interfaces/IERC20WithPermit.sol', 'contracts/interfaces/IInitializableAToken.sol', 'contracts/interfaces/IInitializableDebtToken.sol', 'contracts/interfaces/IPool.sol', 'contracts/interfaces/IPoolAddressesProvider.sol', 'contracts/interfaces/IPriceOracleGetter.sol', 'contracts/interfaces/IPriceOracleSentinel.sol', 'contracts/interfaces/IReserveInterestRateStrategy.sol', 'contracts/interfaces/IScaledBalanceToken.sol', 'contracts/interfaces/IStableDebtToken.sol', 'contracts/interfaces/IVariableDebtToken.sol', 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol', 'contracts/protocol/libraries/configuration/UserConfiguration.sol', 'contracts/protocol/libraries/helpers/Errors.sol', 'contracts/protocol/libraries/helpers/Helpers.sol', 'contracts/protocol/libraries/logic/BorrowLogic.sol', 'contracts/protocol/libraries/logic/BridgeLogic.sol', 'contracts/protocol/libraries/logic/EModeLogic.sol', 'contracts/protocol/libraries/logic/FlashLoanLogic.sol', 'contracts/protocol/libraries/logic/GenericLogic.sol', 'contracts/protocol/libraries/logic/IsolationModeLogic.sol', 'contracts/protocol/libraries/logic/LiquidationLogic.sol', 'contracts/protocol/libraries/logic/ReserveLogic.sol', 'contracts/protocol/libraries/logic/SupplyLogic.sol', 'contracts/protocol/libraries/logic/ValidationLogic.sol', 'contracts/protocol/libraries/math/MathUtils.sol', 'contracts/protocol/libraries/math/PercentageMath.sol', 'contracts/protocol/libraries/math/WadRayMath.sol', 'contracts/protocol/libraries/types/DataTypes.sol', 'contracts/protocol/pool/Pool.sol', 'contracts/protocol/pool/PoolStorage.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/Certora/harness/PoolHarness.sol', 'contracts/dependencies/openzeppelin/contracts/Address.sol', 'contracts/dependencies/openzeppelin/contracts/IERC20.sol', 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', 'contracts/flashloan/interfaces/IFlashLoanReceiver.sol', 'contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol', 'contracts/interfaces/IACLManager.sol', 'contracts/interfaces/IAToken.sol', 'contracts/interfaces/IAaveIncentivesController.sol', 'contracts/interfaces/IERC20WithPermit.sol', 'contracts/interfaces/IInitializableAToken.sol', 'contracts/interfaces/IInitializableDebtToken.sol', 'contracts/interfaces/IPool.sol', 'contracts/interfaces/IPoolAddressesProvider.sol', 'contracts/interfaces/IPriceOracleGetter.sol', 'contracts/interfaces/IPriceOracleSentinel.sol', 'contracts/interfaces/IReserveInterestRateStrategy.sol', 'contracts/interfaces/IScaledBalanceToken.sol', 'contracts/interfaces/IStableDebtToken.sol', 'contracts/interfaces/IVariableDebtToken.sol', 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol', 'contracts/protocol/libraries/configuration/UserConfiguration.sol', 'contracts/protocol/libraries/helpers/Errors.sol', 'contracts/protocol/libraries/helpers/Helpers.sol', 'contracts/protocol/libraries/logic/BorrowLogic.sol', 'contracts/protocol/libraries/logic/BridgeLogic.sol', 'contracts/protocol/libraries/logic/EModeLogic.sol', 'contracts/protocol/libraries/logic/FlashLoanLogic.sol', 'contracts/protocol/libraries/logic/GenericLogic.sol', 'contracts/protocol/libraries/logic/IsolationModeLogic.sol', 'contracts/protocol/libraries/logic/LiquidationLogic.sol', 'contracts/protocol/libraries/logic/ReserveLogic.sol', 'contracts/protocol/libraries/logic/SupplyLogic.sol', 'contracts/protocol/libraries/logic/ValidationLogic.sol', 'contracts/protocol/libraries/math/MathUtils.sol', 'contracts/protocol/libraries/math/PercentageMath.sol', 'contracts/protocol/libraries/math/WadRayMath.sol', 'contracts/protocol/libraries/types/DataTypes.sol', 'contracts/protocol/pool/Pool.sol', 'contracts/protocol/pool/PoolStorage.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPool.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/Certora/harness/PoolHarness.sol', 'contracts/dependencies/openzeppelin/contracts/Address.sol', 'contracts/dependencies/openzeppelin/contracts/IERC20.sol', 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', 'contracts/flashloan/interfaces/IFlashLoanReceiver.sol', 'contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol', 'contracts/interfaces/IACLManager.sol', 'contracts/interfaces/IAToken.sol', 'contracts/interfaces/IAaveIncentivesController.sol', 'contracts/interfaces/IERC20WithPermit.sol', 'contracts/interfaces/IInitializableAToken.sol', 'contracts/interfaces/IInitializableDebtToken.sol', 'contracts/interfaces/IPool.sol', 'contracts/interfaces/IPoolAddressesProvider.sol', 'contracts/interfaces/IPriceOracleGetter.sol', 'contracts/interfaces/IPriceOracleSentinel.sol', 'contracts/interfaces/IReserveInterestRateStrategy.sol', 'contracts/interfaces/IScaledBalanceToken.sol', 'contracts/interfaces/IStableDebtToken.sol', 'contracts/interfaces/IVariableDebtToken.sol', 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol', 'contracts/protocol/libraries/configuration/UserConfiguration.sol', 'contracts/protocol/libraries/helpers/Errors.sol', 'contracts/protocol/libraries/helpers/Helpers.sol', 'contracts/protocol/libraries/logic/BorrowLogic.sol', 'contracts/protocol/libraries/logic/BridgeLogic.sol', 'contracts/protocol/libraries/logic/EModeLogic.sol', 'contracts/protocol/libraries/logic/FlashLoanLogic.sol', 'contracts/protocol/libraries/logic/GenericLogic.sol', 'contracts/protocol/libraries/logic/IsolationModeLogic.sol', 'contracts/protocol/libraries/logic/LiquidationLogic.sol', 'contracts/protocol/libraries/logic/ReserveLogic.sol', 'contracts/protocol/libraries/logic/SupplyLogic.sol', 'contracts/protocol/libraries/logic/ValidationLogic.sol', 'contracts/protocol/libraries/math/MathUtils.sol', 'contracts/protocol/libraries/math/PercentageMath.sol', 'contracts/protocol/libraries/math/WadRayMath.sol', 'contracts/protocol/libraries/types/DataTypes.sol', 'contracts/protocol/pool/Pool.sol', 'contracts/protocol/pool/PoolStorage.sol'])
Contracts in PoolHarness.sol_0 (file Certora/harness/PoolHarness.sol): ['PoolHarness']
Contracts with their chosen addresses: [(274184521717934524641157099916833587200, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/Certora/harness/PoolHarness.sol:PoolHarness'), (274184521717934524641157099916833587201, 'contracts/dependencies/openzeppelin/contracts/Address.sol:Address'), (274184521717934524641157099916833587202, 'contracts/dependencies/openzeppelin/contracts/IERC20.sol:IERC20'), (274184521717934524641157099916833587203, 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol:SafeERC20'), (274184521717934524641157099916833587204, 'contracts/flashloan/interfaces/IFlashLoanReceiver.sol:IFlashLoanReceiver'), (274184521717934524641157099916833587205, 'contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol:IFlashLoanSimpleReceiver'), (274184521717934524641157099916833587206, 'contracts/interfaces/IACLManager.sol:IACLManager'), (274184521717934524641157099916833587207, 'contracts/interfaces/IAToken.sol:IAToken'), (274184521717934524641157099916833587208, 'contracts/interfaces/IERC20WithPermit.sol:IERC20WithPermit'), (274184521717934524641157099916833587209, 'contracts/interfaces/IInitializableAToken.sol:IInitializableAToken'), (274184521717934524641157099916833587210, 'contracts/interfaces/IInitializableDebtToken.sol:IInitializableDebtToken'), (274184521717934524641157099916833587211, 'contracts/interfaces/IPool.sol:IPool'), (274184521717934524641157099916833587212, 'contracts/interfaces/IPoolAddressesProvider.sol:IPoolAddressesProvider'), (274184521717934524641157099916833587213, 'contracts/interfaces/IPriceOracleGetter.sol:IPriceOracleGetter'), (274184521717934524641157099916833587214, 'contracts/interfaces/IPriceOracleSentinel.sol:IPriceOracleSentinel'), (274184521717934524641157099916833587215, 'contracts/interfaces/IReserveInterestRateStrategy.sol:IReserveInterestRateStrategy'), (274184521717934524641157099916833587216, 'contracts/interfaces/IScaledBalanceToken.sol:IScaledBalanceToken'), (274184521717934524641157099916833587217, 'contracts/interfaces/IStableDebtToken.sol:IStableDebtToken'), (274184521717934524641157099916833587218, 'contracts/interfaces/IVariableDebtToken.sol:IVariableDebtToken'), (274184521717934524641157099916833587219, 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol:VersionedInitializable'), (274184521717934524641157099916833587220, 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol:ReserveConfiguration'), (274184521717934524641157099916833587221, 'contracts/protocol/libraries/configuration/UserConfiguration.sol:UserConfiguration'), (274184521717934524641157099916833587222, 'contracts/protocol/libraries/helpers/Helpers.sol:Helpers'), (274184521717934524641157099916833587223, 'contracts/protocol/libraries/logic/BorrowLogic.sol:BorrowLogic'), (274184521717934524641157099916833587224, 'contracts/protocol/libraries/logic/BridgeLogic.sol:BridgeLogic'), (274184521717934524641157099916833587225, 'contracts/protocol/libraries/logic/EModeLogic.sol:EModeLogic'), (274184521717934524641157099916833587226, 'contracts/protocol/libraries/logic/FlashLoanLogic.sol:FlashLoanLogic'), (274184521717934524641157099916833587227, 'contracts/protocol/libraries/logic/GenericLogic.sol:GenericLogic'), (274184521717934524641157099916833587228, 'contracts/protocol/libraries/logic/IsolationModeLogic.sol:IsolationModeLogic'), (274184521717934524641157099916833587229, 'contracts/protocol/libraries/logic/LiquidationLogic.sol:LiquidationLogic'), (274184521717934524641157099916833587230, 'contracts/protocol/libraries/logic/ReserveLogic.sol:ReserveLogic'), (274184521717934524641157099916833587231, 'contracts/protocol/libraries/logic/SupplyLogic.sol:SupplyLogic'), (274184521717934524641157099916833587232, 'contracts/protocol/libraries/logic/ValidationLogic.sol:ValidationLogic'), (274184521717934524641157099916833587233, 'contracts/protocol/libraries/math/MathUtils.sol:MathUtils'), (274184521717934524641157099916833587234, 'contracts/protocol/libraries/math/PercentageMath.sol:PercentageMath'), (274184521717934524641157099916833587235, 'contracts/protocol/libraries/math/WadRayMath.sol:WadRayMath'), (274184521717934524641157099916833587236, 'contracts/protocol/libraries/types/DataTypes.sol:DataTypes'), (274184521717934524641157099916833587237, 'contracts/protocol/pool/Pool.sol:Pool'), (274184521717934524641157099916833587238, 'contracts/protocol/pool/PoolStorage.sol:PoolStorage')]
Working on contract PoolHarness
Replacements= {5726: {'length': 20, 'address': '00000000ce4604a0000000000000000000000017'}, 9051: {'length': 20, 'address': '00000000ce4604a0000000000000000000000017'}, 9870: {'length': 20, 'address': '00000000ce4604a0000000000000000000000017'}, 13048: {'length': 20, 'address': '00000000ce4604a0000000000000000000000017'}, 13223: {'length': 20, 'address': '00000000ce4604a0000000000000000000000017'}, 16721: {'length': 20, 'address': '00000000ce4604a0000000000000000000000017'}, 8133: {'length': 20, 'address': '00000000ce4604a0000000000000000000000018'}, 15563: {'length': 20, 'address': '00000000ce4604a0000000000000000000000018'}, 3563: {'length': 20, 'address': '00000000ce4604a0000000000000000000000019'}, 5449: {'length': 20, 'address': '00000000ce4604a000000000000000000000001a'}, 11621: {'length': 20, 'address': '00000000ce4604a000000000000000000000001a'}, 2147: {'length': 20, 'address': '00000000ce4604a000000000000000000000001d'}, 2951: {'length': 20, 'address': '00000000ce4604a000000000000000000000001f'}, 6075: {'length': 20, 'address': '00000000ce4604a000000000000000000000001f'}, 6497: {'length': 20, 'address': '00000000ce4604a000000000000000000000001f'}, 7572: {'length': 20, 'address': '00000000ce4604a000000000000000000000001f'}, 14955: {'length': 20, 'address': '00000000ce4604a000000000000000000000001f'}, 16162: {'length': 20, 'address': '00000000ce4604a000000000000000000000001f'}}
replacing in 33442 of len 40 with 00000000ce4604a0000000000000000000000017
replacing in 32324 of len 40 with 00000000ce4604a000000000000000000000001f
replacing in 31126 of len 40 with 00000000ce4604a0000000000000000000000018
replacing in 29910 of len 40 with 00000000ce4604a000000000000000000000001f
replacing in 26446 of len 40 with 00000000ce4604a0000000000000000000000017
replacing in 26096 of len 40 with 00000000ce4604a0000000000000000000000017
replacing in 23242 of len 40 with 00000000ce4604a000000000000000000000001a
replacing in 19740 of len 40 with 00000000ce4604a0000000000000000000000017
replacing in 18102 of len 40 with 00000000ce4604a0000000000000000000000017
replacing in 16266 of len 40 with 00000000ce4604a0000000000000000000000018
replacing in 15144 of len 40 with 00000000ce4604a000000000000000000000001f
replacing in 12994 of len 40 with 00000000ce4604a000000000000000000000001f
replacing in 12150 of len 40 with 00000000ce4604a000000000000000000000001f
replacing in 11452 of len 40 with 00000000ce4604a0000000000000000000000017
replacing in 10898 of len 40 with 00000000ce4604a000000000000000000000001a
replacing in 7126 of len 40 with 00000000ce4604a0000000000000000000000019
replacing in 5902 of len 40 with 00000000ce4604a000000000000000000000001f
replacing in 4294 of len 40 with 00000000ce4604a000000000000000000000001d
Working on contract PoolHarness
Replacements= {6148: {'length': 20, 'address': '00000000ce4604a0000000000000000000000017'}, 9473: {'length': 20, 'address': '00000000ce4604a0000000000000000000000017'}, 10292: {'length': 20, 'address': '00000000ce4604a0000000000000000000000017'}, 13470: {'length': 20, 'address': '00000000ce4604a0000000000000000000000017'}, 13645: {'length': 20, 'address': '00000000ce4604a0000000000000000000000017'}, 17143: {'length': 20, 'address': '00000000ce4604a0000000000000000000000017'}, 8555: {'length': 20, 'address': '00000000ce4604a0000000000000000000000018'}, 15985: {'length': 20, 'address': '00000000ce4604a0000000000000000000000018'}, 3985: {'length': 20, 'address': '00000000ce4604a0000000000000000000000019'}, 5871: {'length': 20, 'address': '00000000ce4604a000000000000000000000001a'}, 12043: {'length': 20, 'address': '00000000ce4604a000000000000000000000001a'}, 2569: {'length': 20, 'address': '00000000ce4604a000000000000000000000001d'}, 3373: {'length': 20, 'address': '00000000ce4604a000000000000000000000001f'}, 6497: {'length': 20, 'address': '00000000ce4604a000000000000000000000001f'}, 6919: {'length': 20, 'address': '00000000ce4604a000000000000000000000001f'}, 7994: {'length': 20, 'address': '00000000ce4604a000000000000000000000001f'}, 15377: {'length': 20, 'address': '00000000ce4604a000000000000000000000001f'}, 16584: {'length': 20, 'address': '00000000ce4604a000000000000000000000001f'}}
replacing in 34286 of len 40 with 00000000ce4604a0000000000000000000000017
replacing in 33168 of len 40 with 00000000ce4604a000000000000000000000001f
replacing in 31970 of len 40 with 00000000ce4604a0000000000000000000000018
replacing in 30754 of len 40 with 00000000ce4604a000000000000000000000001f
replacing in 27290 of len 40 with 00000000ce4604a0000000000000000000000017
replacing in 26940 of len 40 with 00000000ce4604a0000000000000000000000017
replacing in 24086 of len 40 with 00000000ce4604a000000000000000000000001a
replacing in 20584 of len 40 with 00000000ce4604a0000000000000000000000017
replacing in 18946 of len 40 with 00000000ce4604a0000000000000000000000017
replacing in 17110 of len 40 with 00000000ce4604a0000000000000000000000018
replacing in 15988 of len 40 with 00000000ce4604a000000000000000000000001f
replacing in 13838 of len 40 with 00000000ce4604a000000000000000000000001f
replacing in 12994 of len 40 with 00000000ce4604a000000000000000000000001f
replacing in 12296 of len 40 with 00000000ce4604a0000000000000000000000017
replacing in 11742 of len 40 with 00000000ce4604a000000000000000000000001a
replacing in 7970 of len 40 with 00000000ce4604a0000000000000000000000019
replacing in 6746 of len 40 with 00000000ce4604a000000000000000000000001f
replacing in 5138 of len 40 with 00000000ce4604a000000000000000000000001d
Working on contract Address
Working on contract Address
Working on contract IERC20
Working on contract IERC20
Working on contract SafeERC20
Working on contract SafeERC20
Working on contract IFlashLoanReceiver
Working on contract IFlashLoanReceiver
Working on contract IFlashLoanSimpleReceiver
Working on contract IFlashLoanSimpleReceiver
Working on contract IACLManager
Working on contract IACLManager
Working on contract IAToken
Working on contract IAToken
Working on contract IERC20WithPermit
Working on contract IERC20WithPermit
Working on contract IInitializableAToken
Working on contract IInitializableAToken
Working on contract IInitializableDebtToken
Working on contract IInitializableDebtToken
Working on contract IPool
Working on contract IPool
Working on contract IPoolAddressesProvider
Working on contract IPoolAddressesProvider
Working on contract IPriceOracleGetter
Working on contract IPriceOracleGetter
Working on contract IPriceOracleSentinel
Working on contract IPriceOracleSentinel
Working on contract IReserveInterestRateStrategy
Working on contract IReserveInterestRateStrategy
Working on contract IScaledBalanceToken
Working on contract IScaledBalanceToken
Working on contract IStableDebtToken
Working on contract IStableDebtToken
Working on contract IVariableDebtToken
Working on contract IVariableDebtToken
Working on contract VersionedInitializable
Working on contract VersionedInitializable
Working on contract ReserveConfiguration
Working on contract ReserveConfiguration
Working on contract UserConfiguration
Working on contract UserConfiguration
Working on contract Helpers
Working on contract Helpers
Working on contract BorrowLogic
Working on contract BorrowLogic
Working on contract BridgeLogic
Working on contract BridgeLogic
Working on contract EModeLogic
Working on contract EModeLogic
Working on contract FlashLoanLogic
Replacements= {2672: {'length': 20, 'address': '00000000ce4604a0000000000000000000000017'}}
replacing in 5344 of len 40 with 00000000ce4604a0000000000000000000000017
Working on contract FlashLoanLogic
Replacements= {2755: {'length': 20, 'address': '00000000ce4604a0000000000000000000000017'}}
replacing in 5510 of len 40 with 00000000ce4604a0000000000000000000000017
Working on contract GenericLogic
Working on contract GenericLogic
Working on contract IsolationModeLogic
Working on contract IsolationModeLogic
Working on contract LiquidationLogic
Working on contract LiquidationLogic
Working on contract ReserveLogic
Working on contract ReserveLogic
Working on contract SupplyLogic
Working on contract SupplyLogic
Working on contract ValidationLogic
Working on contract ValidationLogic
Working on contract MathUtils
Working on contract MathUtils
Working on contract PercentageMath
Working on contract PercentageMath
Working on contract WadRayMath
Working on contract WadRayMath
Working on contract DataTypes
Working on contract DataTypes
Working on contract Pool
Replacements= {5667: {'length': 20, 'address': '00000000ce4604a0000000000000000000000017'}, 8992: {'length': 20, 'address': '00000000ce4604a0000000000000000000000017'}, 9811: {'length': 20, 'address': '00000000ce4604a0000000000000000000000017'}, 12989: {'length': 20, 'address': '00000000ce4604a0000000000000000000000017'}, 13164: {'length': 20, 'address': '00000000ce4604a0000000000000000000000017'}, 16283: {'length': 20, 'address': '00000000ce4604a0000000000000000000000017'}, 8074: {'length': 20, 'address': '00000000ce4604a0000000000000000000000018'}, 15504: {'length': 20, 'address': '00000000ce4604a0000000000000000000000018'}, 3504: {'length': 20, 'address': '00000000ce4604a0000000000000000000000019'}, 5390: {'length': 20, 'address': '00000000ce4604a000000000000000000000001a'}, 11562: {'length': 20, 'address': '00000000ce4604a000000000000000000000001a'}, 2088: {'length': 20, 'address': '00000000ce4604a000000000000000000000001d'}, 2892: {'length': 20, 'address': '00000000ce4604a000000000000000000000001f'}, 6016: {'length': 20, 'address': '00000000ce4604a000000000000000000000001f'}, 6438: {'length': 20, 'address': '00000000ce4604a000000000000000000000001f'}, 7513: {'length': 20, 'address': '00000000ce4604a000000000000000000000001f'}, 14896: {'length': 20, 'address': '00000000ce4604a000000000000000000000001f'}, 15724: {'length': 20, 'address': '00000000ce4604a000000000000000000000001f'}}
replacing in 32566 of len 40 with 00000000ce4604a0000000000000000000000017
replacing in 31448 of len 40 with 00000000ce4604a000000000000000000000001f
replacing in 31008 of len 40 with 00000000ce4604a0000000000000000000000018
replacing in 29792 of len 40 with 00000000ce4604a000000000000000000000001f
replacing in 26328 of len 40 with 00000000ce4604a0000000000000000000000017
replacing in 25978 of len 40 with 00000000ce4604a0000000000000000000000017
replacing in 23124 of len 40 with 00000000ce4604a000000000000000000000001a
replacing in 19622 of len 40 with 00000000ce4604a0000000000000000000000017
replacing in 17984 of len 40 with 00000000ce4604a0000000000000000000000017
replacing in 16148 of len 40 with 00000000ce4604a0000000000000000000000018
replacing in 15026 of len 40 with 00000000ce4604a000000000000000000000001f
replacing in 12876 of len 40 with 00000000ce4604a000000000000000000000001f
replacing in 12032 of len 40 with 00000000ce4604a000000000000000000000001f
replacing in 11334 of len 40 with 00000000ce4604a0000000000000000000000017
replacing in 10780 of len 40 with 00000000ce4604a000000000000000000000001a
replacing in 7008 of len 40 with 00000000ce4604a0000000000000000000000019
replacing in 5784 of len 40 with 00000000ce4604a000000000000000000000001f
replacing in 4176 of len 40 with 00000000ce4604a000000000000000000000001d
Working on contract Pool
Replacements= {6087: {'length': 20, 'address': '00000000ce4604a0000000000000000000000017'}, 9412: {'length': 20, 'address': '00000000ce4604a0000000000000000000000017'}, 10231: {'length': 20, 'address': '00000000ce4604a0000000000000000000000017'}, 13409: {'length': 20, 'address': '00000000ce4604a0000000000000000000000017'}, 13584: {'length': 20, 'address': '00000000ce4604a0000000000000000000000017'}, 16703: {'length': 20, 'address': '00000000ce4604a0000000000000000000000017'}, 8494: {'length': 20, 'address': '00000000ce4604a0000000000000000000000018'}, 15924: {'length': 20, 'address': '00000000ce4604a0000000000000000000000018'}, 3924: {'length': 20, 'address': '00000000ce4604a0000000000000000000000019'}, 5810: {'length': 20, 'address': '00000000ce4604a000000000000000000000001a'}, 11982: {'length': 20, 'address': '00000000ce4604a000000000000000000000001a'}, 2508: {'length': 20, 'address': '00000000ce4604a000000000000000000000001d'}, 3312: {'length': 20, 'address': '00000000ce4604a000000000000000000000001f'}, 6436: {'length': 20, 'address': '00000000ce4604a000000000000000000000001f'}, 6858: {'length': 20, 'address': '00000000ce4604a000000000000000000000001f'}, 7933: {'length': 20, 'address': '00000000ce4604a000000000000000000000001f'}, 15316: {'length': 20, 'address': '00000000ce4604a000000000000000000000001f'}, 16144: {'length': 20, 'address': '00000000ce4604a000000000000000000000001f'}}
replacing in 33406 of len 40 with 00000000ce4604a0000000000000000000000017
replacing in 32288 of len 40 with 00000000ce4604a000000000000000000000001f
replacing in 31848 of len 40 with 00000000ce4604a0000000000000000000000018
replacing in 30632 of len 40 with 00000000ce4604a000000000000000000000001f
replacing in 27168 of len 40 with 00000000ce4604a0000000000000000000000017
replacing in 26818 of len 40 with 00000000ce4604a0000000000000000000000017
replacing in 23964 of len 40 with 00000000ce4604a000000000000000000000001a
replacing in 20462 of len 40 with 00000000ce4604a0000000000000000000000017
replacing in 18824 of len 40 with 00000000ce4604a0000000000000000000000017
replacing in 16988 of len 40 with 00000000ce4604a0000000000000000000000018
replacing in 15866 of len 40 with 00000000ce4604a000000000000000000000001f
replacing in 13716 of len 40 with 00000000ce4604a000000000000000000000001f
replacing in 12872 of len 40 with 00000000ce4604a000000000000000000000001f
replacing in 12174 of len 40 with 00000000ce4604a0000000000000000000000017
replacing in 11620 of len 40 with 00000000ce4604a000000000000000000000001a
replacing in 7848 of len 40 with 00000000ce4604a0000000000000000000000019
replacing in 6624 of len 40 with 00000000ce4604a000000000000000000000001f
replacing in 5016 of len 40 with 00000000ce4604a000000000000000000000001d
Working on contract PoolStorage
Working on contract PoolStorage
For contracts of primary PoolHarness
finding primary contract address of /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/Certora/harness/PoolHarness.sol:PoolHarness in [(274184521717934524641157099916833587200, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/Certora/harness/PoolHarness.sol:PoolHarness'), (274184521717934524641157099916833587201, 'contracts/dependencies/openzeppelin/contracts/Address.sol:Address'), (274184521717934524641157099916833587202, 'contracts/dependencies/openzeppelin/contracts/IERC20.sol:IERC20'), (274184521717934524641157099916833587203, 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol:SafeERC20'), (274184521717934524641157099916833587204, 'contracts/flashloan/interfaces/IFlashLoanReceiver.sol:IFlashLoanReceiver'), (274184521717934524641157099916833587205, 'contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol:IFlashLoanSimpleReceiver'), (274184521717934524641157099916833587206, 'contracts/interfaces/IACLManager.sol:IACLManager'), (274184521717934524641157099916833587207, 'contracts/interfaces/IAToken.sol:IAToken'), (274184521717934524641157099916833587208, 'contracts/interfaces/IERC20WithPermit.sol:IERC20WithPermit'), (274184521717934524641157099916833587209, 'contracts/interfaces/IInitializableAToken.sol:IInitializableAToken'), (274184521717934524641157099916833587210, 'contracts/interfaces/IInitializableDebtToken.sol:IInitializableDebtToken'), (274184521717934524641157099916833587211, 'contracts/interfaces/IPool.sol:IPool'), (274184521717934524641157099916833587212, 'contracts/interfaces/IPoolAddressesProvider.sol:IPoolAddressesProvider'), (274184521717934524641157099916833587213, 'contracts/interfaces/IPriceOracleGetter.sol:IPriceOracleGetter'), (274184521717934524641157099916833587214, 'contracts/interfaces/IPriceOracleSentinel.sol:IPriceOracleSentinel'), (274184521717934524641157099916833587215, 'contracts/interfaces/IReserveInterestRateStrategy.sol:IReserveInterestRateStrategy'), (274184521717934524641157099916833587216, 'contracts/interfaces/IScaledBalanceToken.sol:IScaledBalanceToken'), (274184521717934524641157099916833587217, 'contracts/interfaces/IStableDebtToken.sol:IStableDebtToken'), (274184521717934524641157099916833587218, 'contracts/interfaces/IVariableDebtToken.sol:IVariableDebtToken'), (274184521717934524641157099916833587219, 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol:VersionedInitializable'), (274184521717934524641157099916833587220, 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol:ReserveConfiguration'), (274184521717934524641157099916833587221, 'contracts/protocol/libraries/configuration/UserConfiguration.sol:UserConfiguration'), (274184521717934524641157099916833587222, 'contracts/protocol/libraries/helpers/Helpers.sol:Helpers'), (274184521717934524641157099916833587223, 'contracts/protocol/libraries/logic/BorrowLogic.sol:BorrowLogic'), (274184521717934524641157099916833587224, 'contracts/protocol/libraries/logic/BridgeLogic.sol:BridgeLogic'), (274184521717934524641157099916833587225, 'contracts/protocol/libraries/logic/EModeLogic.sol:EModeLogic'), (274184521717934524641157099916833587226, 'contracts/protocol/libraries/logic/FlashLoanLogic.sol:FlashLoanLogic'), (274184521717934524641157099916833587227, 'contracts/protocol/libraries/logic/GenericLogic.sol:GenericLogic'), (274184521717934524641157099916833587228, 'contracts/protocol/libraries/logic/IsolationModeLogic.sol:IsolationModeLogic'), (274184521717934524641157099916833587229, 'contracts/protocol/libraries/logic/LiquidationLogic.sol:LiquidationLogic'), (274184521717934524641157099916833587230, 'contracts/protocol/libraries/logic/ReserveLogic.sol:ReserveLogic'), (274184521717934524641157099916833587231, 'contracts/protocol/libraries/logic/SupplyLogic.sol:SupplyLogic'), (274184521717934524641157099916833587232, 'contracts/protocol/libraries/logic/ValidationLogic.sol:ValidationLogic'), (274184521717934524641157099916833587233, 'contracts/protocol/libraries/math/MathUtils.sol:MathUtils'), (274184521717934524641157099916833587234, 'contracts/protocol/libraries/math/PercentageMath.sol:PercentageMath'), (274184521717934524641157099916833587235, 'contracts/protocol/libraries/math/WadRayMath.sol:WadRayMath'), (274184521717934524641157099916833587236, 'contracts/protocol/libraries/types/DataTypes.sol:DataTypes'), (274184521717934524641157099916833587237, 'contracts/protocol/pool/Pool.sol:Pool'), (274184521717934524641157099916833587238, 'contracts/protocol/pool/PoolStorage.sol:PoolStorage')]
Contracts in SDC PoolHarness.sol_0: ['PoolHarness', 'Address', 'IERC20', 'SafeERC20', 'IFlashLoanReceiver', 'IFlashLoanSimpleReceiver', 'IACLManager', 'IAToken', 'IERC20WithPermit', 'IInitializableAToken', 'IInitializableDebtToken', 'IPool', 'IPoolAddressesProvider', 'IPriceOracleGetter', 'IPriceOracleSentinel', 'IReserveInterestRateStrategy', 'IScaledBalanceToken', 'IStableDebtToken', 'IVariableDebtToken', 'VersionedInitializable', 'ReserveConfiguration', 'UserConfiguration', 'Helpers', 'BorrowLogic', 'BridgeLogic', 'EModeLogic', 'FlashLoanLogic', 'GenericLogic', 'IsolationModeLogic', 'LiquidationLogic', 'ReserveLogic', 'SupplyLogic', 'ValidationLogic', 'MathUtils', 'PercentageMath', 'WadRayMath', 'DataTypes', 'Pool', 'PoolStorage']
Building source tree
Copying /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/IERC20.sol to .certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/IERC20.sol
Copying /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPriceOracleSentinel.sol to .certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPriceOracleSentinel.sol
Copying /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IInitializableAToken.sol to .certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IInitializableAToken.sol
Copying /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IERC20WithPermit.sol to .certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IERC20WithPermit.sol
Copying /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/Address.sol to .certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/Address.sol
Copying /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IAaveIncentivesController.sol to .certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IAaveIncentivesController.sol
Copying /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IReserveInterestRateStrategy.sol to .certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IReserveInterestRateStrategy.sol
Copying /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/package.json to .certora_internal/24_02_02_08_49_36_072/.certora_sources/package.json
Copying /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/MathUtils.sol to .certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/MathUtils.sol
Copying /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/EModeLogic.sol to .certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/EModeLogic.sol
Copying /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/ValidationLogic.sol to .certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/ValidationLogic.sol
Copying /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPoolAddressesProvider.sol to .certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPoolAddressesProvider.sol
Copying /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/pool/PoolStorage.sol to .certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/pool/PoolStorage.sol
Copying /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/GenericLogic.sol to .certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/GenericLogic.sol
Copying /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/types/DataTypes.sol to .certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/types/DataTypes.sol
Copying /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IVariableDebtToken.sol to .certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IVariableDebtToken.sol
Copying /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IACLManager.sol to .certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IACLManager.sol
Copying /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/helpers/Errors.sol to .certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/helpers/Errors.sol
Copying /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/WadRayMath.sol to .certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/WadRayMath.sol
Copying /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/SafeERC20.sol to .certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/SafeERC20.sol
Copying /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol to .certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol
Copying /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/configuration/UserConfiguration.sol to .certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/configuration/UserConfiguration.sol
Copying /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/Certora/harness/PoolHarness.sol to .certora_internal/24_02_02_08_49_36_072/.certora_sources/Certora/harness/PoolHarness.sol
Copying /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/FlashLoanLogic.sol to .certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/FlashLoanLogic.sol
Copying /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/LiquidationLogic.sol to .certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/LiquidationLogic.sol
Copying /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/ReserveLogic.sol to .certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/ReserveLogic.sol
Copying /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol to .certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol
Copying /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IScaledBalanceToken.sol to .certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IScaledBalanceToken.sol
Copying /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPriceOracleGetter.sol to .certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPriceOracleGetter.sol
Copying /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/Certora/specs/priceOracleCounter.spec to .certora_internal/24_02_02_08_49_36_072/.certora_sources/Certora/specs/priceOracleCounter.spec
Copying /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IInitializableDebtToken.sol to .certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IInitializableDebtToken.sol
Copying /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPool.sol to .certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPool.sol
Copying /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IStableDebtToken.sol to .certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IStableDebtToken.sol
Copying /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/pool/Pool.sol to .certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/pool/Pool.sol
Copying /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/helpers/Helpers.sol to .certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/helpers/Helpers.sol
Copying /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/IsolationModeLogic.sol to .certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/IsolationModeLogic.sol
Copying /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/certora/confs/priceOracleCounter.conf to .certora_internal/24_02_02_08_49_36_072/.certora_sources/certora/confs/priceOracleCounter.conf
Copying /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/flashloan/interfaces/IFlashLoanReceiver.sol to .certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/flashloan/interfaces/IFlashLoanReceiver.sol
Copying /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IAToken.sol to .certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IAToken.sol
Copying /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/configuration/ReserveConfiguration.sol to .certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/configuration/ReserveConfiguration.sol
Copying /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/BorrowLogic.sol to .certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/BorrowLogic.sol
Copying /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/BridgeLogic.sol to .certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/BridgeLogic.sol
Copying /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/SupplyLogic.sol to .certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/SupplyLogic.sol
Copying /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/PercentageMath.sol to .certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/PercentageMath.sol
Backing up current .certora_sources to .certora_internal/24_02_02_08_49_36_072/.certora_sources/.pre_autofinders.0
Running cmd solc -o ".certora_internal/24_02_02_08_49_36_072/.certora_config/PoolHarness.sol_0/" --overwrite --allow-paths "/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts",.,"/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/node_modules/@nomiclabs/hardhat-etherscan","/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/node_modules/axios-curlirize","/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/node_modules/tmp-promise" --standard-json
stdout, stderr = .certora_internal/24_02_02_08_49_36_072/.certora_config/PoolHarness.sol_0.standard.json.stdout, .certora_internal/24_02_02_08_49_36_072/.certora_config/PoolHarness.sol_0.standard.json.stderr
Exitcode 0
Solc run solc -o ".certora_internal/24_02_02_08_49_36_072/.certora_config/PoolHarness.sol_0/" --overwrite --allow-paths "/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts",.,"/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/node_modules/@nomiclabs/hardhat-etherscan","/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/node_modules/axios-curlirize","/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/node_modules/tmp-promise" --standard-json time: 2.4345
reading standard json data from .certora_internal/24_02_02_08_49_36_072/.certora_config/PoolHarness.sol_0.standard.json.stdout
collecting worklist for /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/Certora/harness/PoolHarness.sol
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/Certora/harness/PoolHarness.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/Certora/harness/PoolHarness.sol', 'contracts/dependencies/openzeppelin/contracts/Address.sol', 'contracts/dependencies/openzeppelin/contracts/IERC20.sol', 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', 'contracts/flashloan/interfaces/IFlashLoanReceiver.sol', 'contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol', 'contracts/interfaces/IACLManager.sol', 'contracts/interfaces/IAToken.sol', 'contracts/interfaces/IAaveIncentivesController.sol', 'contracts/interfaces/IERC20WithPermit.sol', 'contracts/interfaces/IInitializableAToken.sol', 'contracts/interfaces/IInitializableDebtToken.sol', 'contracts/interfaces/IPool.sol', 'contracts/interfaces/IPoolAddressesProvider.sol', 'contracts/interfaces/IPriceOracleGetter.sol', 'contracts/interfaces/IPriceOracleSentinel.sol', 'contracts/interfaces/IReserveInterestRateStrategy.sol', 'contracts/interfaces/IScaledBalanceToken.sol', 'contracts/interfaces/IStableDebtToken.sol', 'contracts/interfaces/IVariableDebtToken.sol', 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol', 'contracts/protocol/libraries/configuration/UserConfiguration.sol', 'contracts/protocol/libraries/helpers/Errors.sol', 'contracts/protocol/libraries/helpers/Helpers.sol', 'contracts/protocol/libraries/logic/BorrowLogic.sol', 'contracts/protocol/libraries/logic/BridgeLogic.sol', 'contracts/protocol/libraries/logic/EModeLogic.sol', 'contracts/protocol/libraries/logic/FlashLoanLogic.sol', 'contracts/protocol/libraries/logic/GenericLogic.sol', 'contracts/protocol/libraries/logic/IsolationModeLogic.sol', 'contracts/protocol/libraries/logic/LiquidationLogic.sol', 'contracts/protocol/libraries/logic/ReserveLogic.sol', 'contracts/protocol/libraries/logic/SupplyLogic.sol', 'contracts/protocol/libraries/logic/ValidationLogic.sol', 'contracts/protocol/libraries/math/MathUtils.sol', 'contracts/protocol/libraries/math/PercentageMath.sol', 'contracts/protocol/libraries/math/WadRayMath.sol', 'contracts/protocol/libraries/types/DataTypes.sol', 'contracts/protocol/pool/Pool.sol', 'contracts/protocol/pool/PoolStorage.sol'])
Adding a base contract link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPool.sol to worklist
Adding a base contract link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol to worklist
Adding a base contract link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/pool/Pool.sol to worklist
Adding a base contract link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/pool/PoolStorage.sol to worklist
Adding library link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/BorrowLogic.sol to worklist
Adding library link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/BridgeLogic.sol to worklist
Adding library link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/EModeLogic.sol to worklist
Adding library link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/FlashLoanLogic.sol to worklist
Adding library link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/LiquidationLogic.sol to worklist
Adding library link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/SupplyLogic.sol to worklist
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/SupplyLogic.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/Certora/harness/PoolHarness.sol', 'contracts/dependencies/openzeppelin/contracts/Address.sol', 'contracts/dependencies/openzeppelin/contracts/IERC20.sol', 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', 'contracts/flashloan/interfaces/IFlashLoanReceiver.sol', 'contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol', 'contracts/interfaces/IACLManager.sol', 'contracts/interfaces/IAToken.sol', 'contracts/interfaces/IAaveIncentivesController.sol', 'contracts/interfaces/IERC20WithPermit.sol', 'contracts/interfaces/IInitializableAToken.sol', 'contracts/interfaces/IInitializableDebtToken.sol', 'contracts/interfaces/IPool.sol', 'contracts/interfaces/IPoolAddressesProvider.sol', 'contracts/interfaces/IPriceOracleGetter.sol', 'contracts/interfaces/IPriceOracleSentinel.sol', 'contracts/interfaces/IReserveInterestRateStrategy.sol', 'contracts/interfaces/IScaledBalanceToken.sol', 'contracts/interfaces/IStableDebtToken.sol', 'contracts/interfaces/IVariableDebtToken.sol', 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol', 'contracts/protocol/libraries/configuration/UserConfiguration.sol', 'contracts/protocol/libraries/helpers/Errors.sol', 'contracts/protocol/libraries/helpers/Helpers.sol', 'contracts/protocol/libraries/logic/BorrowLogic.sol', 'contracts/protocol/libraries/logic/BridgeLogic.sol', 'contracts/protocol/libraries/logic/EModeLogic.sol', 'contracts/protocol/libraries/logic/FlashLoanLogic.sol', 'contracts/protocol/libraries/logic/GenericLogic.sol', 'contracts/protocol/libraries/logic/IsolationModeLogic.sol', 'contracts/protocol/libraries/logic/LiquidationLogic.sol', 'contracts/protocol/libraries/logic/ReserveLogic.sol', 'contracts/protocol/libraries/logic/SupplyLogic.sol', 'contracts/protocol/libraries/logic/ValidationLogic.sol', 'contracts/protocol/libraries/math/MathUtils.sol', 'contracts/protocol/libraries/math/PercentageMath.sol', 'contracts/protocol/libraries/math/WadRayMath.sol', 'contracts/protocol/libraries/types/DataTypes.sol', 'contracts/protocol/pool/Pool.sol', 'contracts/protocol/pool/PoolStorage.sol'])
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IAToken.sol to worklist
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/IERC20.sol to worklist
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IScaledBalanceToken.sol to worklist
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/configuration/ReserveConfiguration.sol to worklist
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/ReserveLogic.sol to worklist
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/SafeERC20.sol to worklist
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/configuration/UserConfiguration.sol to worklist
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/ValidationLogic.sol to worklist
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/WadRayMath.sol to worklist
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/WadRayMath.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/Certora/harness/PoolHarness.sol', 'contracts/dependencies/openzeppelin/contracts/Address.sol', 'contracts/dependencies/openzeppelin/contracts/IERC20.sol', 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', 'contracts/flashloan/interfaces/IFlashLoanReceiver.sol', 'contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol', 'contracts/interfaces/IACLManager.sol', 'contracts/interfaces/IAToken.sol', 'contracts/interfaces/IAaveIncentivesController.sol', 'contracts/interfaces/IERC20WithPermit.sol', 'contracts/interfaces/IInitializableAToken.sol', 'contracts/interfaces/IInitializableDebtToken.sol', 'contracts/interfaces/IPool.sol', 'contracts/interfaces/IPoolAddressesProvider.sol', 'contracts/interfaces/IPriceOracleGetter.sol', 'contracts/interfaces/IPriceOracleSentinel.sol', 'contracts/interfaces/IReserveInterestRateStrategy.sol', 'contracts/interfaces/IScaledBalanceToken.sol', 'contracts/interfaces/IStableDebtToken.sol', 'contracts/interfaces/IVariableDebtToken.sol', 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol', 'contracts/protocol/libraries/configuration/UserConfiguration.sol', 'contracts/protocol/libraries/helpers/Errors.sol', 'contracts/protocol/libraries/helpers/Helpers.sol', 'contracts/protocol/libraries/logic/BorrowLogic.sol', 'contracts/protocol/libraries/logic/BridgeLogic.sol', 'contracts/protocol/libraries/logic/EModeLogic.sol', 'contracts/protocol/libraries/logic/FlashLoanLogic.sol', 'contracts/protocol/libraries/logic/GenericLogic.sol', 'contracts/protocol/libraries/logic/IsolationModeLogic.sol', 'contracts/protocol/libraries/logic/LiquidationLogic.sol', 'contracts/protocol/libraries/logic/ReserveLogic.sol', 'contracts/protocol/libraries/logic/SupplyLogic.sol', 'contracts/protocol/libraries/logic/ValidationLogic.sol', 'contracts/protocol/libraries/math/MathUtils.sol', 'contracts/protocol/libraries/math/PercentageMath.sol', 'contracts/protocol/libraries/math/WadRayMath.sol', 'contracts/protocol/libraries/types/DataTypes.sol', 'contracts/protocol/pool/Pool.sol', 'contracts/protocol/pool/PoolStorage.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/ValidationLogic.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/Certora/harness/PoolHarness.sol', 'contracts/dependencies/openzeppelin/contracts/Address.sol', 'contracts/dependencies/openzeppelin/contracts/IERC20.sol', 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', 'contracts/flashloan/interfaces/IFlashLoanReceiver.sol', 'contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol', 'contracts/interfaces/IACLManager.sol', 'contracts/interfaces/IAToken.sol', 'contracts/interfaces/IAaveIncentivesController.sol', 'contracts/interfaces/IERC20WithPermit.sol', 'contracts/interfaces/IInitializableAToken.sol', 'contracts/interfaces/IInitializableDebtToken.sol', 'contracts/interfaces/IPool.sol', 'contracts/interfaces/IPoolAddressesProvider.sol', 'contracts/interfaces/IPriceOracleGetter.sol', 'contracts/interfaces/IPriceOracleSentinel.sol', 'contracts/interfaces/IReserveInterestRateStrategy.sol', 'contracts/interfaces/IScaledBalanceToken.sol', 'contracts/interfaces/IStableDebtToken.sol', 'contracts/interfaces/IVariableDebtToken.sol', 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol', 'contracts/protocol/libraries/configuration/UserConfiguration.sol', 'contracts/protocol/libraries/helpers/Errors.sol', 'contracts/protocol/libraries/helpers/Helpers.sol', 'contracts/protocol/libraries/logic/BorrowLogic.sol', 'contracts/protocol/libraries/logic/BridgeLogic.sol', 'contracts/protocol/libraries/logic/EModeLogic.sol', 'contracts/protocol/libraries/logic/FlashLoanLogic.sol', 'contracts/protocol/libraries/logic/GenericLogic.sol', 'contracts/protocol/libraries/logic/IsolationModeLogic.sol', 'contracts/protocol/libraries/logic/LiquidationLogic.sol', 'contracts/protocol/libraries/logic/ReserveLogic.sol', 'contracts/protocol/libraries/logic/SupplyLogic.sol', 'contracts/protocol/libraries/logic/ValidationLogic.sol', 'contracts/protocol/libraries/math/MathUtils.sol', 'contracts/protocol/libraries/math/PercentageMath.sol', 'contracts/protocol/libraries/math/WadRayMath.sol', 'contracts/protocol/libraries/types/DataTypes.sol', 'contracts/protocol/pool/Pool.sol', 'contracts/protocol/pool/PoolStorage.sol'])
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/types/DataTypes.sol to worklist
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/GenericLogic.sol to worklist
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/helpers/Helpers.sol to worklist
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPriceOracleGetter.sol to worklist
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPriceOracleSentinel.sol to worklist
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IReserveInterestRateStrategy.sol to worklist
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IStableDebtToken.sol to worklist
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/PercentageMath.sol to worklist
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/PercentageMath.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/Certora/harness/PoolHarness.sol', 'contracts/dependencies/openzeppelin/contracts/Address.sol', 'contracts/dependencies/openzeppelin/contracts/IERC20.sol', 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', 'contracts/flashloan/interfaces/IFlashLoanReceiver.sol', 'contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol', 'contracts/interfaces/IACLManager.sol', 'contracts/interfaces/IAToken.sol', 'contracts/interfaces/IAaveIncentivesController.sol', 'contracts/interfaces/IERC20WithPermit.sol', 'contracts/interfaces/IInitializableAToken.sol', 'contracts/interfaces/IInitializableDebtToken.sol', 'contracts/interfaces/IPool.sol', 'contracts/interfaces/IPoolAddressesProvider.sol', 'contracts/interfaces/IPriceOracleGetter.sol', 'contracts/interfaces/IPriceOracleSentinel.sol', 'contracts/interfaces/IReserveInterestRateStrategy.sol', 'contracts/interfaces/IScaledBalanceToken.sol', 'contracts/interfaces/IStableDebtToken.sol', 'contracts/interfaces/IVariableDebtToken.sol', 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol', 'contracts/protocol/libraries/configuration/UserConfiguration.sol', 'contracts/protocol/libraries/helpers/Errors.sol', 'contracts/protocol/libraries/helpers/Helpers.sol', 'contracts/protocol/libraries/logic/BorrowLogic.sol', 'contracts/protocol/libraries/logic/BridgeLogic.sol', 'contracts/protocol/libraries/logic/EModeLogic.sol', 'contracts/protocol/libraries/logic/FlashLoanLogic.sol', 'contracts/protocol/libraries/logic/GenericLogic.sol', 'contracts/protocol/libraries/logic/IsolationModeLogic.sol', 'contracts/protocol/libraries/logic/LiquidationLogic.sol', 'contracts/protocol/libraries/logic/ReserveLogic.sol', 'contracts/protocol/libraries/logic/SupplyLogic.sol', 'contracts/protocol/libraries/logic/ValidationLogic.sol', 'contracts/protocol/libraries/math/MathUtils.sol', 'contracts/protocol/libraries/math/PercentageMath.sol', 'contracts/protocol/libraries/math/WadRayMath.sol', 'contracts/protocol/libraries/types/DataTypes.sol', 'contracts/protocol/pool/Pool.sol', 'contracts/protocol/pool/PoolStorage.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IStableDebtToken.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/Certora/harness/PoolHarness.sol', 'contracts/dependencies/openzeppelin/contracts/Address.sol', 'contracts/dependencies/openzeppelin/contracts/IERC20.sol', 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', 'contracts/flashloan/interfaces/IFlashLoanReceiver.sol', 'contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol', 'contracts/interfaces/IACLManager.sol', 'contracts/interfaces/IAToken.sol', 'contracts/interfaces/IAaveIncentivesController.sol', 'contracts/interfaces/IERC20WithPermit.sol', 'contracts/interfaces/IInitializableAToken.sol', 'contracts/interfaces/IInitializableDebtToken.sol', 'contracts/interfaces/IPool.sol', 'contracts/interfaces/IPoolAddressesProvider.sol', 'contracts/interfaces/IPriceOracleGetter.sol', 'contracts/interfaces/IPriceOracleSentinel.sol', 'contracts/interfaces/IReserveInterestRateStrategy.sol', 'contracts/interfaces/IScaledBalanceToken.sol', 'contracts/interfaces/IStableDebtToken.sol', 'contracts/interfaces/IVariableDebtToken.sol', 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol', 'contracts/protocol/libraries/configuration/UserConfiguration.sol', 'contracts/protocol/libraries/helpers/Errors.sol', 'contracts/protocol/libraries/helpers/Helpers.sol', 'contracts/protocol/libraries/logic/BorrowLogic.sol', 'contracts/protocol/libraries/logic/BridgeLogic.sol', 'contracts/protocol/libraries/logic/EModeLogic.sol', 'contracts/protocol/libraries/logic/FlashLoanLogic.sol', 'contracts/protocol/libraries/logic/GenericLogic.sol', 'contracts/protocol/libraries/logic/IsolationModeLogic.sol', 'contracts/protocol/libraries/logic/LiquidationLogic.sol', 'contracts/protocol/libraries/logic/ReserveLogic.sol', 'contracts/protocol/libraries/logic/SupplyLogic.sol', 'contracts/protocol/libraries/logic/ValidationLogic.sol', 'contracts/protocol/libraries/math/MathUtils.sol', 'contracts/protocol/libraries/math/PercentageMath.sol', 'contracts/protocol/libraries/math/WadRayMath.sol', 'contracts/protocol/libraries/types/DataTypes.sol', 'contracts/protocol/pool/Pool.sol', 'contracts/protocol/pool/PoolStorage.sol'])
Adding a base contract link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IInitializableDebtToken.sol to worklist
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IInitializableDebtToken.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/Certora/harness/PoolHarness.sol', 'contracts/dependencies/openzeppelin/contracts/Address.sol', 'contracts/dependencies/openzeppelin/contracts/IERC20.sol', 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', 'contracts/flashloan/interfaces/IFlashLoanReceiver.sol', 'contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol', 'contracts/interfaces/IACLManager.sol', 'contracts/interfaces/IAToken.sol', 'contracts/interfaces/IAaveIncentivesController.sol', 'contracts/interfaces/IERC20WithPermit.sol', 'contracts/interfaces/IInitializableAToken.sol', 'contracts/interfaces/IInitializableDebtToken.sol', 'contracts/interfaces/IPool.sol', 'contracts/interfaces/IPoolAddressesProvider.sol', 'contracts/interfaces/IPriceOracleGetter.sol', 'contracts/interfaces/IPriceOracleSentinel.sol', 'contracts/interfaces/IReserveInterestRateStrategy.sol', 'contracts/interfaces/IScaledBalanceToken.sol', 'contracts/interfaces/IStableDebtToken.sol', 'contracts/interfaces/IVariableDebtToken.sol', 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol', 'contracts/protocol/libraries/configuration/UserConfiguration.sol', 'contracts/protocol/libraries/helpers/Errors.sol', 'contracts/protocol/libraries/helpers/Helpers.sol', 'contracts/protocol/libraries/logic/BorrowLogic.sol', 'contracts/protocol/libraries/logic/BridgeLogic.sol', 'contracts/protocol/libraries/logic/EModeLogic.sol', 'contracts/protocol/libraries/logic/FlashLoanLogic.sol', 'contracts/protocol/libraries/logic/GenericLogic.sol', 'contracts/protocol/libraries/logic/IsolationModeLogic.sol', 'contracts/protocol/libraries/logic/LiquidationLogic.sol', 'contracts/protocol/libraries/logic/ReserveLogic.sol', 'contracts/protocol/libraries/logic/SupplyLogic.sol', 'contracts/protocol/libraries/logic/ValidationLogic.sol', 'contracts/protocol/libraries/math/MathUtils.sol', 'contracts/protocol/libraries/math/PercentageMath.sol', 'contracts/protocol/libraries/math/WadRayMath.sol', 'contracts/protocol/libraries/types/DataTypes.sol', 'contracts/protocol/pool/Pool.sol', 'contracts/protocol/pool/PoolStorage.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IReserveInterestRateStrategy.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/Certora/harness/PoolHarness.sol', 'contracts/dependencies/openzeppelin/contracts/Address.sol', 'contracts/dependencies/openzeppelin/contracts/IERC20.sol', 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', 'contracts/flashloan/interfaces/IFlashLoanReceiver.sol', 'contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol', 'contracts/interfaces/IACLManager.sol', 'contracts/interfaces/IAToken.sol', 'contracts/interfaces/IAaveIncentivesController.sol', 'contracts/interfaces/IERC20WithPermit.sol', 'contracts/interfaces/IInitializableAToken.sol', 'contracts/interfaces/IInitializableDebtToken.sol', 'contracts/interfaces/IPool.sol', 'contracts/interfaces/IPoolAddressesProvider.sol', 'contracts/interfaces/IPriceOracleGetter.sol', 'contracts/interfaces/IPriceOracleSentinel.sol', 'contracts/interfaces/IReserveInterestRateStrategy.sol', 'contracts/interfaces/IScaledBalanceToken.sol', 'contracts/interfaces/IStableDebtToken.sol', 'contracts/interfaces/IVariableDebtToken.sol', 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol', 'contracts/protocol/libraries/configuration/UserConfiguration.sol', 'contracts/protocol/libraries/helpers/Errors.sol', 'contracts/protocol/libraries/helpers/Helpers.sol', 'contracts/protocol/libraries/logic/BorrowLogic.sol', 'contracts/protocol/libraries/logic/BridgeLogic.sol', 'contracts/protocol/libraries/logic/EModeLogic.sol', 'contracts/protocol/libraries/logic/FlashLoanLogic.sol', 'contracts/protocol/libraries/logic/GenericLogic.sol', 'contracts/protocol/libraries/logic/IsolationModeLogic.sol', 'contracts/protocol/libraries/logic/LiquidationLogic.sol', 'contracts/protocol/libraries/logic/ReserveLogic.sol', 'contracts/protocol/libraries/logic/SupplyLogic.sol', 'contracts/protocol/libraries/logic/ValidationLogic.sol', 'contracts/protocol/libraries/math/MathUtils.sol', 'contracts/protocol/libraries/math/PercentageMath.sol', 'contracts/protocol/libraries/math/WadRayMath.sol', 'contracts/protocol/libraries/types/DataTypes.sol', 'contracts/protocol/pool/Pool.sol', 'contracts/protocol/pool/PoolStorage.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPriceOracleSentinel.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/Certora/harness/PoolHarness.sol', 'contracts/dependencies/openzeppelin/contracts/Address.sol', 'contracts/dependencies/openzeppelin/contracts/IERC20.sol', 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', 'contracts/flashloan/interfaces/IFlashLoanReceiver.sol', 'contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol', 'contracts/interfaces/IACLManager.sol', 'contracts/interfaces/IAToken.sol', 'contracts/interfaces/IAaveIncentivesController.sol', 'contracts/interfaces/IERC20WithPermit.sol', 'contracts/interfaces/IInitializableAToken.sol', 'contracts/interfaces/IInitializableDebtToken.sol', 'contracts/interfaces/IPool.sol', 'contracts/interfaces/IPoolAddressesProvider.sol', 'contracts/interfaces/IPriceOracleGetter.sol', 'contracts/interfaces/IPriceOracleSentinel.sol', 'contracts/interfaces/IReserveInterestRateStrategy.sol', 'contracts/interfaces/IScaledBalanceToken.sol', 'contracts/interfaces/IStableDebtToken.sol', 'contracts/interfaces/IVariableDebtToken.sol', 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol', 'contracts/protocol/libraries/configuration/UserConfiguration.sol', 'contracts/protocol/libraries/helpers/Errors.sol', 'contracts/protocol/libraries/helpers/Helpers.sol', 'contracts/protocol/libraries/logic/BorrowLogic.sol', 'contracts/protocol/libraries/logic/BridgeLogic.sol', 'contracts/protocol/libraries/logic/EModeLogic.sol', 'contracts/protocol/libraries/logic/FlashLoanLogic.sol', 'contracts/protocol/libraries/logic/GenericLogic.sol', 'contracts/protocol/libraries/logic/IsolationModeLogic.sol', 'contracts/protocol/libraries/logic/LiquidationLogic.sol', 'contracts/protocol/libraries/logic/ReserveLogic.sol', 'contracts/protocol/libraries/logic/SupplyLogic.sol', 'contracts/protocol/libraries/logic/ValidationLogic.sol', 'contracts/protocol/libraries/math/MathUtils.sol', 'contracts/protocol/libraries/math/PercentageMath.sol', 'contracts/protocol/libraries/math/WadRayMath.sol', 'contracts/protocol/libraries/types/DataTypes.sol', 'contracts/protocol/pool/Pool.sol', 'contracts/protocol/pool/PoolStorage.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPriceOracleGetter.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/Certora/harness/PoolHarness.sol', 'contracts/dependencies/openzeppelin/contracts/Address.sol', 'contracts/dependencies/openzeppelin/contracts/IERC20.sol', 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', 'contracts/flashloan/interfaces/IFlashLoanReceiver.sol', 'contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol', 'contracts/interfaces/IACLManager.sol', 'contracts/interfaces/IAToken.sol', 'contracts/interfaces/IAaveIncentivesController.sol', 'contracts/interfaces/IERC20WithPermit.sol', 'contracts/interfaces/IInitializableAToken.sol', 'contracts/interfaces/IInitializableDebtToken.sol', 'contracts/interfaces/IPool.sol', 'contracts/interfaces/IPoolAddressesProvider.sol', 'contracts/interfaces/IPriceOracleGetter.sol', 'contracts/interfaces/IPriceOracleSentinel.sol', 'contracts/interfaces/IReserveInterestRateStrategy.sol', 'contracts/interfaces/IScaledBalanceToken.sol', 'contracts/interfaces/IStableDebtToken.sol', 'contracts/interfaces/IVariableDebtToken.sol', 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol', 'contracts/protocol/libraries/configuration/UserConfiguration.sol', 'contracts/protocol/libraries/helpers/Errors.sol', 'contracts/protocol/libraries/helpers/Helpers.sol', 'contracts/protocol/libraries/logic/BorrowLogic.sol', 'contracts/protocol/libraries/logic/BridgeLogic.sol', 'contracts/protocol/libraries/logic/EModeLogic.sol', 'contracts/protocol/libraries/logic/FlashLoanLogic.sol', 'contracts/protocol/libraries/logic/GenericLogic.sol', 'contracts/protocol/libraries/logic/IsolationModeLogic.sol', 'contracts/protocol/libraries/logic/LiquidationLogic.sol', 'contracts/protocol/libraries/logic/ReserveLogic.sol', 'contracts/protocol/libraries/logic/SupplyLogic.sol', 'contracts/protocol/libraries/logic/ValidationLogic.sol', 'contracts/protocol/libraries/math/MathUtils.sol', 'contracts/protocol/libraries/math/PercentageMath.sol', 'contracts/protocol/libraries/math/WadRayMath.sol', 'contracts/protocol/libraries/types/DataTypes.sol', 'contracts/protocol/pool/Pool.sol', 'contracts/protocol/pool/PoolStorage.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/helpers/Helpers.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/Certora/harness/PoolHarness.sol', 'contracts/dependencies/openzeppelin/contracts/Address.sol', 'contracts/dependencies/openzeppelin/contracts/IERC20.sol', 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', 'contracts/flashloan/interfaces/IFlashLoanReceiver.sol', 'contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol', 'contracts/interfaces/IACLManager.sol', 'contracts/interfaces/IAToken.sol', 'contracts/interfaces/IAaveIncentivesController.sol', 'contracts/interfaces/IERC20WithPermit.sol', 'contracts/interfaces/IInitializableAToken.sol', 'contracts/interfaces/IInitializableDebtToken.sol', 'contracts/interfaces/IPool.sol', 'contracts/interfaces/IPoolAddressesProvider.sol', 'contracts/interfaces/IPriceOracleGetter.sol', 'contracts/interfaces/IPriceOracleSentinel.sol', 'contracts/interfaces/IReserveInterestRateStrategy.sol', 'contracts/interfaces/IScaledBalanceToken.sol', 'contracts/interfaces/IStableDebtToken.sol', 'contracts/interfaces/IVariableDebtToken.sol', 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol', 'contracts/protocol/libraries/configuration/UserConfiguration.sol', 'contracts/protocol/libraries/helpers/Errors.sol', 'contracts/protocol/libraries/helpers/Helpers.sol', 'contracts/protocol/libraries/logic/BorrowLogic.sol', 'contracts/protocol/libraries/logic/BridgeLogic.sol', 'contracts/protocol/libraries/logic/EModeLogic.sol', 'contracts/protocol/libraries/logic/FlashLoanLogic.sol', 'contracts/protocol/libraries/logic/GenericLogic.sol', 'contracts/protocol/libraries/logic/IsolationModeLogic.sol', 'contracts/protocol/libraries/logic/LiquidationLogic.sol', 'contracts/protocol/libraries/logic/ReserveLogic.sol', 'contracts/protocol/libraries/logic/SupplyLogic.sol', 'contracts/protocol/libraries/logic/ValidationLogic.sol', 'contracts/protocol/libraries/math/MathUtils.sol', 'contracts/protocol/libraries/math/PercentageMath.sol', 'contracts/protocol/libraries/math/WadRayMath.sol', 'contracts/protocol/libraries/types/DataTypes.sol', 'contracts/protocol/pool/Pool.sol', 'contracts/protocol/pool/PoolStorage.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/GenericLogic.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/Certora/harness/PoolHarness.sol', 'contracts/dependencies/openzeppelin/contracts/Address.sol', 'contracts/dependencies/openzeppelin/contracts/IERC20.sol', 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', 'contracts/flashloan/interfaces/IFlashLoanReceiver.sol', 'contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol', 'contracts/interfaces/IACLManager.sol', 'contracts/interfaces/IAToken.sol', 'contracts/interfaces/IAaveIncentivesController.sol', 'contracts/interfaces/IERC20WithPermit.sol', 'contracts/interfaces/IInitializableAToken.sol', 'contracts/interfaces/IInitializableDebtToken.sol', 'contracts/interfaces/IPool.sol', 'contracts/interfaces/IPoolAddressesProvider.sol', 'contracts/interfaces/IPriceOracleGetter.sol', 'contracts/interfaces/IPriceOracleSentinel.sol', 'contracts/interfaces/IReserveInterestRateStrategy.sol', 'contracts/interfaces/IScaledBalanceToken.sol', 'contracts/interfaces/IStableDebtToken.sol', 'contracts/interfaces/IVariableDebtToken.sol', 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol', 'contracts/protocol/libraries/configuration/UserConfiguration.sol', 'contracts/protocol/libraries/helpers/Errors.sol', 'contracts/protocol/libraries/helpers/Helpers.sol', 'contracts/protocol/libraries/logic/BorrowLogic.sol', 'contracts/protocol/libraries/logic/BridgeLogic.sol', 'contracts/protocol/libraries/logic/EModeLogic.sol', 'contracts/protocol/libraries/logic/FlashLoanLogic.sol', 'contracts/protocol/libraries/logic/GenericLogic.sol', 'contracts/protocol/libraries/logic/IsolationModeLogic.sol', 'contracts/protocol/libraries/logic/LiquidationLogic.sol', 'contracts/protocol/libraries/logic/ReserveLogic.sol', 'contracts/protocol/libraries/logic/SupplyLogic.sol', 'contracts/protocol/libraries/logic/ValidationLogic.sol', 'contracts/protocol/libraries/math/MathUtils.sol', 'contracts/protocol/libraries/math/PercentageMath.sol', 'contracts/protocol/libraries/math/WadRayMath.sol', 'contracts/protocol/libraries/types/DataTypes.sol', 'contracts/protocol/pool/Pool.sol', 'contracts/protocol/pool/PoolStorage.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/types/DataTypes.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/Certora/harness/PoolHarness.sol', 'contracts/dependencies/openzeppelin/contracts/Address.sol', 'contracts/dependencies/openzeppelin/contracts/IERC20.sol', 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', 'contracts/flashloan/interfaces/IFlashLoanReceiver.sol', 'contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol', 'contracts/interfaces/IACLManager.sol', 'contracts/interfaces/IAToken.sol', 'contracts/interfaces/IAaveIncentivesController.sol', 'contracts/interfaces/IERC20WithPermit.sol', 'contracts/interfaces/IInitializableAToken.sol', 'contracts/interfaces/IInitializableDebtToken.sol', 'contracts/interfaces/IPool.sol', 'contracts/interfaces/IPoolAddressesProvider.sol', 'contracts/interfaces/IPriceOracleGetter.sol', 'contracts/interfaces/IPriceOracleSentinel.sol', 'contracts/interfaces/IReserveInterestRateStrategy.sol', 'contracts/interfaces/IScaledBalanceToken.sol', 'contracts/interfaces/IStableDebtToken.sol', 'contracts/interfaces/IVariableDebtToken.sol', 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol', 'contracts/protocol/libraries/configuration/UserConfiguration.sol', 'contracts/protocol/libraries/helpers/Errors.sol', 'contracts/protocol/libraries/helpers/Helpers.sol', 'contracts/protocol/libraries/logic/BorrowLogic.sol', 'contracts/protocol/libraries/logic/BridgeLogic.sol', 'contracts/protocol/libraries/logic/EModeLogic.sol', 'contracts/protocol/libraries/logic/FlashLoanLogic.sol', 'contracts/protocol/libraries/logic/GenericLogic.sol', 'contracts/protocol/libraries/logic/IsolationModeLogic.sol', 'contracts/protocol/libraries/logic/LiquidationLogic.sol', 'contracts/protocol/libraries/logic/ReserveLogic.sol', 'contracts/protocol/libraries/logic/SupplyLogic.sol', 'contracts/protocol/libraries/logic/ValidationLogic.sol', 'contracts/protocol/libraries/math/MathUtils.sol', 'contracts/protocol/libraries/math/PercentageMath.sol', 'contracts/protocol/libraries/math/WadRayMath.sol', 'contracts/protocol/libraries/types/DataTypes.sol', 'contracts/protocol/pool/Pool.sol', 'contracts/protocol/pool/PoolStorage.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/configuration/UserConfiguration.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/Certora/harness/PoolHarness.sol', 'contracts/dependencies/openzeppelin/contracts/Address.sol', 'contracts/dependencies/openzeppelin/contracts/IERC20.sol', 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', 'contracts/flashloan/interfaces/IFlashLoanReceiver.sol', 'contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol', 'contracts/interfaces/IACLManager.sol', 'contracts/interfaces/IAToken.sol', 'contracts/interfaces/IAaveIncentivesController.sol', 'contracts/interfaces/IERC20WithPermit.sol', 'contracts/interfaces/IInitializableAToken.sol', 'contracts/interfaces/IInitializableDebtToken.sol', 'contracts/interfaces/IPool.sol', 'contracts/interfaces/IPoolAddressesProvider.sol', 'contracts/interfaces/IPriceOracleGetter.sol', 'contracts/interfaces/IPriceOracleSentinel.sol', 'contracts/interfaces/IReserveInterestRateStrategy.sol', 'contracts/interfaces/IScaledBalanceToken.sol', 'contracts/interfaces/IStableDebtToken.sol', 'contracts/interfaces/IVariableDebtToken.sol', 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol', 'contracts/protocol/libraries/configuration/UserConfiguration.sol', 'contracts/protocol/libraries/helpers/Errors.sol', 'contracts/protocol/libraries/helpers/Helpers.sol', 'contracts/protocol/libraries/logic/BorrowLogic.sol', 'contracts/protocol/libraries/logic/BridgeLogic.sol', 'contracts/protocol/libraries/logic/EModeLogic.sol', 'contracts/protocol/libraries/logic/FlashLoanLogic.sol', 'contracts/protocol/libraries/logic/GenericLogic.sol', 'contracts/protocol/libraries/logic/IsolationModeLogic.sol', 'contracts/protocol/libraries/logic/LiquidationLogic.sol', 'contracts/protocol/libraries/logic/ReserveLogic.sol', 'contracts/protocol/libraries/logic/SupplyLogic.sol', 'contracts/protocol/libraries/logic/ValidationLogic.sol', 'contracts/protocol/libraries/math/MathUtils.sol', 'contracts/protocol/libraries/math/PercentageMath.sol', 'contracts/protocol/libraries/math/WadRayMath.sol', 'contracts/protocol/libraries/types/DataTypes.sol', 'contracts/protocol/pool/Pool.sol', 'contracts/protocol/pool/PoolStorage.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/SafeERC20.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/Certora/harness/PoolHarness.sol', 'contracts/dependencies/openzeppelin/contracts/Address.sol', 'contracts/dependencies/openzeppelin/contracts/IERC20.sol', 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', 'contracts/flashloan/interfaces/IFlashLoanReceiver.sol', 'contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol', 'contracts/interfaces/IACLManager.sol', 'contracts/interfaces/IAToken.sol', 'contracts/interfaces/IAaveIncentivesController.sol', 'contracts/interfaces/IERC20WithPermit.sol', 'contracts/interfaces/IInitializableAToken.sol', 'contracts/interfaces/IInitializableDebtToken.sol', 'contracts/interfaces/IPool.sol', 'contracts/interfaces/IPoolAddressesProvider.sol', 'contracts/interfaces/IPriceOracleGetter.sol', 'contracts/interfaces/IPriceOracleSentinel.sol', 'contracts/interfaces/IReserveInterestRateStrategy.sol', 'contracts/interfaces/IScaledBalanceToken.sol', 'contracts/interfaces/IStableDebtToken.sol', 'contracts/interfaces/IVariableDebtToken.sol', 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol', 'contracts/protocol/libraries/configuration/UserConfiguration.sol', 'contracts/protocol/libraries/helpers/Errors.sol', 'contracts/protocol/libraries/helpers/Helpers.sol', 'contracts/protocol/libraries/logic/BorrowLogic.sol', 'contracts/protocol/libraries/logic/BridgeLogic.sol', 'contracts/protocol/libraries/logic/EModeLogic.sol', 'contracts/protocol/libraries/logic/FlashLoanLogic.sol', 'contracts/protocol/libraries/logic/GenericLogic.sol', 'contracts/protocol/libraries/logic/IsolationModeLogic.sol', 'contracts/protocol/libraries/logic/LiquidationLogic.sol', 'contracts/protocol/libraries/logic/ReserveLogic.sol', 'contracts/protocol/libraries/logic/SupplyLogic.sol', 'contracts/protocol/libraries/logic/ValidationLogic.sol', 'contracts/protocol/libraries/math/MathUtils.sol', 'contracts/protocol/libraries/math/PercentageMath.sol', 'contracts/protocol/libraries/math/WadRayMath.sol', 'contracts/protocol/libraries/types/DataTypes.sol', 'contracts/protocol/pool/Pool.sol', 'contracts/protocol/pool/PoolStorage.sol'])
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/Address.sol to worklist
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/Address.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/Certora/harness/PoolHarness.sol', 'contracts/dependencies/openzeppelin/contracts/Address.sol', 'contracts/dependencies/openzeppelin/contracts/IERC20.sol', 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', 'contracts/flashloan/interfaces/IFlashLoanReceiver.sol', 'contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol', 'contracts/interfaces/IACLManager.sol', 'contracts/interfaces/IAToken.sol', 'contracts/interfaces/IAaveIncentivesController.sol', 'contracts/interfaces/IERC20WithPermit.sol', 'contracts/interfaces/IInitializableAToken.sol', 'contracts/interfaces/IInitializableDebtToken.sol', 'contracts/interfaces/IPool.sol', 'contracts/interfaces/IPoolAddressesProvider.sol', 'contracts/interfaces/IPriceOracleGetter.sol', 'contracts/interfaces/IPriceOracleSentinel.sol', 'contracts/interfaces/IReserveInterestRateStrategy.sol', 'contracts/interfaces/IScaledBalanceToken.sol', 'contracts/interfaces/IStableDebtToken.sol', 'contracts/interfaces/IVariableDebtToken.sol', 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol', 'contracts/protocol/libraries/configuration/UserConfiguration.sol', 'contracts/protocol/libraries/helpers/Errors.sol', 'contracts/protocol/libraries/helpers/Helpers.sol', 'contracts/protocol/libraries/logic/BorrowLogic.sol', 'contracts/protocol/libraries/logic/BridgeLogic.sol', 'contracts/protocol/libraries/logic/EModeLogic.sol', 'contracts/protocol/libraries/logic/FlashLoanLogic.sol', 'contracts/protocol/libraries/logic/GenericLogic.sol', 'contracts/protocol/libraries/logic/IsolationModeLogic.sol', 'contracts/protocol/libraries/logic/LiquidationLogic.sol', 'contracts/protocol/libraries/logic/ReserveLogic.sol', 'contracts/protocol/libraries/logic/SupplyLogic.sol', 'contracts/protocol/libraries/logic/ValidationLogic.sol', 'contracts/protocol/libraries/math/MathUtils.sol', 'contracts/protocol/libraries/math/PercentageMath.sol', 'contracts/protocol/libraries/math/WadRayMath.sol', 'contracts/protocol/libraries/types/DataTypes.sol', 'contracts/protocol/pool/Pool.sol', 'contracts/protocol/pool/PoolStorage.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/ReserveLogic.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/Certora/harness/PoolHarness.sol', 'contracts/dependencies/openzeppelin/contracts/Address.sol', 'contracts/dependencies/openzeppelin/contracts/IERC20.sol', 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', 'contracts/flashloan/interfaces/IFlashLoanReceiver.sol', 'contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol', 'contracts/interfaces/IACLManager.sol', 'contracts/interfaces/IAToken.sol', 'contracts/interfaces/IAaveIncentivesController.sol', 'contracts/interfaces/IERC20WithPermit.sol', 'contracts/interfaces/IInitializableAToken.sol', 'contracts/interfaces/IInitializableDebtToken.sol', 'contracts/interfaces/IPool.sol', 'contracts/interfaces/IPoolAddressesProvider.sol', 'contracts/interfaces/IPriceOracleGetter.sol', 'contracts/interfaces/IPriceOracleSentinel.sol', 'contracts/interfaces/IReserveInterestRateStrategy.sol', 'contracts/interfaces/IScaledBalanceToken.sol', 'contracts/interfaces/IStableDebtToken.sol', 'contracts/interfaces/IVariableDebtToken.sol', 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol', 'contracts/protocol/libraries/configuration/UserConfiguration.sol', 'contracts/protocol/libraries/helpers/Errors.sol', 'contracts/protocol/libraries/helpers/Helpers.sol', 'contracts/protocol/libraries/logic/BorrowLogic.sol', 'contracts/protocol/libraries/logic/BridgeLogic.sol', 'contracts/protocol/libraries/logic/EModeLogic.sol', 'contracts/protocol/libraries/logic/FlashLoanLogic.sol', 'contracts/protocol/libraries/logic/GenericLogic.sol', 'contracts/protocol/libraries/logic/IsolationModeLogic.sol', 'contracts/protocol/libraries/logic/LiquidationLogic.sol', 'contracts/protocol/libraries/logic/ReserveLogic.sol', 'contracts/protocol/libraries/logic/SupplyLogic.sol', 'contracts/protocol/libraries/logic/ValidationLogic.sol', 'contracts/protocol/libraries/math/MathUtils.sol', 'contracts/protocol/libraries/math/PercentageMath.sol', 'contracts/protocol/libraries/math/WadRayMath.sol', 'contracts/protocol/libraries/types/DataTypes.sol', 'contracts/protocol/pool/Pool.sol', 'contracts/protocol/pool/PoolStorage.sol'])
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/MathUtils.sol to worklist
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/MathUtils.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/Certora/harness/PoolHarness.sol', 'contracts/dependencies/openzeppelin/contracts/Address.sol', 'contracts/dependencies/openzeppelin/contracts/IERC20.sol', 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', 'contracts/flashloan/interfaces/IFlashLoanReceiver.sol', 'contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol', 'contracts/interfaces/IACLManager.sol', 'contracts/interfaces/IAToken.sol', 'contracts/interfaces/IAaveIncentivesController.sol', 'contracts/interfaces/IERC20WithPermit.sol', 'contracts/interfaces/IInitializableAToken.sol', 'contracts/interfaces/IInitializableDebtToken.sol', 'contracts/interfaces/IPool.sol', 'contracts/interfaces/IPoolAddressesProvider.sol', 'contracts/interfaces/IPriceOracleGetter.sol', 'contracts/interfaces/IPriceOracleSentinel.sol', 'contracts/interfaces/IReserveInterestRateStrategy.sol', 'contracts/interfaces/IScaledBalanceToken.sol', 'contracts/interfaces/IStableDebtToken.sol', 'contracts/interfaces/IVariableDebtToken.sol', 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol', 'contracts/protocol/libraries/configuration/UserConfiguration.sol', 'contracts/protocol/libraries/helpers/Errors.sol', 'contracts/protocol/libraries/helpers/Helpers.sol', 'contracts/protocol/libraries/logic/BorrowLogic.sol', 'contracts/protocol/libraries/logic/BridgeLogic.sol', 'contracts/protocol/libraries/logic/EModeLogic.sol', 'contracts/protocol/libraries/logic/FlashLoanLogic.sol', 'contracts/protocol/libraries/logic/GenericLogic.sol', 'contracts/protocol/libraries/logic/IsolationModeLogic.sol', 'contracts/protocol/libraries/logic/LiquidationLogic.sol', 'contracts/protocol/libraries/logic/ReserveLogic.sol', 'contracts/protocol/libraries/logic/SupplyLogic.sol', 'contracts/protocol/libraries/logic/ValidationLogic.sol', 'contracts/protocol/libraries/math/MathUtils.sol', 'contracts/protocol/libraries/math/PercentageMath.sol', 'contracts/protocol/libraries/math/WadRayMath.sol', 'contracts/protocol/libraries/types/DataTypes.sol', 'contracts/protocol/pool/Pool.sol', 'contracts/protocol/pool/PoolStorage.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/configuration/ReserveConfiguration.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/Certora/harness/PoolHarness.sol', 'contracts/dependencies/openzeppelin/contracts/Address.sol', 'contracts/dependencies/openzeppelin/contracts/IERC20.sol', 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', 'contracts/flashloan/interfaces/IFlashLoanReceiver.sol', 'contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol', 'contracts/interfaces/IACLManager.sol', 'contracts/interfaces/IAToken.sol', 'contracts/interfaces/IAaveIncentivesController.sol', 'contracts/interfaces/IERC20WithPermit.sol', 'contracts/interfaces/IInitializableAToken.sol', 'contracts/interfaces/IInitializableDebtToken.sol', 'contracts/interfaces/IPool.sol', 'contracts/interfaces/IPoolAddressesProvider.sol', 'contracts/interfaces/IPriceOracleGetter.sol', 'contracts/interfaces/IPriceOracleSentinel.sol', 'contracts/interfaces/IReserveInterestRateStrategy.sol', 'contracts/interfaces/IScaledBalanceToken.sol', 'contracts/interfaces/IStableDebtToken.sol', 'contracts/interfaces/IVariableDebtToken.sol', 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol', 'contracts/protocol/libraries/configuration/UserConfiguration.sol', 'contracts/protocol/libraries/helpers/Errors.sol', 'contracts/protocol/libraries/helpers/Helpers.sol', 'contracts/protocol/libraries/logic/BorrowLogic.sol', 'contracts/protocol/libraries/logic/BridgeLogic.sol', 'contracts/protocol/libraries/logic/EModeLogic.sol', 'contracts/protocol/libraries/logic/FlashLoanLogic.sol', 'contracts/protocol/libraries/logic/GenericLogic.sol', 'contracts/protocol/libraries/logic/IsolationModeLogic.sol', 'contracts/protocol/libraries/logic/LiquidationLogic.sol', 'contracts/protocol/libraries/logic/ReserveLogic.sol', 'contracts/protocol/libraries/logic/SupplyLogic.sol', 'contracts/protocol/libraries/logic/ValidationLogic.sol', 'contracts/protocol/libraries/math/MathUtils.sol', 'contracts/protocol/libraries/math/PercentageMath.sol', 'contracts/protocol/libraries/math/WadRayMath.sol', 'contracts/protocol/libraries/types/DataTypes.sol', 'contracts/protocol/pool/Pool.sol', 'contracts/protocol/pool/PoolStorage.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IScaledBalanceToken.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/Certora/harness/PoolHarness.sol', 'contracts/dependencies/openzeppelin/contracts/Address.sol', 'contracts/dependencies/openzeppelin/contracts/IERC20.sol', 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', 'contracts/flashloan/interfaces/IFlashLoanReceiver.sol', 'contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol', 'contracts/interfaces/IACLManager.sol', 'contracts/interfaces/IAToken.sol', 'contracts/interfaces/IAaveIncentivesController.sol', 'contracts/interfaces/IERC20WithPermit.sol', 'contracts/interfaces/IInitializableAToken.sol', 'contracts/interfaces/IInitializableDebtToken.sol', 'contracts/interfaces/IPool.sol', 'contracts/interfaces/IPoolAddressesProvider.sol', 'contracts/interfaces/IPriceOracleGetter.sol', 'contracts/interfaces/IPriceOracleSentinel.sol', 'contracts/interfaces/IReserveInterestRateStrategy.sol', 'contracts/interfaces/IScaledBalanceToken.sol', 'contracts/interfaces/IStableDebtToken.sol', 'contracts/interfaces/IVariableDebtToken.sol', 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol', 'contracts/protocol/libraries/configuration/UserConfiguration.sol', 'contracts/protocol/libraries/helpers/Errors.sol', 'contracts/protocol/libraries/helpers/Helpers.sol', 'contracts/protocol/libraries/logic/BorrowLogic.sol', 'contracts/protocol/libraries/logic/BridgeLogic.sol', 'contracts/protocol/libraries/logic/EModeLogic.sol', 'contracts/protocol/libraries/logic/FlashLoanLogic.sol', 'contracts/protocol/libraries/logic/GenericLogic.sol', 'contracts/protocol/libraries/logic/IsolationModeLogic.sol', 'contracts/protocol/libraries/logic/LiquidationLogic.sol', 'contracts/protocol/libraries/logic/ReserveLogic.sol', 'contracts/protocol/libraries/logic/SupplyLogic.sol', 'contracts/protocol/libraries/logic/ValidationLogic.sol', 'contracts/protocol/libraries/math/MathUtils.sol', 'contracts/protocol/libraries/math/PercentageMath.sol', 'contracts/protocol/libraries/math/WadRayMath.sol', 'contracts/protocol/libraries/types/DataTypes.sol', 'contracts/protocol/pool/Pool.sol', 'contracts/protocol/pool/PoolStorage.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/IERC20.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/Certora/harness/PoolHarness.sol', 'contracts/dependencies/openzeppelin/contracts/Address.sol', 'contracts/dependencies/openzeppelin/contracts/IERC20.sol', 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', 'contracts/flashloan/interfaces/IFlashLoanReceiver.sol', 'contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol', 'contracts/interfaces/IACLManager.sol', 'contracts/interfaces/IAToken.sol', 'contracts/interfaces/IAaveIncentivesController.sol', 'contracts/interfaces/IERC20WithPermit.sol', 'contracts/interfaces/IInitializableAToken.sol', 'contracts/interfaces/IInitializableDebtToken.sol', 'contracts/interfaces/IPool.sol', 'contracts/interfaces/IPoolAddressesProvider.sol', 'contracts/interfaces/IPriceOracleGetter.sol', 'contracts/interfaces/IPriceOracleSentinel.sol', 'contracts/interfaces/IReserveInterestRateStrategy.sol', 'contracts/interfaces/IScaledBalanceToken.sol', 'contracts/interfaces/IStableDebtToken.sol', 'contracts/interfaces/IVariableDebtToken.sol', 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol', 'contracts/protocol/libraries/configuration/UserConfiguration.sol', 'contracts/protocol/libraries/helpers/Errors.sol', 'contracts/protocol/libraries/helpers/Helpers.sol', 'contracts/protocol/libraries/logic/BorrowLogic.sol', 'contracts/protocol/libraries/logic/BridgeLogic.sol', 'contracts/protocol/libraries/logic/EModeLogic.sol', 'contracts/protocol/libraries/logic/FlashLoanLogic.sol', 'contracts/protocol/libraries/logic/GenericLogic.sol', 'contracts/protocol/libraries/logic/IsolationModeLogic.sol', 'contracts/protocol/libraries/logic/LiquidationLogic.sol', 'contracts/protocol/libraries/logic/ReserveLogic.sol', 'contracts/protocol/libraries/logic/SupplyLogic.sol', 'contracts/protocol/libraries/logic/ValidationLogic.sol', 'contracts/protocol/libraries/math/MathUtils.sol', 'contracts/protocol/libraries/math/PercentageMath.sol', 'contracts/protocol/libraries/math/WadRayMath.sol', 'contracts/protocol/libraries/types/DataTypes.sol', 'contracts/protocol/pool/Pool.sol', 'contracts/protocol/pool/PoolStorage.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IAToken.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/Certora/harness/PoolHarness.sol', 'contracts/dependencies/openzeppelin/contracts/Address.sol', 'contracts/dependencies/openzeppelin/contracts/IERC20.sol', 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', 'contracts/flashloan/interfaces/IFlashLoanReceiver.sol', 'contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol', 'contracts/interfaces/IACLManager.sol', 'contracts/interfaces/IAToken.sol', 'contracts/interfaces/IAaveIncentivesController.sol', 'contracts/interfaces/IERC20WithPermit.sol', 'contracts/interfaces/IInitializableAToken.sol', 'contracts/interfaces/IInitializableDebtToken.sol', 'contracts/interfaces/IPool.sol', 'contracts/interfaces/IPoolAddressesProvider.sol', 'contracts/interfaces/IPriceOracleGetter.sol', 'contracts/interfaces/IPriceOracleSentinel.sol', 'contracts/interfaces/IReserveInterestRateStrategy.sol', 'contracts/interfaces/IScaledBalanceToken.sol', 'contracts/interfaces/IStableDebtToken.sol', 'contracts/interfaces/IVariableDebtToken.sol', 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol', 'contracts/protocol/libraries/configuration/UserConfiguration.sol', 'contracts/protocol/libraries/helpers/Errors.sol', 'contracts/protocol/libraries/helpers/Helpers.sol', 'contracts/protocol/libraries/logic/BorrowLogic.sol', 'contracts/protocol/libraries/logic/BridgeLogic.sol', 'contracts/protocol/libraries/logic/EModeLogic.sol', 'contracts/protocol/libraries/logic/FlashLoanLogic.sol', 'contracts/protocol/libraries/logic/GenericLogic.sol', 'contracts/protocol/libraries/logic/IsolationModeLogic.sol', 'contracts/protocol/libraries/logic/LiquidationLogic.sol', 'contracts/protocol/libraries/logic/ReserveLogic.sol', 'contracts/protocol/libraries/logic/SupplyLogic.sol', 'contracts/protocol/libraries/logic/ValidationLogic.sol', 'contracts/protocol/libraries/math/MathUtils.sol', 'contracts/protocol/libraries/math/PercentageMath.sol', 'contracts/protocol/libraries/math/WadRayMath.sol', 'contracts/protocol/libraries/types/DataTypes.sol', 'contracts/protocol/pool/Pool.sol', 'contracts/protocol/pool/PoolStorage.sol'])
Adding a base contract link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IInitializableAToken.sol to worklist
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IInitializableAToken.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/Certora/harness/PoolHarness.sol', 'contracts/dependencies/openzeppelin/contracts/Address.sol', 'contracts/dependencies/openzeppelin/contracts/IERC20.sol', 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', 'contracts/flashloan/interfaces/IFlashLoanReceiver.sol', 'contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol', 'contracts/interfaces/IACLManager.sol', 'contracts/interfaces/IAToken.sol', 'contracts/interfaces/IAaveIncentivesController.sol', 'contracts/interfaces/IERC20WithPermit.sol', 'contracts/interfaces/IInitializableAToken.sol', 'contracts/interfaces/IInitializableDebtToken.sol', 'contracts/interfaces/IPool.sol', 'contracts/interfaces/IPoolAddressesProvider.sol', 'contracts/interfaces/IPriceOracleGetter.sol', 'contracts/interfaces/IPriceOracleSentinel.sol', 'contracts/interfaces/IReserveInterestRateStrategy.sol', 'contracts/interfaces/IScaledBalanceToken.sol', 'contracts/interfaces/IStableDebtToken.sol', 'contracts/interfaces/IVariableDebtToken.sol', 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol', 'contracts/protocol/libraries/configuration/UserConfiguration.sol', 'contracts/protocol/libraries/helpers/Errors.sol', 'contracts/protocol/libraries/helpers/Helpers.sol', 'contracts/protocol/libraries/logic/BorrowLogic.sol', 'contracts/protocol/libraries/logic/BridgeLogic.sol', 'contracts/protocol/libraries/logic/EModeLogic.sol', 'contracts/protocol/libraries/logic/FlashLoanLogic.sol', 'contracts/protocol/libraries/logic/GenericLogic.sol', 'contracts/protocol/libraries/logic/IsolationModeLogic.sol', 'contracts/protocol/libraries/logic/LiquidationLogic.sol', 'contracts/protocol/libraries/logic/ReserveLogic.sol', 'contracts/protocol/libraries/logic/SupplyLogic.sol', 'contracts/protocol/libraries/logic/ValidationLogic.sol', 'contracts/protocol/libraries/math/MathUtils.sol', 'contracts/protocol/libraries/math/PercentageMath.sol', 'contracts/protocol/libraries/math/WadRayMath.sol', 'contracts/protocol/libraries/types/DataTypes.sol', 'contracts/protocol/pool/Pool.sol', 'contracts/protocol/pool/PoolStorage.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/LiquidationLogic.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/Certora/harness/PoolHarness.sol', 'contracts/dependencies/openzeppelin/contracts/Address.sol', 'contracts/dependencies/openzeppelin/contracts/IERC20.sol', 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', 'contracts/flashloan/interfaces/IFlashLoanReceiver.sol', 'contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol', 'contracts/interfaces/IACLManager.sol', 'contracts/interfaces/IAToken.sol', 'contracts/interfaces/IAaveIncentivesController.sol', 'contracts/interfaces/IERC20WithPermit.sol', 'contracts/interfaces/IInitializableAToken.sol', 'contracts/interfaces/IInitializableDebtToken.sol', 'contracts/interfaces/IPool.sol', 'contracts/interfaces/IPoolAddressesProvider.sol', 'contracts/interfaces/IPriceOracleGetter.sol', 'contracts/interfaces/IPriceOracleSentinel.sol', 'contracts/interfaces/IReserveInterestRateStrategy.sol', 'contracts/interfaces/IScaledBalanceToken.sol', 'contracts/interfaces/IStableDebtToken.sol', 'contracts/interfaces/IVariableDebtToken.sol', 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol', 'contracts/protocol/libraries/configuration/UserConfiguration.sol', 'contracts/protocol/libraries/helpers/Errors.sol', 'contracts/protocol/libraries/helpers/Helpers.sol', 'contracts/protocol/libraries/logic/BorrowLogic.sol', 'contracts/protocol/libraries/logic/BridgeLogic.sol', 'contracts/protocol/libraries/logic/EModeLogic.sol', 'contracts/protocol/libraries/logic/FlashLoanLogic.sol', 'contracts/protocol/libraries/logic/GenericLogic.sol', 'contracts/protocol/libraries/logic/IsolationModeLogic.sol', 'contracts/protocol/libraries/logic/LiquidationLogic.sol', 'contracts/protocol/libraries/logic/ReserveLogic.sol', 'contracts/protocol/libraries/logic/SupplyLogic.sol', 'contracts/protocol/libraries/logic/ValidationLogic.sol', 'contracts/protocol/libraries/math/MathUtils.sol', 'contracts/protocol/libraries/math/PercentageMath.sol', 'contracts/protocol/libraries/math/WadRayMath.sol', 'contracts/protocol/libraries/types/DataTypes.sol', 'contracts/protocol/pool/Pool.sol', 'contracts/protocol/pool/PoolStorage.sol'])
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IVariableDebtToken.sol to worklist
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/IsolationModeLogic.sol to worklist
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/IsolationModeLogic.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/Certora/harness/PoolHarness.sol', 'contracts/dependencies/openzeppelin/contracts/Address.sol', 'contracts/dependencies/openzeppelin/contracts/IERC20.sol', 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', 'contracts/flashloan/interfaces/IFlashLoanReceiver.sol', 'contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol', 'contracts/interfaces/IACLManager.sol', 'contracts/interfaces/IAToken.sol', 'contracts/interfaces/IAaveIncentivesController.sol', 'contracts/interfaces/IERC20WithPermit.sol', 'contracts/interfaces/IInitializableAToken.sol', 'contracts/interfaces/IInitializableDebtToken.sol', 'contracts/interfaces/IPool.sol', 'contracts/interfaces/IPoolAddressesProvider.sol', 'contracts/interfaces/IPriceOracleGetter.sol', 'contracts/interfaces/IPriceOracleSentinel.sol', 'contracts/interfaces/IReserveInterestRateStrategy.sol', 'contracts/interfaces/IScaledBalanceToken.sol', 'contracts/interfaces/IStableDebtToken.sol', 'contracts/interfaces/IVariableDebtToken.sol', 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol', 'contracts/protocol/libraries/configuration/UserConfiguration.sol', 'contracts/protocol/libraries/helpers/Errors.sol', 'contracts/protocol/libraries/helpers/Helpers.sol', 'contracts/protocol/libraries/logic/BorrowLogic.sol', 'contracts/protocol/libraries/logic/BridgeLogic.sol', 'contracts/protocol/libraries/logic/EModeLogic.sol', 'contracts/protocol/libraries/logic/FlashLoanLogic.sol', 'contracts/protocol/libraries/logic/GenericLogic.sol', 'contracts/protocol/libraries/logic/IsolationModeLogic.sol', 'contracts/protocol/libraries/logic/LiquidationLogic.sol', 'contracts/protocol/libraries/logic/ReserveLogic.sol', 'contracts/protocol/libraries/logic/SupplyLogic.sol', 'contracts/protocol/libraries/logic/ValidationLogic.sol', 'contracts/protocol/libraries/math/MathUtils.sol', 'contracts/protocol/libraries/math/PercentageMath.sol', 'contracts/protocol/libraries/math/WadRayMath.sol', 'contracts/protocol/libraries/types/DataTypes.sol', 'contracts/protocol/pool/Pool.sol', 'contracts/protocol/pool/PoolStorage.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IVariableDebtToken.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/Certora/harness/PoolHarness.sol', 'contracts/dependencies/openzeppelin/contracts/Address.sol', 'contracts/dependencies/openzeppelin/contracts/IERC20.sol', 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', 'contracts/flashloan/interfaces/IFlashLoanReceiver.sol', 'contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol', 'contracts/interfaces/IACLManager.sol', 'contracts/interfaces/IAToken.sol', 'contracts/interfaces/IAaveIncentivesController.sol', 'contracts/interfaces/IERC20WithPermit.sol', 'contracts/interfaces/IInitializableAToken.sol', 'contracts/interfaces/IInitializableDebtToken.sol', 'contracts/interfaces/IPool.sol', 'contracts/interfaces/IPoolAddressesProvider.sol', 'contracts/interfaces/IPriceOracleGetter.sol', 'contracts/interfaces/IPriceOracleSentinel.sol', 'contracts/interfaces/IReserveInterestRateStrategy.sol', 'contracts/interfaces/IScaledBalanceToken.sol', 'contracts/interfaces/IStableDebtToken.sol', 'contracts/interfaces/IVariableDebtToken.sol', 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol', 'contracts/protocol/libraries/configuration/UserConfiguration.sol', 'contracts/protocol/libraries/helpers/Errors.sol', 'contracts/protocol/libraries/helpers/Helpers.sol', 'contracts/protocol/libraries/logic/BorrowLogic.sol', 'contracts/protocol/libraries/logic/BridgeLogic.sol', 'contracts/protocol/libraries/logic/EModeLogic.sol', 'contracts/protocol/libraries/logic/FlashLoanLogic.sol', 'contracts/protocol/libraries/logic/GenericLogic.sol', 'contracts/protocol/libraries/logic/IsolationModeLogic.sol', 'contracts/protocol/libraries/logic/LiquidationLogic.sol', 'contracts/protocol/libraries/logic/ReserveLogic.sol', 'contracts/protocol/libraries/logic/SupplyLogic.sol', 'contracts/protocol/libraries/logic/ValidationLogic.sol', 'contracts/protocol/libraries/math/MathUtils.sol', 'contracts/protocol/libraries/math/PercentageMath.sol', 'contracts/protocol/libraries/math/WadRayMath.sol', 'contracts/protocol/libraries/types/DataTypes.sol', 'contracts/protocol/pool/Pool.sol', 'contracts/protocol/pool/PoolStorage.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/FlashLoanLogic.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/Certora/harness/PoolHarness.sol', 'contracts/dependencies/openzeppelin/contracts/Address.sol', 'contracts/dependencies/openzeppelin/contracts/IERC20.sol', 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', 'contracts/flashloan/interfaces/IFlashLoanReceiver.sol', 'contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol', 'contracts/interfaces/IACLManager.sol', 'contracts/interfaces/IAToken.sol', 'contracts/interfaces/IAaveIncentivesController.sol', 'contracts/interfaces/IERC20WithPermit.sol', 'contracts/interfaces/IInitializableAToken.sol', 'contracts/interfaces/IInitializableDebtToken.sol', 'contracts/interfaces/IPool.sol', 'contracts/interfaces/IPoolAddressesProvider.sol', 'contracts/interfaces/IPriceOracleGetter.sol', 'contracts/interfaces/IPriceOracleSentinel.sol', 'contracts/interfaces/IReserveInterestRateStrategy.sol', 'contracts/interfaces/IScaledBalanceToken.sol', 'contracts/interfaces/IStableDebtToken.sol', 'contracts/interfaces/IVariableDebtToken.sol', 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol', 'contracts/protocol/libraries/configuration/UserConfiguration.sol', 'contracts/protocol/libraries/helpers/Errors.sol', 'contracts/protocol/libraries/helpers/Helpers.sol', 'contracts/protocol/libraries/logic/BorrowLogic.sol', 'contracts/protocol/libraries/logic/BridgeLogic.sol', 'contracts/protocol/libraries/logic/EModeLogic.sol', 'contracts/protocol/libraries/logic/FlashLoanLogic.sol', 'contracts/protocol/libraries/logic/GenericLogic.sol', 'contracts/protocol/libraries/logic/IsolationModeLogic.sol', 'contracts/protocol/libraries/logic/LiquidationLogic.sol', 'contracts/protocol/libraries/logic/ReserveLogic.sol', 'contracts/protocol/libraries/logic/SupplyLogic.sol', 'contracts/protocol/libraries/logic/ValidationLogic.sol', 'contracts/protocol/libraries/math/MathUtils.sol', 'contracts/protocol/libraries/math/PercentageMath.sol', 'contracts/protocol/libraries/math/WadRayMath.sol', 'contracts/protocol/libraries/types/DataTypes.sol', 'contracts/protocol/pool/Pool.sol', 'contracts/protocol/pool/PoolStorage.sol'])
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/flashloan/interfaces/IFlashLoanReceiver.sol to worklist
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol to worklist
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPoolAddressesProvider.sol to worklist
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPoolAddressesProvider.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/Certora/harness/PoolHarness.sol', 'contracts/dependencies/openzeppelin/contracts/Address.sol', 'contracts/dependencies/openzeppelin/contracts/IERC20.sol', 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', 'contracts/flashloan/interfaces/IFlashLoanReceiver.sol', 'contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol', 'contracts/interfaces/IACLManager.sol', 'contracts/interfaces/IAToken.sol', 'contracts/interfaces/IAaveIncentivesController.sol', 'contracts/interfaces/IERC20WithPermit.sol', 'contracts/interfaces/IInitializableAToken.sol', 'contracts/interfaces/IInitializableDebtToken.sol', 'contracts/interfaces/IPool.sol', 'contracts/interfaces/IPoolAddressesProvider.sol', 'contracts/interfaces/IPriceOracleGetter.sol', 'contracts/interfaces/IPriceOracleSentinel.sol', 'contracts/interfaces/IReserveInterestRateStrategy.sol', 'contracts/interfaces/IScaledBalanceToken.sol', 'contracts/interfaces/IStableDebtToken.sol', 'contracts/interfaces/IVariableDebtToken.sol', 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol', 'contracts/protocol/libraries/configuration/UserConfiguration.sol', 'contracts/protocol/libraries/helpers/Errors.sol', 'contracts/protocol/libraries/helpers/Helpers.sol', 'contracts/protocol/libraries/logic/BorrowLogic.sol', 'contracts/protocol/libraries/logic/BridgeLogic.sol', 'contracts/protocol/libraries/logic/EModeLogic.sol', 'contracts/protocol/libraries/logic/FlashLoanLogic.sol', 'contracts/protocol/libraries/logic/GenericLogic.sol', 'contracts/protocol/libraries/logic/IsolationModeLogic.sol', 'contracts/protocol/libraries/logic/LiquidationLogic.sol', 'contracts/protocol/libraries/logic/ReserveLogic.sol', 'contracts/protocol/libraries/logic/SupplyLogic.sol', 'contracts/protocol/libraries/logic/ValidationLogic.sol', 'contracts/protocol/libraries/math/MathUtils.sol', 'contracts/protocol/libraries/math/PercentageMath.sol', 'contracts/protocol/libraries/math/WadRayMath.sol', 'contracts/protocol/libraries/types/DataTypes.sol', 'contracts/protocol/pool/Pool.sol', 'contracts/protocol/pool/PoolStorage.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/Certora/harness/PoolHarness.sol', 'contracts/dependencies/openzeppelin/contracts/Address.sol', 'contracts/dependencies/openzeppelin/contracts/IERC20.sol', 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', 'contracts/flashloan/interfaces/IFlashLoanReceiver.sol', 'contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol', 'contracts/interfaces/IACLManager.sol', 'contracts/interfaces/IAToken.sol', 'contracts/interfaces/IAaveIncentivesController.sol', 'contracts/interfaces/IERC20WithPermit.sol', 'contracts/interfaces/IInitializableAToken.sol', 'contracts/interfaces/IInitializableDebtToken.sol', 'contracts/interfaces/IPool.sol', 'contracts/interfaces/IPoolAddressesProvider.sol', 'contracts/interfaces/IPriceOracleGetter.sol', 'contracts/interfaces/IPriceOracleSentinel.sol', 'contracts/interfaces/IReserveInterestRateStrategy.sol', 'contracts/interfaces/IScaledBalanceToken.sol', 'contracts/interfaces/IStableDebtToken.sol', 'contracts/interfaces/IVariableDebtToken.sol', 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol', 'contracts/protocol/libraries/configuration/UserConfiguration.sol', 'contracts/protocol/libraries/helpers/Errors.sol', 'contracts/protocol/libraries/helpers/Helpers.sol', 'contracts/protocol/libraries/logic/BorrowLogic.sol', 'contracts/protocol/libraries/logic/BridgeLogic.sol', 'contracts/protocol/libraries/logic/EModeLogic.sol', 'contracts/protocol/libraries/logic/FlashLoanLogic.sol', 'contracts/protocol/libraries/logic/GenericLogic.sol', 'contracts/protocol/libraries/logic/IsolationModeLogic.sol', 'contracts/protocol/libraries/logic/LiquidationLogic.sol', 'contracts/protocol/libraries/logic/ReserveLogic.sol', 'contracts/protocol/libraries/logic/SupplyLogic.sol', 'contracts/protocol/libraries/logic/ValidationLogic.sol', 'contracts/protocol/libraries/math/MathUtils.sol', 'contracts/protocol/libraries/math/PercentageMath.sol', 'contracts/protocol/libraries/math/WadRayMath.sol', 'contracts/protocol/libraries/types/DataTypes.sol', 'contracts/protocol/pool/Pool.sol', 'contracts/protocol/pool/PoolStorage.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/flashloan/interfaces/IFlashLoanReceiver.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/Certora/harness/PoolHarness.sol', 'contracts/dependencies/openzeppelin/contracts/Address.sol', 'contracts/dependencies/openzeppelin/contracts/IERC20.sol', 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', 'contracts/flashloan/interfaces/IFlashLoanReceiver.sol', 'contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol', 'contracts/interfaces/IACLManager.sol', 'contracts/interfaces/IAToken.sol', 'contracts/interfaces/IAaveIncentivesController.sol', 'contracts/interfaces/IERC20WithPermit.sol', 'contracts/interfaces/IInitializableAToken.sol', 'contracts/interfaces/IInitializableDebtToken.sol', 'contracts/interfaces/IPool.sol', 'contracts/interfaces/IPoolAddressesProvider.sol', 'contracts/interfaces/IPriceOracleGetter.sol', 'contracts/interfaces/IPriceOracleSentinel.sol', 'contracts/interfaces/IReserveInterestRateStrategy.sol', 'contracts/interfaces/IScaledBalanceToken.sol', 'contracts/interfaces/IStableDebtToken.sol', 'contracts/interfaces/IVariableDebtToken.sol', 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol', 'contracts/protocol/libraries/configuration/UserConfiguration.sol', 'contracts/protocol/libraries/helpers/Errors.sol', 'contracts/protocol/libraries/helpers/Helpers.sol', 'contracts/protocol/libraries/logic/BorrowLogic.sol', 'contracts/protocol/libraries/logic/BridgeLogic.sol', 'contracts/protocol/libraries/logic/EModeLogic.sol', 'contracts/protocol/libraries/logic/FlashLoanLogic.sol', 'contracts/protocol/libraries/logic/GenericLogic.sol', 'contracts/protocol/libraries/logic/IsolationModeLogic.sol', 'contracts/protocol/libraries/logic/LiquidationLogic.sol', 'contracts/protocol/libraries/logic/ReserveLogic.sol', 'contracts/protocol/libraries/logic/SupplyLogic.sol', 'contracts/protocol/libraries/logic/ValidationLogic.sol', 'contracts/protocol/libraries/math/MathUtils.sol', 'contracts/protocol/libraries/math/PercentageMath.sol', 'contracts/protocol/libraries/math/WadRayMath.sol', 'contracts/protocol/libraries/types/DataTypes.sol', 'contracts/protocol/pool/Pool.sol', 'contracts/protocol/pool/PoolStorage.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/EModeLogic.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/Certora/harness/PoolHarness.sol', 'contracts/dependencies/openzeppelin/contracts/Address.sol', 'contracts/dependencies/openzeppelin/contracts/IERC20.sol', 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', 'contracts/flashloan/interfaces/IFlashLoanReceiver.sol', 'contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol', 'contracts/interfaces/IACLManager.sol', 'contracts/interfaces/IAToken.sol', 'contracts/interfaces/IAaveIncentivesController.sol', 'contracts/interfaces/IERC20WithPermit.sol', 'contracts/interfaces/IInitializableAToken.sol', 'contracts/interfaces/IInitializableDebtToken.sol', 'contracts/interfaces/IPool.sol', 'contracts/interfaces/IPoolAddressesProvider.sol', 'contracts/interfaces/IPriceOracleGetter.sol', 'contracts/interfaces/IPriceOracleSentinel.sol', 'contracts/interfaces/IReserveInterestRateStrategy.sol', 'contracts/interfaces/IScaledBalanceToken.sol', 'contracts/interfaces/IStableDebtToken.sol', 'contracts/interfaces/IVariableDebtToken.sol', 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol', 'contracts/protocol/libraries/configuration/UserConfiguration.sol', 'contracts/protocol/libraries/helpers/Errors.sol', 'contracts/protocol/libraries/helpers/Helpers.sol', 'contracts/protocol/libraries/logic/BorrowLogic.sol', 'contracts/protocol/libraries/logic/BridgeLogic.sol', 'contracts/protocol/libraries/logic/EModeLogic.sol', 'contracts/protocol/libraries/logic/FlashLoanLogic.sol', 'contracts/protocol/libraries/logic/GenericLogic.sol', 'contracts/protocol/libraries/logic/IsolationModeLogic.sol', 'contracts/protocol/libraries/logic/LiquidationLogic.sol', 'contracts/protocol/libraries/logic/ReserveLogic.sol', 'contracts/protocol/libraries/logic/SupplyLogic.sol', 'contracts/protocol/libraries/logic/ValidationLogic.sol', 'contracts/protocol/libraries/math/MathUtils.sol', 'contracts/protocol/libraries/math/PercentageMath.sol', 'contracts/protocol/libraries/math/WadRayMath.sol', 'contracts/protocol/libraries/types/DataTypes.sol', 'contracts/protocol/pool/Pool.sol', 'contracts/protocol/pool/PoolStorage.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/BridgeLogic.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/Certora/harness/PoolHarness.sol', 'contracts/dependencies/openzeppelin/contracts/Address.sol', 'contracts/dependencies/openzeppelin/contracts/IERC20.sol', 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', 'contracts/flashloan/interfaces/IFlashLoanReceiver.sol', 'contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol', 'contracts/interfaces/IACLManager.sol', 'contracts/interfaces/IAToken.sol', 'contracts/interfaces/IAaveIncentivesController.sol', 'contracts/interfaces/IERC20WithPermit.sol', 'contracts/interfaces/IInitializableAToken.sol', 'contracts/interfaces/IInitializableDebtToken.sol', 'contracts/interfaces/IPool.sol', 'contracts/interfaces/IPoolAddressesProvider.sol', 'contracts/interfaces/IPriceOracleGetter.sol', 'contracts/interfaces/IPriceOracleSentinel.sol', 'contracts/interfaces/IReserveInterestRateStrategy.sol', 'contracts/interfaces/IScaledBalanceToken.sol', 'contracts/interfaces/IStableDebtToken.sol', 'contracts/interfaces/IVariableDebtToken.sol', 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol', 'contracts/protocol/libraries/configuration/UserConfiguration.sol', 'contracts/protocol/libraries/helpers/Errors.sol', 'contracts/protocol/libraries/helpers/Helpers.sol', 'contracts/protocol/libraries/logic/BorrowLogic.sol', 'contracts/protocol/libraries/logic/BridgeLogic.sol', 'contracts/protocol/libraries/logic/EModeLogic.sol', 'contracts/protocol/libraries/logic/FlashLoanLogic.sol', 'contracts/protocol/libraries/logic/GenericLogic.sol', 'contracts/protocol/libraries/logic/IsolationModeLogic.sol', 'contracts/protocol/libraries/logic/LiquidationLogic.sol', 'contracts/protocol/libraries/logic/ReserveLogic.sol', 'contracts/protocol/libraries/logic/SupplyLogic.sol', 'contracts/protocol/libraries/logic/ValidationLogic.sol', 'contracts/protocol/libraries/math/MathUtils.sol', 'contracts/protocol/libraries/math/PercentageMath.sol', 'contracts/protocol/libraries/math/WadRayMath.sol', 'contracts/protocol/libraries/types/DataTypes.sol', 'contracts/protocol/pool/Pool.sol', 'contracts/protocol/pool/PoolStorage.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/BorrowLogic.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/Certora/harness/PoolHarness.sol', 'contracts/dependencies/openzeppelin/contracts/Address.sol', 'contracts/dependencies/openzeppelin/contracts/IERC20.sol', 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', 'contracts/flashloan/interfaces/IFlashLoanReceiver.sol', 'contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol', 'contracts/interfaces/IACLManager.sol', 'contracts/interfaces/IAToken.sol', 'contracts/interfaces/IAaveIncentivesController.sol', 'contracts/interfaces/IERC20WithPermit.sol', 'contracts/interfaces/IInitializableAToken.sol', 'contracts/interfaces/IInitializableDebtToken.sol', 'contracts/interfaces/IPool.sol', 'contracts/interfaces/IPoolAddressesProvider.sol', 'contracts/interfaces/IPriceOracleGetter.sol', 'contracts/interfaces/IPriceOracleSentinel.sol', 'contracts/interfaces/IReserveInterestRateStrategy.sol', 'contracts/interfaces/IScaledBalanceToken.sol', 'contracts/interfaces/IStableDebtToken.sol', 'contracts/interfaces/IVariableDebtToken.sol', 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol', 'contracts/protocol/libraries/configuration/UserConfiguration.sol', 'contracts/protocol/libraries/helpers/Errors.sol', 'contracts/protocol/libraries/helpers/Helpers.sol', 'contracts/protocol/libraries/logic/BorrowLogic.sol', 'contracts/protocol/libraries/logic/BridgeLogic.sol', 'contracts/protocol/libraries/logic/EModeLogic.sol', 'contracts/protocol/libraries/logic/FlashLoanLogic.sol', 'contracts/protocol/libraries/logic/GenericLogic.sol', 'contracts/protocol/libraries/logic/IsolationModeLogic.sol', 'contracts/protocol/libraries/logic/LiquidationLogic.sol', 'contracts/protocol/libraries/logic/ReserveLogic.sol', 'contracts/protocol/libraries/logic/SupplyLogic.sol', 'contracts/protocol/libraries/logic/ValidationLogic.sol', 'contracts/protocol/libraries/math/MathUtils.sol', 'contracts/protocol/libraries/math/PercentageMath.sol', 'contracts/protocol/libraries/math/WadRayMath.sol', 'contracts/protocol/libraries/types/DataTypes.sol', 'contracts/protocol/pool/Pool.sol', 'contracts/protocol/pool/PoolStorage.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/pool/PoolStorage.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/Certora/harness/PoolHarness.sol', 'contracts/dependencies/openzeppelin/contracts/Address.sol', 'contracts/dependencies/openzeppelin/contracts/IERC20.sol', 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', 'contracts/flashloan/interfaces/IFlashLoanReceiver.sol', 'contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol', 'contracts/interfaces/IACLManager.sol', 'contracts/interfaces/IAToken.sol', 'contracts/interfaces/IAaveIncentivesController.sol', 'contracts/interfaces/IERC20WithPermit.sol', 'contracts/interfaces/IInitializableAToken.sol', 'contracts/interfaces/IInitializableDebtToken.sol', 'contracts/interfaces/IPool.sol', 'contracts/interfaces/IPoolAddressesProvider.sol', 'contracts/interfaces/IPriceOracleGetter.sol', 'contracts/interfaces/IPriceOracleSentinel.sol', 'contracts/interfaces/IReserveInterestRateStrategy.sol', 'contracts/interfaces/IScaledBalanceToken.sol', 'contracts/interfaces/IStableDebtToken.sol', 'contracts/interfaces/IVariableDebtToken.sol', 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol', 'contracts/protocol/libraries/configuration/UserConfiguration.sol', 'contracts/protocol/libraries/helpers/Errors.sol', 'contracts/protocol/libraries/helpers/Helpers.sol', 'contracts/protocol/libraries/logic/BorrowLogic.sol', 'contracts/protocol/libraries/logic/BridgeLogic.sol', 'contracts/protocol/libraries/logic/EModeLogic.sol', 'contracts/protocol/libraries/logic/FlashLoanLogic.sol', 'contracts/protocol/libraries/logic/GenericLogic.sol', 'contracts/protocol/libraries/logic/IsolationModeLogic.sol', 'contracts/protocol/libraries/logic/LiquidationLogic.sol', 'contracts/protocol/libraries/logic/ReserveLogic.sol', 'contracts/protocol/libraries/logic/SupplyLogic.sol', 'contracts/protocol/libraries/logic/ValidationLogic.sol', 'contracts/protocol/libraries/math/MathUtils.sol', 'contracts/protocol/libraries/math/PercentageMath.sol', 'contracts/protocol/libraries/math/WadRayMath.sol', 'contracts/protocol/libraries/types/DataTypes.sol', 'contracts/protocol/pool/Pool.sol', 'contracts/protocol/pool/PoolStorage.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/pool/Pool.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/Certora/harness/PoolHarness.sol', 'contracts/dependencies/openzeppelin/contracts/Address.sol', 'contracts/dependencies/openzeppelin/contracts/IERC20.sol', 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', 'contracts/flashloan/interfaces/IFlashLoanReceiver.sol', 'contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol', 'contracts/interfaces/IACLManager.sol', 'contracts/interfaces/IAToken.sol', 'contracts/interfaces/IAaveIncentivesController.sol', 'contracts/interfaces/IERC20WithPermit.sol', 'contracts/interfaces/IInitializableAToken.sol', 'contracts/interfaces/IInitializableDebtToken.sol', 'contracts/interfaces/IPool.sol', 'contracts/interfaces/IPoolAddressesProvider.sol', 'contracts/interfaces/IPriceOracleGetter.sol', 'contracts/interfaces/IPriceOracleSentinel.sol', 'contracts/interfaces/IReserveInterestRateStrategy.sol', 'contracts/interfaces/IScaledBalanceToken.sol', 'contracts/interfaces/IStableDebtToken.sol', 'contracts/interfaces/IVariableDebtToken.sol', 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol', 'contracts/protocol/libraries/configuration/UserConfiguration.sol', 'contracts/protocol/libraries/helpers/Errors.sol', 'contracts/protocol/libraries/helpers/Helpers.sol', 'contracts/protocol/libraries/logic/BorrowLogic.sol', 'contracts/protocol/libraries/logic/BridgeLogic.sol', 'contracts/protocol/libraries/logic/EModeLogic.sol', 'contracts/protocol/libraries/logic/FlashLoanLogic.sol', 'contracts/protocol/libraries/logic/GenericLogic.sol', 'contracts/protocol/libraries/logic/IsolationModeLogic.sol', 'contracts/protocol/libraries/logic/LiquidationLogic.sol', 'contracts/protocol/libraries/logic/ReserveLogic.sol', 'contracts/protocol/libraries/logic/SupplyLogic.sol', 'contracts/protocol/libraries/logic/ValidationLogic.sol', 'contracts/protocol/libraries/math/MathUtils.sol', 'contracts/protocol/libraries/math/PercentageMath.sol', 'contracts/protocol/libraries/math/WadRayMath.sol', 'contracts/protocol/libraries/types/DataTypes.sol', 'contracts/protocol/pool/Pool.sol', 'contracts/protocol/pool/PoolStorage.sol'])
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IACLManager.sol to worklist
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IERC20WithPermit.sol to worklist
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IERC20WithPermit.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/Certora/harness/PoolHarness.sol', 'contracts/dependencies/openzeppelin/contracts/Address.sol', 'contracts/dependencies/openzeppelin/contracts/IERC20.sol', 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', 'contracts/flashloan/interfaces/IFlashLoanReceiver.sol', 'contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol', 'contracts/interfaces/IACLManager.sol', 'contracts/interfaces/IAToken.sol', 'contracts/interfaces/IAaveIncentivesController.sol', 'contracts/interfaces/IERC20WithPermit.sol', 'contracts/interfaces/IInitializableAToken.sol', 'contracts/interfaces/IInitializableDebtToken.sol', 'contracts/interfaces/IPool.sol', 'contracts/interfaces/IPoolAddressesProvider.sol', 'contracts/interfaces/IPriceOracleGetter.sol', 'contracts/interfaces/IPriceOracleSentinel.sol', 'contracts/interfaces/IReserveInterestRateStrategy.sol', 'contracts/interfaces/IScaledBalanceToken.sol', 'contracts/interfaces/IStableDebtToken.sol', 'contracts/interfaces/IVariableDebtToken.sol', 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol', 'contracts/protocol/libraries/configuration/UserConfiguration.sol', 'contracts/protocol/libraries/helpers/Errors.sol', 'contracts/protocol/libraries/helpers/Helpers.sol', 'contracts/protocol/libraries/logic/BorrowLogic.sol', 'contracts/protocol/libraries/logic/BridgeLogic.sol', 'contracts/protocol/libraries/logic/EModeLogic.sol', 'contracts/protocol/libraries/logic/FlashLoanLogic.sol', 'contracts/protocol/libraries/logic/GenericLogic.sol', 'contracts/protocol/libraries/logic/IsolationModeLogic.sol', 'contracts/protocol/libraries/logic/LiquidationLogic.sol', 'contracts/protocol/libraries/logic/ReserveLogic.sol', 'contracts/protocol/libraries/logic/SupplyLogic.sol', 'contracts/protocol/libraries/logic/ValidationLogic.sol', 'contracts/protocol/libraries/math/MathUtils.sol', 'contracts/protocol/libraries/math/PercentageMath.sol', 'contracts/protocol/libraries/math/WadRayMath.sol', 'contracts/protocol/libraries/types/DataTypes.sol', 'contracts/protocol/pool/Pool.sol', 'contracts/protocol/pool/PoolStorage.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IACLManager.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/Certora/harness/PoolHarness.sol', 'contracts/dependencies/openzeppelin/contracts/Address.sol', 'contracts/dependencies/openzeppelin/contracts/IERC20.sol', 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', 'contracts/flashloan/interfaces/IFlashLoanReceiver.sol', 'contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol', 'contracts/interfaces/IACLManager.sol', 'contracts/interfaces/IAToken.sol', 'contracts/interfaces/IAaveIncentivesController.sol', 'contracts/interfaces/IERC20WithPermit.sol', 'contracts/interfaces/IInitializableAToken.sol', 'contracts/interfaces/IInitializableDebtToken.sol', 'contracts/interfaces/IPool.sol', 'contracts/interfaces/IPoolAddressesProvider.sol', 'contracts/interfaces/IPriceOracleGetter.sol', 'contracts/interfaces/IPriceOracleSentinel.sol', 'contracts/interfaces/IReserveInterestRateStrategy.sol', 'contracts/interfaces/IScaledBalanceToken.sol', 'contracts/interfaces/IStableDebtToken.sol', 'contracts/interfaces/IVariableDebtToken.sol', 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol', 'contracts/protocol/libraries/configuration/UserConfiguration.sol', 'contracts/protocol/libraries/helpers/Errors.sol', 'contracts/protocol/libraries/helpers/Helpers.sol', 'contracts/protocol/libraries/logic/BorrowLogic.sol', 'contracts/protocol/libraries/logic/BridgeLogic.sol', 'contracts/protocol/libraries/logic/EModeLogic.sol', 'contracts/protocol/libraries/logic/FlashLoanLogic.sol', 'contracts/protocol/libraries/logic/GenericLogic.sol', 'contracts/protocol/libraries/logic/IsolationModeLogic.sol', 'contracts/protocol/libraries/logic/LiquidationLogic.sol', 'contracts/protocol/libraries/logic/ReserveLogic.sol', 'contracts/protocol/libraries/logic/SupplyLogic.sol', 'contracts/protocol/libraries/logic/ValidationLogic.sol', 'contracts/protocol/libraries/math/MathUtils.sol', 'contracts/protocol/libraries/math/PercentageMath.sol', 'contracts/protocol/libraries/math/WadRayMath.sol', 'contracts/protocol/libraries/types/DataTypes.sol', 'contracts/protocol/pool/Pool.sol', 'contracts/protocol/pool/PoolStorage.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/Certora/harness/PoolHarness.sol', 'contracts/dependencies/openzeppelin/contracts/Address.sol', 'contracts/dependencies/openzeppelin/contracts/IERC20.sol', 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', 'contracts/flashloan/interfaces/IFlashLoanReceiver.sol', 'contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol', 'contracts/interfaces/IACLManager.sol', 'contracts/interfaces/IAToken.sol', 'contracts/interfaces/IAaveIncentivesController.sol', 'contracts/interfaces/IERC20WithPermit.sol', 'contracts/interfaces/IInitializableAToken.sol', 'contracts/interfaces/IInitializableDebtToken.sol', 'contracts/interfaces/IPool.sol', 'contracts/interfaces/IPoolAddressesProvider.sol', 'contracts/interfaces/IPriceOracleGetter.sol', 'contracts/interfaces/IPriceOracleSentinel.sol', 'contracts/interfaces/IReserveInterestRateStrategy.sol', 'contracts/interfaces/IScaledBalanceToken.sol', 'contracts/interfaces/IStableDebtToken.sol', 'contracts/interfaces/IVariableDebtToken.sol', 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol', 'contracts/protocol/libraries/configuration/UserConfiguration.sol', 'contracts/protocol/libraries/helpers/Errors.sol', 'contracts/protocol/libraries/helpers/Helpers.sol', 'contracts/protocol/libraries/logic/BorrowLogic.sol', 'contracts/protocol/libraries/logic/BridgeLogic.sol', 'contracts/protocol/libraries/logic/EModeLogic.sol', 'contracts/protocol/libraries/logic/FlashLoanLogic.sol', 'contracts/protocol/libraries/logic/GenericLogic.sol', 'contracts/protocol/libraries/logic/IsolationModeLogic.sol', 'contracts/protocol/libraries/logic/LiquidationLogic.sol', 'contracts/protocol/libraries/logic/ReserveLogic.sol', 'contracts/protocol/libraries/logic/SupplyLogic.sol', 'contracts/protocol/libraries/logic/ValidationLogic.sol', 'contracts/protocol/libraries/math/MathUtils.sol', 'contracts/protocol/libraries/math/PercentageMath.sol', 'contracts/protocol/libraries/math/WadRayMath.sol', 'contracts/protocol/libraries/types/DataTypes.sol', 'contracts/protocol/pool/Pool.sol', 'contracts/protocol/pool/PoolStorage.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPool.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/Certora/harness/PoolHarness.sol', 'contracts/dependencies/openzeppelin/contracts/Address.sol', 'contracts/dependencies/openzeppelin/contracts/IERC20.sol', 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', 'contracts/flashloan/interfaces/IFlashLoanReceiver.sol', 'contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol', 'contracts/interfaces/IACLManager.sol', 'contracts/interfaces/IAToken.sol', 'contracts/interfaces/IAaveIncentivesController.sol', 'contracts/interfaces/IERC20WithPermit.sol', 'contracts/interfaces/IInitializableAToken.sol', 'contracts/interfaces/IInitializableDebtToken.sol', 'contracts/interfaces/IPool.sol', 'contracts/interfaces/IPoolAddressesProvider.sol', 'contracts/interfaces/IPriceOracleGetter.sol', 'contracts/interfaces/IPriceOracleSentinel.sol', 'contracts/interfaces/IReserveInterestRateStrategy.sol', 'contracts/interfaces/IScaledBalanceToken.sol', 'contracts/interfaces/IStableDebtToken.sol', 'contracts/interfaces/IVariableDebtToken.sol', 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol', 'contracts/protocol/libraries/configuration/UserConfiguration.sol', 'contracts/protocol/libraries/helpers/Errors.sol', 'contracts/protocol/libraries/helpers/Helpers.sol', 'contracts/protocol/libraries/logic/BorrowLogic.sol', 'contracts/protocol/libraries/logic/BridgeLogic.sol', 'contracts/protocol/libraries/logic/EModeLogic.sol', 'contracts/protocol/libraries/logic/FlashLoanLogic.sol', 'contracts/protocol/libraries/logic/GenericLogic.sol', 'contracts/protocol/libraries/logic/IsolationModeLogic.sol', 'contracts/protocol/libraries/logic/LiquidationLogic.sol', 'contracts/protocol/libraries/logic/ReserveLogic.sol', 'contracts/protocol/libraries/logic/SupplyLogic.sol', 'contracts/protocol/libraries/logic/ValidationLogic.sol', 'contracts/protocol/libraries/math/MathUtils.sol', 'contracts/protocol/libraries/math/PercentageMath.sol', 'contracts/protocol/libraries/math/WadRayMath.sol', 'contracts/protocol/libraries/types/DataTypes.sol', 'contracts/protocol/pool/Pool.sol', 'contracts/protocol/pool/PoolStorage.sol'])
Contracts in PoolHarness.sol_0 (file .certora_internal/24_02_02_08_49_36_072/.certora_sources/Certora/harness/PoolHarness.sol): ['PoolHarness']
Contracts with their chosen addresses: [(274184521717934524641157099916833587239, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/Certora/harness/PoolHarness.sol:PoolHarness'), (274184521717934524641157099916833587240, 'contracts/dependencies/openzeppelin/contracts/Address.sol:Address'), (274184521717934524641157099916833587241, 'contracts/dependencies/openzeppelin/contracts/IERC20.sol:IERC20'), (274184521717934524641157099916833587242, 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol:SafeERC20'), (274184521717934524641157099916833587243, 'contracts/flashloan/interfaces/IFlashLoanReceiver.sol:IFlashLoanReceiver'), (274184521717934524641157099916833587244, 'contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol:IFlashLoanSimpleReceiver'), (274184521717934524641157099916833587245, 'contracts/interfaces/IACLManager.sol:IACLManager'), (274184521717934524641157099916833587246, 'contracts/interfaces/IAToken.sol:IAToken'), (274184521717934524641157099916833587247, 'contracts/interfaces/IERC20WithPermit.sol:IERC20WithPermit'), (274184521717934524641157099916833587248, 'contracts/interfaces/IInitializableAToken.sol:IInitializableAToken'), (274184521717934524641157099916833587249, 'contracts/interfaces/IInitializableDebtToken.sol:IInitializableDebtToken'), (274184521717934524641157099916833587250, 'contracts/interfaces/IPool.sol:IPool'), (274184521717934524641157099916833587251, 'contracts/interfaces/IPoolAddressesProvider.sol:IPoolAddressesProvider'), (274184521717934524641157099916833587252, 'contracts/interfaces/IPriceOracleGetter.sol:IPriceOracleGetter'), (274184521717934524641157099916833587253, 'contracts/interfaces/IPriceOracleSentinel.sol:IPriceOracleSentinel'), (274184521717934524641157099916833587254, 'contracts/interfaces/IReserveInterestRateStrategy.sol:IReserveInterestRateStrategy'), (274184521717934524641157099916833587255, 'contracts/interfaces/IScaledBalanceToken.sol:IScaledBalanceToken'), (274184521717934524641157099916833587256, 'contracts/interfaces/IStableDebtToken.sol:IStableDebtToken'), (274184521717934524641157099916833587257, 'contracts/interfaces/IVariableDebtToken.sol:IVariableDebtToken'), (274184521717934524641157099916833587258, 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol:VersionedInitializable'), (274184521717934524641157099916833587259, 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol:ReserveConfiguration'), (274184521717934524641157099916833587260, 'contracts/protocol/libraries/configuration/UserConfiguration.sol:UserConfiguration'), (274184521717934524641157099916833587261, 'contracts/protocol/libraries/helpers/Helpers.sol:Helpers'), (274184521717934524641157099916833587262, 'contracts/protocol/libraries/logic/BorrowLogic.sol:BorrowLogic'), (274184521717934524641157099916833587263, 'contracts/protocol/libraries/logic/BridgeLogic.sol:BridgeLogic'), (274184521717934524641157099916833587264, 'contracts/protocol/libraries/logic/EModeLogic.sol:EModeLogic'), (274184521717934524641157099916833587265, 'contracts/protocol/libraries/logic/FlashLoanLogic.sol:FlashLoanLogic'), (274184521717934524641157099916833587266, 'contracts/protocol/libraries/logic/GenericLogic.sol:GenericLogic'), (274184521717934524641157099916833587267, 'contracts/protocol/libraries/logic/IsolationModeLogic.sol:IsolationModeLogic'), (274184521717934524641157099916833587268, 'contracts/protocol/libraries/logic/LiquidationLogic.sol:LiquidationLogic'), (274184521717934524641157099916833587269, 'contracts/protocol/libraries/logic/ReserveLogic.sol:ReserveLogic'), (274184521717934524641157099916833587270, 'contracts/protocol/libraries/logic/SupplyLogic.sol:SupplyLogic'), (274184521717934524641157099916833587271, 'contracts/protocol/libraries/logic/ValidationLogic.sol:ValidationLogic'), (274184521717934524641157099916833587272, 'contracts/protocol/libraries/math/MathUtils.sol:MathUtils'), (274184521717934524641157099916833587273, 'contracts/protocol/libraries/math/PercentageMath.sol:PercentageMath'), (274184521717934524641157099916833587274, 'contracts/protocol/libraries/math/WadRayMath.sol:WadRayMath'), (274184521717934524641157099916833587275, 'contracts/protocol/libraries/types/DataTypes.sol:DataTypes'), (274184521717934524641157099916833587276, 'contracts/protocol/pool/Pool.sol:Pool'), (274184521717934524641157099916833587277, 'contracts/protocol/pool/PoolStorage.sol:PoolStorage')]
Working on contract PoolHarness
Replacements= {5950: {'length': 20, 'address': '00000000ce4604a000000000000000000000003e'}, 9387: {'length': 20, 'address': '00000000ce4604a000000000000000000000003e'}, 10206: {'length': 20, 'address': '00000000ce4604a000000000000000000000003e'}, 13384: {'length': 20, 'address': '00000000ce4604a000000000000000000000003e'}, 13559: {'length': 20, 'address': '00000000ce4604a000000000000000000000003e'}, 17169: {'length': 20, 'address': '00000000ce4604a000000000000000000000003e'}, 8357: {'length': 20, 'address': '00000000ce4604a000000000000000000000003f'}, 15899: {'length': 20, 'address': '00000000ce4604a000000000000000000000003f'}, 3787: {'length': 20, 'address': '00000000ce4604a0000000000000000000000040'}, 5673: {'length': 20, 'address': '00000000ce4604a0000000000000000000000041'}, 11957: {'length': 20, 'address': '00000000ce4604a0000000000000000000000041'}, 2147: {'length': 20, 'address': '00000000ce4604a0000000000000000000000044'}, 2951: {'length': 20, 'address': '00000000ce4604a0000000000000000000000046'}, 6299: {'length': 20, 'address': '00000000ce4604a0000000000000000000000046'}, 6721: {'length': 20, 'address': '00000000ce4604a0000000000000000000000046'}, 7796: {'length': 20, 'address': '00000000ce4604a0000000000000000000000046'}, 15291: {'length': 20, 'address': '00000000ce4604a0000000000000000000000046'}, 16610: {'length': 20, 'address': '00000000ce4604a0000000000000000000000046'}}
replacing in 34338 of len 40 with 00000000ce4604a000000000000000000000003e
replacing in 33220 of len 40 with 00000000ce4604a0000000000000000000000046
replacing in 31798 of len 40 with 00000000ce4604a000000000000000000000003f
replacing in 30582 of len 40 with 00000000ce4604a0000000000000000000000046
replacing in 27118 of len 40 with 00000000ce4604a000000000000000000000003e
replacing in 26768 of len 40 with 00000000ce4604a000000000000000000000003e
replacing in 23914 of len 40 with 00000000ce4604a0000000000000000000000041
replacing in 20412 of len 40 with 00000000ce4604a000000000000000000000003e
replacing in 18774 of len 40 with 00000000ce4604a000000000000000000000003e
replacing in 16714 of len 40 with 00000000ce4604a000000000000000000000003f
replacing in 15592 of len 40 with 00000000ce4604a0000000000000000000000046
replacing in 13442 of len 40 with 00000000ce4604a0000000000000000000000046
replacing in 12598 of len 40 with 00000000ce4604a0000000000000000000000046
replacing in 11900 of len 40 with 00000000ce4604a000000000000000000000003e
replacing in 11346 of len 40 with 00000000ce4604a0000000000000000000000041
replacing in 7574 of len 40 with 00000000ce4604a0000000000000000000000040
replacing in 5902 of len 40 with 00000000ce4604a0000000000000000000000046
replacing in 4294 of len 40 with 00000000ce4604a0000000000000000000000044
Working on contract PoolHarness
Replacements= {6372: {'length': 20, 'address': '00000000ce4604a000000000000000000000003e'}, 9809: {'length': 20, 'address': '00000000ce4604a000000000000000000000003e'}, 10628: {'length': 20, 'address': '00000000ce4604a000000000000000000000003e'}, 13806: {'length': 20, 'address': '00000000ce4604a000000000000000000000003e'}, 13981: {'length': 20, 'address': '00000000ce4604a000000000000000000000003e'}, 17591: {'length': 20, 'address': '00000000ce4604a000000000000000000000003e'}, 8779: {'length': 20, 'address': '00000000ce4604a000000000000000000000003f'}, 16321: {'length': 20, 'address': '00000000ce4604a000000000000000000000003f'}, 4209: {'length': 20, 'address': '00000000ce4604a0000000000000000000000040'}, 6095: {'length': 20, 'address': '00000000ce4604a0000000000000000000000041'}, 12379: {'length': 20, 'address': '00000000ce4604a0000000000000000000000041'}, 2569: {'length': 20, 'address': '00000000ce4604a0000000000000000000000044'}, 3373: {'length': 20, 'address': '00000000ce4604a0000000000000000000000046'}, 6721: {'length': 20, 'address': '00000000ce4604a0000000000000000000000046'}, 7143: {'length': 20, 'address': '00000000ce4604a0000000000000000000000046'}, 8218: {'length': 20, 'address': '00000000ce4604a0000000000000000000000046'}, 15713: {'length': 20, 'address': '00000000ce4604a0000000000000000000000046'}, 17032: {'length': 20, 'address': '00000000ce4604a0000000000000000000000046'}}
replacing in 35182 of len 40 with 00000000ce4604a000000000000000000000003e
replacing in 34064 of len 40 with 00000000ce4604a0000000000000000000000046
replacing in 32642 of len 40 with 00000000ce4604a000000000000000000000003f
replacing in 31426 of len 40 with 00000000ce4604a0000000000000000000000046
replacing in 27962 of len 40 with 00000000ce4604a000000000000000000000003e
replacing in 27612 of len 40 with 00000000ce4604a000000000000000000000003e
replacing in 24758 of len 40 with 00000000ce4604a0000000000000000000000041
replacing in 21256 of len 40 with 00000000ce4604a000000000000000000000003e
replacing in 19618 of len 40 with 00000000ce4604a000000000000000000000003e
replacing in 17558 of len 40 with 00000000ce4604a000000000000000000000003f
replacing in 16436 of len 40 with 00000000ce4604a0000000000000000000000046
replacing in 14286 of len 40 with 00000000ce4604a0000000000000000000000046
replacing in 13442 of len 40 with 00000000ce4604a0000000000000000000000046
replacing in 12744 of len 40 with 00000000ce4604a000000000000000000000003e
replacing in 12190 of len 40 with 00000000ce4604a0000000000000000000000041
replacing in 8418 of len 40 with 00000000ce4604a0000000000000000000000040
replacing in 6746 of len 40 with 00000000ce4604a0000000000000000000000046
replacing in 5138 of len 40 with 00000000ce4604a0000000000000000000000044
Working on contract Address
Working on contract Address
Working on contract IERC20
Working on contract IERC20
Working on contract SafeERC20
Working on contract SafeERC20
Working on contract IFlashLoanReceiver
Working on contract IFlashLoanReceiver
Working on contract IFlashLoanSimpleReceiver
Working on contract IFlashLoanSimpleReceiver
Working on contract IACLManager
Working on contract IACLManager
Working on contract IAToken
Working on contract IAToken
Working on contract IERC20WithPermit
Working on contract IERC20WithPermit
Working on contract IInitializableAToken
Working on contract IInitializableAToken
Working on contract IInitializableDebtToken
Working on contract IInitializableDebtToken
Working on contract IPool
Working on contract IPool
Working on contract IPoolAddressesProvider
Working on contract IPoolAddressesProvider
Working on contract IPriceOracleGetter
Working on contract IPriceOracleGetter
Working on contract IPriceOracleSentinel
Working on contract IPriceOracleSentinel
Working on contract IReserveInterestRateStrategy
Working on contract IReserveInterestRateStrategy
Working on contract IScaledBalanceToken
Working on contract IScaledBalanceToken
Working on contract IStableDebtToken
Working on contract IStableDebtToken
Working on contract IVariableDebtToken
Working on contract IVariableDebtToken
Working on contract VersionedInitializable
Working on contract VersionedInitializable
Working on contract ReserveConfiguration
Working on contract ReserveConfiguration
Working on contract UserConfiguration
Working on contract UserConfiguration
Working on contract Helpers
Working on contract Helpers
Working on contract BorrowLogic
Working on contract BorrowLogic
Working on contract BridgeLogic
Working on contract BridgeLogic
Working on contract EModeLogic
Working on contract EModeLogic
Working on contract FlashLoanLogic
Replacements= {2672: {'length': 20, 'address': '00000000ce4604a000000000000000000000003e'}}
replacing in 5344 of len 40 with 00000000ce4604a000000000000000000000003e
Working on contract FlashLoanLogic
Replacements= {2755: {'length': 20, 'address': '00000000ce4604a000000000000000000000003e'}}
replacing in 5510 of len 40 with 00000000ce4604a000000000000000000000003e
Working on contract GenericLogic
Working on contract GenericLogic
Working on contract IsolationModeLogic
Working on contract IsolationModeLogic
Working on contract LiquidationLogic
Working on contract LiquidationLogic
Working on contract ReserveLogic
Working on contract ReserveLogic
Working on contract SupplyLogic
Working on contract SupplyLogic
Working on contract ValidationLogic
Working on contract ValidationLogic
Working on contract MathUtils
Working on contract MathUtils
Working on contract PercentageMath
Working on contract PercentageMath
Working on contract WadRayMath
Working on contract WadRayMath
Working on contract DataTypes
Working on contract DataTypes
Working on contract Pool
Replacements= {5891: {'length': 20, 'address': '00000000ce4604a000000000000000000000003e'}, 9328: {'length': 20, 'address': '00000000ce4604a000000000000000000000003e'}, 10147: {'length': 20, 'address': '00000000ce4604a000000000000000000000003e'}, 13325: {'length': 20, 'address': '00000000ce4604a000000000000000000000003e'}, 13500: {'length': 20, 'address': '00000000ce4604a000000000000000000000003e'}, 16731: {'length': 20, 'address': '00000000ce4604a000000000000000000000003e'}, 8298: {'length': 20, 'address': '00000000ce4604a000000000000000000000003f'}, 15840: {'length': 20, 'address': '00000000ce4604a000000000000000000000003f'}, 3728: {'length': 20, 'address': '00000000ce4604a0000000000000000000000040'}, 5614: {'length': 20, 'address': '00000000ce4604a0000000000000000000000041'}, 11898: {'length': 20, 'address': '00000000ce4604a0000000000000000000000041'}, 2088: {'length': 20, 'address': '00000000ce4604a0000000000000000000000044'}, 2892: {'length': 20, 'address': '00000000ce4604a0000000000000000000000046'}, 6240: {'length': 20, 'address': '00000000ce4604a0000000000000000000000046'}, 6662: {'length': 20, 'address': '00000000ce4604a0000000000000000000000046'}, 7737: {'length': 20, 'address': '00000000ce4604a0000000000000000000000046'}, 15232: {'length': 20, 'address': '00000000ce4604a0000000000000000000000046'}, 16172: {'length': 20, 'address': '00000000ce4604a0000000000000000000000046'}}
replacing in 33462 of len 40 with 00000000ce4604a000000000000000000000003e
replacing in 32344 of len 40 with 00000000ce4604a0000000000000000000000046
replacing in 31680 of len 40 with 00000000ce4604a000000000000000000000003f
replacing in 30464 of len 40 with 00000000ce4604a0000000000000000000000046
replacing in 27000 of len 40 with 00000000ce4604a000000000000000000000003e
replacing in 26650 of len 40 with 00000000ce4604a000000000000000000000003e
replacing in 23796 of len 40 with 00000000ce4604a0000000000000000000000041
replacing in 20294 of len 40 with 00000000ce4604a000000000000000000000003e
replacing in 18656 of len 40 with 00000000ce4604a000000000000000000000003e
replacing in 16596 of len 40 with 00000000ce4604a000000000000000000000003f
replacing in 15474 of len 40 with 00000000ce4604a0000000000000000000000046
replacing in 13324 of len 40 with 00000000ce4604a0000000000000000000000046
replacing in 12480 of len 40 with 00000000ce4604a0000000000000000000000046
replacing in 11782 of len 40 with 00000000ce4604a000000000000000000000003e
replacing in 11228 of len 40 with 00000000ce4604a0000000000000000000000041
replacing in 7456 of len 40 with 00000000ce4604a0000000000000000000000040
replacing in 5784 of len 40 with 00000000ce4604a0000000000000000000000046
replacing in 4176 of len 40 with 00000000ce4604a0000000000000000000000044
Working on contract Pool
Replacements= {6311: {'length': 20, 'address': '00000000ce4604a000000000000000000000003e'}, 9748: {'length': 20, 'address': '00000000ce4604a000000000000000000000003e'}, 10567: {'length': 20, 'address': '00000000ce4604a000000000000000000000003e'}, 13745: {'length': 20, 'address': '00000000ce4604a000000000000000000000003e'}, 13920: {'length': 20, 'address': '00000000ce4604a000000000000000000000003e'}, 17151: {'length': 20, 'address': '00000000ce4604a000000000000000000000003e'}, 8718: {'length': 20, 'address': '00000000ce4604a000000000000000000000003f'}, 16260: {'length': 20, 'address': '00000000ce4604a000000000000000000000003f'}, 4148: {'length': 20, 'address': '00000000ce4604a0000000000000000000000040'}, 6034: {'length': 20, 'address': '00000000ce4604a0000000000000000000000041'}, 12318: {'length': 20, 'address': '00000000ce4604a0000000000000000000000041'}, 2508: {'length': 20, 'address': '00000000ce4604a0000000000000000000000044'}, 3312: {'length': 20, 'address': '00000000ce4604a0000000000000000000000046'}, 6660: {'length': 20, 'address': '00000000ce4604a0000000000000000000000046'}, 7082: {'length': 20, 'address': '00000000ce4604a0000000000000000000000046'}, 8157: {'length': 20, 'address': '00000000ce4604a0000000000000000000000046'}, 15652: {'length': 20, 'address': '00000000ce4604a0000000000000000000000046'}, 16592: {'length': 20, 'address': '00000000ce4604a0000000000000000000000046'}}
replacing in 34302 of len 40 with 00000000ce4604a000000000000000000000003e
replacing in 33184 of len 40 with 00000000ce4604a0000000000000000000000046
replacing in 32520 of len 40 with 00000000ce4604a000000000000000000000003f
replacing in 31304 of len 40 with 00000000ce4604a0000000000000000000000046
replacing in 27840 of len 40 with 00000000ce4604a000000000000000000000003e
replacing in 27490 of len 40 with 00000000ce4604a000000000000000000000003e
replacing in 24636 of len 40 with 00000000ce4604a0000000000000000000000041
replacing in 21134 of len 40 with 00000000ce4604a000000000000000000000003e
replacing in 19496 of len 40 with 00000000ce4604a000000000000000000000003e
replacing in 17436 of len 40 with 00000000ce4604a000000000000000000000003f
replacing in 16314 of len 40 with 00000000ce4604a0000000000000000000000046
replacing in 14164 of len 40 with 00000000ce4604a0000000000000000000000046
replacing in 13320 of len 40 with 00000000ce4604a0000000000000000000000046
replacing in 12622 of len 40 with 00000000ce4604a000000000000000000000003e
replacing in 12068 of len 40 with 00000000ce4604a0000000000000000000000041
replacing in 8296 of len 40 with 00000000ce4604a0000000000000000000000040
replacing in 6624 of len 40 with 00000000ce4604a0000000000000000000000046
replacing in 5016 of len 40 with 00000000ce4604a0000000000000000000000044
Working on contract PoolStorage
Working on contract PoolStorage
For contracts of primary PoolHarness
finding primary contract address of /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/Certora/harness/PoolHarness.sol:PoolHarness in [(274184521717934524641157099916833587239, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/Certora/harness/PoolHarness.sol:PoolHarness'), (274184521717934524641157099916833587240, 'contracts/dependencies/openzeppelin/contracts/Address.sol:Address'), (274184521717934524641157099916833587241, 'contracts/dependencies/openzeppelin/contracts/IERC20.sol:IERC20'), (274184521717934524641157099916833587242, 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol:SafeERC20'), (274184521717934524641157099916833587243, 'contracts/flashloan/interfaces/IFlashLoanReceiver.sol:IFlashLoanReceiver'), (274184521717934524641157099916833587244, 'contracts/flashloan/interfaces/IFlashLoanSimpleReceiver.sol:IFlashLoanSimpleReceiver'), (274184521717934524641157099916833587245, 'contracts/interfaces/IACLManager.sol:IACLManager'), (274184521717934524641157099916833587246, 'contracts/interfaces/IAToken.sol:IAToken'), (274184521717934524641157099916833587247, 'contracts/interfaces/IERC20WithPermit.sol:IERC20WithPermit'), (274184521717934524641157099916833587248, 'contracts/interfaces/IInitializableAToken.sol:IInitializableAToken'), (274184521717934524641157099916833587249, 'contracts/interfaces/IInitializableDebtToken.sol:IInitializableDebtToken'), (274184521717934524641157099916833587250, 'contracts/interfaces/IPool.sol:IPool'), (274184521717934524641157099916833587251, 'contracts/interfaces/IPoolAddressesProvider.sol:IPoolAddressesProvider'), (274184521717934524641157099916833587252, 'contracts/interfaces/IPriceOracleGetter.sol:IPriceOracleGetter'), (274184521717934524641157099916833587253, 'contracts/interfaces/IPriceOracleSentinel.sol:IPriceOracleSentinel'), (274184521717934524641157099916833587254, 'contracts/interfaces/IReserveInterestRateStrategy.sol:IReserveInterestRateStrategy'), (274184521717934524641157099916833587255, 'contracts/interfaces/IScaledBalanceToken.sol:IScaledBalanceToken'), (274184521717934524641157099916833587256, 'contracts/interfaces/IStableDebtToken.sol:IStableDebtToken'), (274184521717934524641157099916833587257, 'contracts/interfaces/IVariableDebtToken.sol:IVariableDebtToken'), (274184521717934524641157099916833587258, 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol:VersionedInitializable'), (274184521717934524641157099916833587259, 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol:ReserveConfiguration'), (274184521717934524641157099916833587260, 'contracts/protocol/libraries/configuration/UserConfiguration.sol:UserConfiguration'), (274184521717934524641157099916833587261, 'contracts/protocol/libraries/helpers/Helpers.sol:Helpers'), (274184521717934524641157099916833587262, 'contracts/protocol/libraries/logic/BorrowLogic.sol:BorrowLogic'), (274184521717934524641157099916833587263, 'contracts/protocol/libraries/logic/BridgeLogic.sol:BridgeLogic'), (274184521717934524641157099916833587264, 'contracts/protocol/libraries/logic/EModeLogic.sol:EModeLogic'), (274184521717934524641157099916833587265, 'contracts/protocol/libraries/logic/FlashLoanLogic.sol:FlashLoanLogic'), (274184521717934524641157099916833587266, 'contracts/protocol/libraries/logic/GenericLogic.sol:GenericLogic'), (274184521717934524641157099916833587267, 'contracts/protocol/libraries/logic/IsolationModeLogic.sol:IsolationModeLogic'), (274184521717934524641157099916833587268, 'contracts/protocol/libraries/logic/LiquidationLogic.sol:LiquidationLogic'), (274184521717934524641157099916833587269, 'contracts/protocol/libraries/logic/ReserveLogic.sol:ReserveLogic'), (274184521717934524641157099916833587270, 'contracts/protocol/libraries/logic/SupplyLogic.sol:SupplyLogic'), (274184521717934524641157099916833587271, 'contracts/protocol/libraries/logic/ValidationLogic.sol:ValidationLogic'), (274184521717934524641157099916833587272, 'contracts/protocol/libraries/math/MathUtils.sol:MathUtils'), (274184521717934524641157099916833587273, 'contracts/protocol/libraries/math/PercentageMath.sol:PercentageMath'), (274184521717934524641157099916833587274, 'contracts/protocol/libraries/math/WadRayMath.sol:WadRayMath'), (274184521717934524641157099916833587275, 'contracts/protocol/libraries/types/DataTypes.sol:DataTypes'), (274184521717934524641157099916833587276, 'contracts/protocol/pool/Pool.sol:Pool'), (274184521717934524641157099916833587277, 'contracts/protocol/pool/PoolStorage.sol:PoolStorage')]
Contracts in SDC PoolHarness.sol_0: ['PoolHarness', 'Address', 'IERC20', 'SafeERC20', 'IFlashLoanReceiver', 'IFlashLoanSimpleReceiver', 'IACLManager', 'IAToken', 'IERC20WithPermit', 'IInitializableAToken', 'IInitializableDebtToken', 'IPool', 'IPoolAddressesProvider', 'IPriceOracleGetter', 'IPriceOracleSentinel', 'IReserveInterestRateStrategy', 'IScaledBalanceToken', 'IStableDebtToken', 'IVariableDebtToken', 'VersionedInitializable', 'ReserveConfiguration', 'UserConfiguration', 'Helpers', 'BorrowLogic', 'BridgeLogic', 'EModeLogic', 'FlashLoanLogic', 'GenericLogic', 'IsolationModeLogic', 'LiquidationLogic', 'ReserveLogic', 'SupplyLogic', 'ValidationLogic', 'MathUtils', 'PercentageMath', 'WadRayMath', 'DataTypes', 'Pool', 'PoolStorage']
Backing up instrumented .certora_sources to .certora_internal/24_02_02_08_49_36_072/.certora_sources/.post_autofinders.0
Rolling back .certora_sources to .certora_internal/24_02_02_08_49_36_072/.certora_sources/.pre_autofinders.0 version
Libraries to add = ['00000000ce4604a000000000000000000000003e', '00000000ce4604a0000000000000000000000046', '00000000ce4604a000000000000000000000003f', '00000000ce4604a0000000000000000000000041', '00000000ce4604a0000000000000000000000040', '00000000ce4604a0000000000000000000000044']
Found library contract {'name': 'BorrowLogic', 'original_file': 'contracts/protocol/libraries/logic/BorrowLogic.sol', 'lang': 'Solidity', 'file': 'Certora/harness/PoolHarness.sol', 'address': '00000000ce4604a000000000000000000000003e', 'methods': [{'name': 'swapBorrowRateMode', 'paramNames': ['reserve', 'userConfig', 'asset', 'rateMode'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'storage'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': 'bda11820', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'external', 'isLibrary': True, 'contractName': 'BorrowLogic'}, {'name': 'executeBorrow', 'paramNames': ['reserves', 'reservesList', 'eModeCategories', 'userConfig', 'params'], 'fullArgs': [{'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'address', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'mappingValueType': {'primitiveName': 'address', 'type': 'Primitive'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint8', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'EModeCategory', 'structMembers': [{'name': 'ltv', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationThreshold', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationBonus', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'priceSource', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'label', 'type': {'type': 'StringType'}}], 'containingContract': 'DataTypes', 'astId': 289, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.EModeCategory'}}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ExecuteBorrowParams', 'structMembers': [{'name': 'asset', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'user', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'onBehalfOf', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'amount', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'interestRateMode', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'referralCode', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'releaseUnderlying', 'type': {'primitiveName': 'bool', 'type': 'Primitive'}}, {'name': 'maxStableRateBorrowSizePercent', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reservesCount', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'oracle', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'userEModeCategory', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'priceOracleSentinel', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 388, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ExecuteBorrowParams'}, 'location': 'memory'}], 'returns': [], 'sighash': '1e6473f9', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'public', 'isLibrary': True, 'contractName': 'BorrowLogic'}, {'name': 'rebalanceStableBorrowRate', 'paramNames': ['reserve', 'asset', 'user'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '61b15d32', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'external', 'isLibrary': True, 'contractName': 'BorrowLogic'}, {'name': 'executeRepay', 'paramNames': ['reserves', 'reservesList', 'reserve', 'userConfig', 'params'], 'fullArgs': [{'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'address', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'mappingValueType': {'primitiveName': 'address', 'type': 'Primitive'}}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ExecuteRepayParams', 'structMembers': [{'name': 'asset', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'amount', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'rateMode', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'onBehalfOf', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'useATokens', 'type': {'primitiveName': 'bool', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 399, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ExecuteRepayParams'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '7aa681a9', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'external', 'isLibrary': True, 'contractName': 'BorrowLogic'}], 'storageLayout': {'storage': [], 'types': None}, 'immutables': [], 'internalFunctions': {'0xf196e50000': {'canonicalId': 'contracts/protocol/pool/Pool.sol|PoolHarness', 'declaringContract': 'PoolHarness', 'method': {'name': 'MAX_NUMBER_RESERVES', 'paramNames': [], 'fullArgs': [], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': 'f8119d51', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'public', 'isLibrary': False, 'contractName': 'PoolHarness'}}, '0xf196e50001': {'canonicalId': 'contracts/protocol/pool/Pool.sol|PoolHarness', 'declaringContract': 'PoolHarness', 'method': {'name': 'BRIDGE_PROTOCOL_FEE', 'paramNames': [], 'fullArgs': [], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '272d9072', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'public', 'isLibrary': False, 'contractName': 'PoolHarness'}}, '0xf196e50002': {'canonicalId': 'contracts/protocol/pool/Pool.sol|PoolHarness', 'declaringContract': 'PoolHarness', 'method': {'name': 'FLASHLOAN_PREMIUM_TOTAL', 'paramNames': [], 'fullArgs': [], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '074b2e43', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'public', 'isLibrary': False, 'contractName': 'PoolHarness'}}, '0xf196e50003': {'canonicalId': 'contracts/protocol/pool/Pool.sol|PoolHarness', 'declaringContract': 'PoolHarness', 'method': {'name': 'FLASHLOAN_PREMIUM_TO_PROTOCOL', 'paramNames': [], 'fullArgs': [], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '6a99c036', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'public', 'isLibrary': False, 'contractName': 'PoolHarness'}}, '0xf196e50004': {'canonicalId': 'contracts/protocol/pool/Pool.sol|PoolHarness', 'declaringContract': 'PoolHarness', 'method': {'name': 'MAX_STABLE_RATE_BORROW_SIZE_PERCENT', 'paramNames': [], 'fullArgs': [], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': 'e82fec2f', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'public', 'isLibrary': False, 'contractName': 'PoolHarness'}}, '0xf196e50005': {'canonicalId': 'contracts/dependencies/openzeppelin/contracts/Address.sol|Address', 'declaringContract': 'Address', 'method': {'name': 'isContract', 'paramNames': ['account'], 'fullArgs': [{'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'Address'}}, '0xf196e50006': {'canonicalId': 'contracts/dependencies/openzeppelin/contracts/Address.sol|Address', 'declaringContract': 'Address', 'method': {'name': 'sendValue', 'paramNames': ['recipient', 'amount'], 'fullArgs': [{'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'Address'}}, '0xf196e50007': {'canonicalId': 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol|SafeERC20', 'declaringContract': 'SafeERC20', 'method': {'name': 'safeTransfer', 'paramNames': ['token', 'to', 'value'], 'fullArgs': [{'typeDesc': {'type': 'Contract', 'contractName': 'IERC20'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'SafeERC20'}}, '0xf196e50008': {'canonicalId': 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol|SafeERC20', 'declaringContract': 'SafeERC20', 'method': {'name': 'safeTransferFrom', 'paramNames': ['token', 'from', 'to', 'value'], 'fullArgs': [{'typeDesc': {'type': 'Contract', 'contractName': 'IERC20'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'SafeERC20'}}, '0xf196e50009': {'canonicalId': 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol|SafeERC20', 'declaringContract': 'SafeERC20', 'method': {'name': 'safeApprove', 'paramNames': ['token', 'spender', 'value'], 'fullArgs': [{'typeDesc': {'type': 'Contract', 'contractName': 'IERC20'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'SafeERC20'}}, '0xf196e5000a': {'canonicalId': 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol|SafeERC20', 'declaringContract': 'SafeERC20', 'method': {'name': 'callOptionalReturn', 'paramNames': ['token', 'data'], 'fullArgs': [{'typeDesc': {'type': 'Contract', 'contractName': 'IERC20'}, 'location': 'stack'}, {'typeDesc': {'type': 'PackedBytes'}, 'location': 'memory'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'private', 'isLibrary': True, 'contractName': 'SafeERC20'}}, '0xf196e5000b': {'canonicalId': 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol|VersionedInitializable', 'declaringContract': 'VersionedInitializable', 'method': {'name': 'isConstructor', 'paramNames': [], 'fullArgs': [], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'private', 'isLibrary': False, 'contractName': 'VersionedInitializable'}}, '0xf196e5000c': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setLtv', 'paramNames': ['self', 'ltv'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5000d': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getLtv', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5000e': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setLiquidationBonus', 'paramNames': ['self', 'bonus'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5000f': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setLiquidationThreshold', 'paramNames': ['self', 'threshold'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50010': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getLiquidationThreshold', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50011': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getLiquidationBonus', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'storage'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50012': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setDecimals', 'paramNames': ['self', 'decimals'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50013': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getDecimals', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50014': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setActive', 'paramNames': ['self', 'active'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50015': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getActive', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50016': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setFrozen', 'paramNames': ['self', 'frozen'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50017': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getFrozen', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50018': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setPaused', 'paramNames': ['self', 'paused'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50019': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getPaused', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5001a': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setBorrowableInIsolation', 'paramNames': ['self', 'borrowable'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5001b': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getBorrowableInIsolation', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5001c': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getLiquidationProtocolFee', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5001d': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setUnbackedMintCap', 'paramNames': ['self', 'unbackedMintCap'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5001e': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getUnbackedMintCap', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5001f': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setEModeCategory', 'paramNames': ['self', 'category'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50020': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getEModeCategory', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50021': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getFlags', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50022': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getParams', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50023': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setDebtCeiling', 'paramNames': ['self', 'ceiling'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50024': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getDebtCeiling', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50025': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setLiquidationProtocolFee', 'paramNames': ['self', 'liquidationProtocolFee'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50026': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setStableRateBorrowingEnabled', 'paramNames': ['self', 'enabled'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50027': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getBorrowingEnabled', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50028': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setBorrowingEnabled', 'paramNames': ['self', 'enabled'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50029': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getStableRateBorrowingEnabled', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5002a': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setReserveFactor', 'paramNames': ['self', 'reserveFactor'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5002b': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getReserveFactor', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5002c': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setBorrowCap', 'paramNames': ['self', 'borrowCap'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5002d': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getBorrowCap', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5002e': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setSupplyCap', 'paramNames': ['self', 'supplyCap'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5002f': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getSupplyCap', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50030': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getCaps', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50031': {'canonicalId': 'contracts/protocol/libraries/configuration/UserConfiguration.sol|UserConfiguration', 'declaringContract': 'UserConfiguration', 'method': {'name': 'setBorrowing', 'paramNames': ['self', 'reserveIndex', 'borrowing'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'storage'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'UserConfiguration'}}, '0xf196e50032': {'canonicalId': 'contracts/protocol/libraries/configuration/UserConfiguration.sol|UserConfiguration', 'declaringContract': 'UserConfiguration', 'method': {'name': 'setUsingAsCollateral', 'paramNames': ['self', 'reserveIndex', 'usingAsCollateral'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'storage'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'UserConfiguration'}}, '0xf196e50033': {'canonicalId': 'contracts/protocol/libraries/configuration/UserConfiguration.sol|UserConfiguration', 'declaringContract': 'UserConfiguration', 'method': {'name': 'isUsingAsCollateral', 'paramNames': ['self', 'reserveIndex'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'UserConfiguration'}}, '0xf196e50034': {'canonicalId': 'contracts/protocol/libraries/configuration/UserConfiguration.sol|UserConfiguration', 'declaringContract': 'UserConfiguration', 'method': {'name': 'isUsingAsCollateralOrBorrowing', 'paramNames': ['self', 'reserveIndex'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'UserConfiguration'}}, '0xf196e50035': {'canonicalId': 'contracts/protocol/libraries/configuration/UserConfiguration.sol|UserConfiguration', 'declaringContract': 'UserConfiguration', 'method': {'name': 'isBorrowing', 'paramNames': ['self', 'reserveIndex'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'UserConfiguration'}}, '0xf196e50036': {'canonicalId': 'contracts/protocol/libraries/configuration/UserConfiguration.sol|UserConfiguration', 'declaringContract': 'UserConfiguration', 'method': {'name': 'isUsingAsCollateralOne', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'UserConfiguration'}}, '0xf196e50037': {'canonicalId': 'contracts/protocol/libraries/configuration/UserConfiguration.sol|UserConfiguration', 'declaringContract': 'UserConfiguration', 'method': {'name': 'isUsingAsCollateralAny', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'UserConfiguration'}}, '0xf196e50038': {'canonicalId': 'contracts/protocol/libraries/configuration/UserConfiguration.sol|UserConfiguration', 'declaringContract': 'UserConfiguration', 'method': {'name': 'isBorrowingAny', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'UserConfiguration'}}, '0xf196e50039': {'canonicalId': 'contracts/protocol/libraries/configuration/UserConfiguration.sol|UserConfiguration', 'declaringContract': 'UserConfiguration', 'method': {'name': 'isEmpty', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'UserConfiguration'}}, '0xf196e5003a': {'canonicalId': 'contracts/protocol/libraries/configuration/UserConfiguration.sol|UserConfiguration', 'declaringContract': 'UserConfiguration', 'method': {'name': 'getIsolationModeState', 'paramNames': ['self', 'reservesData', 'reservesList'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'address', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'mappingValueType': {'primitiveName': 'address', 'type': 'Primitive'}}, 'location': 'storage'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'UserConfiguration'}}, '0xf196e5003b': {'canonicalId': 'contracts/protocol/libraries/configuration/UserConfiguration.sol|UserConfiguration', 'declaringContract': 'UserConfiguration', 'method': {'name': '_getFirstAssetAsCollateralId', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'UserConfiguration'}}, '0xf196e5003c': {'canonicalId': 'contracts/protocol/libraries/helpers/Helpers.sol|Helpers', 'declaringContract': 'Helpers', 'method': {'name': 'getUserCurrentDebt', 'paramNames': ['user', 'reserve'], 'fullArgs': [{'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'Helpers'}}, '0xf196e5003d': {'canonicalId': 'contracts/protocol/libraries/helpers/Helpers.sol|Helpers', 'declaringContract': 'Helpers', 'method': {'name': 'getUserCurrentDebtMemory', 'paramNames': ['user', 'reserve'], 'fullArgs': [{'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'Helpers'}}, '0xf196e5003e': {'canonicalId': 'contracts/protocol/libraries/helpers/Helpers.sol|Helpers', 'declaringContract': 'Helpers', 'method': {'name': 'castUint128', 'paramNames': ['input'], 'fullArgs': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint128', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'Helpers'}}, '0xf196e5003f': {'canonicalId': 'contracts/protocol/libraries/logic/BorrowLogic.sol|BorrowLogic', 'declaringContract': 'BorrowLogic', 'method': {'name': 'executeBorrow', 'paramNames': ['reserves', 'reservesList', 'eModeCategories', 'userConfig', 'params'], 'fullArgs': [{'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'address', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'mappingValueType': {'primitiveName': 'address', 'type': 'Primitive'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint8', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'EModeCategory', 'structMembers': [{'name': 'ltv', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationThreshold', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationBonus', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'priceSource', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'label', 'type': {'type': 'StringType'}}], 'containingContract': 'DataTypes', 'astId': 289, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.EModeCategory'}}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ExecuteBorrowParams', 'structMembers': [{'name': 'asset', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'user', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'onBehalfOf', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'amount', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'interestRateMode', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'referralCode', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'releaseUnderlying', 'type': {'primitiveName': 'bool', 'type': 'Primitive'}}, {'name': 'maxStableRateBorrowSizePercent', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reservesCount', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'oracle', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'userEModeCategory', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'priceOracleSentinel', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 388, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ExecuteBorrowParams'}, 'location': 'memory'}], 'returns': [], 'sighash': '1e6473f9', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'public', 'isLibrary': True, 'contractName': 'BorrowLogic'}}, '0xf196e50040': {'canonicalId': 'contracts/protocol/libraries/logic/GenericLogic.sol|GenericLogic', 'declaringContract': 'GenericLogic', 'method': {'name': 'calculateUserAccountData', 'paramNames': ['reservesData', 'reserves', 'eModeCategories', 'params'], 'fullArgs': [{'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'address', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'mappingValueType': {'primitiveName': 'address', 'type': 'Primitive'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint8', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'EModeCategory', 'structMembers': [{'name': 'ltv', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationThreshold', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationBonus', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'priceSource', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'label', 'type': {'type': 'StringType'}}], 'containingContract': 'DataTypes', 'astId': 289, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.EModeCategory'}}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'CalculateUserAccountDataParams', 'structMembers': [{'name': 'userConfig', 'type': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}}, {'name': 'reservesCount', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'user', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'oracle', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'userEModeCategory', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 499, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.CalculateUserAccountDataParams'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'GenericLogic'}}, '0xf196e50041': {'canonicalId': 'contracts/protocol/libraries/logic/GenericLogic.sol|GenericLogic', 'declaringContract': 'GenericLogic', 'method': {'name': 'calculateAvailableBorrows', 'paramNames': ['totalCollateralInBaseCurrency', 'totalDebtInBaseCurrency', 'ltv'], 'fullArgs': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'GenericLogic'}}, '0xf196e50042': {'canonicalId': 'contracts/protocol/libraries/logic/IsolationModeLogic.sol|IsolationModeLogic', 'declaringContract': 'IsolationModeLogic', 'method': {'name': 'updateIsolatedDebtIfIsolated', 'paramNames': ['reserves', 'reservesList', 'userConfig', 'reserveCache', 'repayAmount'], 'fullArgs': [{'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'address', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'mappingValueType': {'primitiveName': 'address', 'type': 'Primitive'}}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'IsolationModeLogic'}}, '0xf196e50043': {'canonicalId': 'contracts/protocol/libraries/logic/LiquidationLogic.sol|LiquidationLogic', 'declaringContract': 'LiquidationLogic', 'method': {'name': '_calculateAvailableCollateralToLiquidate', 'paramNames': ['collateralReserve', 'debtReserveCache', 'collateralAsset', 'debtAsset', 'debtToCover', 'userCollateralBalance', 'liquidationBonus', 'oracle'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'type': 'Contract', 'contractName': 'IPriceOracleGetter'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'LiquidationLogic'}}, '0xf196e50044': {'canonicalId': 'contracts/protocol/libraries/logic/ReserveLogic.sol|ReserveLogic', 'declaringContract': 'ReserveLogic', 'method': {'name': 'getNormalizedIncome', 'paramNames': ['reserve'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveLogic'}}, '0xf196e50045': {'canonicalId': 'contracts/protocol/libraries/logic/ReserveLogic.sol|ReserveLogic', 'declaringContract': 'ReserveLogic', 'method': {'name': 'getNormalizedDebt', 'paramNames': ['reserve'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveLogic'}}, '0xf196e50046': {'canonicalId': 'contracts/protocol/libraries/logic/ReserveLogic.sol|ReserveLogic', 'declaringContract': 'ReserveLogic', 'method': {'name': 'init', 'paramNames': ['reserve', 'aTokenAddress', 'stableDebtTokenAddress', 'variableDebtTokenAddress', 'interestRateStrategyAddress'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveLogic'}}, '0xf196e50047': {'canonicalId': 'contracts/protocol/libraries/logic/ReserveLogic.sol|ReserveLogic', 'declaringContract': 'ReserveLogic', 'method': {'name': 'updateState', 'paramNames': ['reserve', 'reserveCache'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}, 'location': 'memory'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveLogic'}}, '0xf196e50048': {'canonicalId': 'contracts/protocol/libraries/logic/ReserveLogic.sol|ReserveLogic', 'declaringContract': 'ReserveLogic', 'method': {'name': 'cumulateToLiquidityIndex', 'paramNames': ['reserve', 'totalLiquidity', 'amount'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveLogic'}}, '0xf196e50049': {'canonicalId': 'contracts/protocol/libraries/logic/ReserveLogic.sol|ReserveLogic', 'declaringContract': 'ReserveLogic', 'method': {'name': 'updateInterestRates', 'paramNames': ['reserve', 'reserveCache', 'reserveAddress', 'liquidityAdded', 'liquidityTaken'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveLogic'}}, '0xf196e5004a': {'canonicalId': 'contracts/protocol/libraries/logic/ReserveLogic.sol|ReserveLogic', 'declaringContract': 'ReserveLogic', 'method': {'name': '_accrueToTreasury', 'paramNames': ['reserve', 'reserveCache'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}, 'location': 'memory'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveLogic'}}, '0xf196e5004b': {'canonicalId': 'contracts/protocol/libraries/logic/ReserveLogic.sol|ReserveLogic', 'declaringContract': 'ReserveLogic', 'method': {'name': '_updateIndexes', 'paramNames': ['reserve', 'reserveCache'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}, 'location': 'memory'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveLogic'}}, '0xf196e5004c': {'canonicalId': 'contracts/protocol/libraries/logic/ReserveLogic.sol|ReserveLogic', 'declaringContract': 'ReserveLogic', 'method': {'name': 'cache', 'paramNames': ['reserve'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}], 'returns': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}, 'location': 'memory'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveLogic'}}, '0xf196e5004d': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateSupply', 'paramNames': ['reserveCache', 'amount'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e5004e': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateWithdraw', 'paramNames': ['reserveCache', 'amount', 'userBalance'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e5004f': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateSwapRateMode', 'paramNames': ['reserve', 'reserveCache', 'userConfig', 'stableDebt', 'variableDebt', 'currentRateMode'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}, 'location': 'memory'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'storage'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'type': 'UserDefinedEnum', 'enumName': 'InterestRateMode', 'enumMembers': [{'name': 'NONE'}, {'name': 'STABLE'}, {'name': 'VARIABLE'}], 'containingContract': 'DataTypes', 'astId': 293, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.InterestRateMode'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e50050': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateBorrow', 'paramNames': ['reservesData', 'reserves', 'eModeCategories', 'params'], 'fullArgs': [{'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'address', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'mappingValueType': {'primitiveName': 'address', 'type': 'Primitive'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint8', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'EModeCategory', 'structMembers': [{'name': 'ltv', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationThreshold', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationBonus', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'priceSource', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'label', 'type': {'type': 'StringType'}}], 'containingContract': 'DataTypes', 'astId': 289, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.EModeCategory'}}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ValidateBorrowParams', 'structMembers': [{'name': 'reserveCache', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}}, {'name': 'userConfig', 'type': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}}, {'name': 'asset', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'userAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'amount', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'interestRateMode', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'maxStableLoanPercent', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reservesCount', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'oracle', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'userEModeCategory', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'priceOracleSentinel', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'isolationModeActive', 'type': {'primitiveName': 'bool', 'type': 'Primitive'}}, {'name': 'isolationModeCollateralAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'isolationModeDebtCeiling', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 530, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ValidateBorrowParams'}, 'location': 'memory'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e50051': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateRepay', 'paramNames': ['reserveCache', 'amountSent', 'rateMode', 'onBehalfOf', 'stableDebt', 'variableDebt'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'type': 'UserDefinedEnum', 'enumName': 'InterestRateMode', 'enumMembers': [{'name': 'NONE'}, {'name': 'STABLE'}, {'name': 'VARIABLE'}], 'containingContract': 'DataTypes', 'astId': 293, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.InterestRateMode'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e50052': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateRebalanceStableBorrowRate', 'paramNames': ['reserve', 'reserveCache', 'reserveAddress', 'stableDebtToken', 'variableDebtToken', 'aTokenAddress'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'type': 'Contract', 'contractName': 'IERC20'}, 'location': 'stack'}, {'typeDesc': {'type': 'Contract', 'contractName': 'IERC20'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e50053': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateSetUseReserveAsCollateral', 'paramNames': ['reserveCache', 'userBalance'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e50054': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateFlashloan', 'paramNames': ['assets', 'amounts', 'reservesData'], 'fullArgs': [{'typeDesc': {'type': 'Array', 'dynamicArrayBaseType': {'primitiveName': 'address', 'type': 'Primitive'}}, 'location': 'memory'}, {'typeDesc': {'type': 'Array', 'dynamicArrayBaseType': {'primitiveName': 'uint256', 'type': 'Primitive'}}, 'location': 'memory'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'address', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}}, 'location': 'storage'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e50055': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateFlashloanSimple', 'paramNames': ['reserve'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e50056': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateLiquidationCall', 'paramNames': ['userConfig', 'collateralReserve', 'params'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ValidateLiquidationCallParams', 'structMembers': [{'name': 'debtReserveCache', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}}, {'name': 'totalDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'healthFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'priceOracleSentinel', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 540, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ValidateLiquidationCallParams'}, 'location': 'memory'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e50057': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateHealthFactor', 'paramNames': ['reservesData', 'reserves', 'eModeCategories', 'userConfig', 'user', 'userEModeCategory', 'reservesCount', 'oracle'], 'fullArgs': [{'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'address', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'mappingValueType': {'primitiveName': 'address', 'type': 'Primitive'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint8', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'EModeCategory', 'structMembers': [{'name': 'ltv', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationThreshold', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationBonus', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'priceSource', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'label', 'type': {'type': 'StringType'}}], 'containingContract': 'DataTypes', 'astId': 289, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.EModeCategory'}}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint8', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e50058': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateHFAndLtv', 'paramNames': ['reservesData', 'reserves', 'eModeCategories', 'userConfig', 'asset', 'from', 'reservesCount', 'oracle', 'userEModeCategory'], 'fullArgs': [{'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'address', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'mappingValueType': {'primitiveName': 'address', 'type': 'Primitive'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint8', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'EModeCategory', 'structMembers': [{'name': 'ltv', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationThreshold', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationBonus', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'priceSource', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'label', 'type': {'type': 'StringType'}}], 'containingContract': 'DataTypes', 'astId': 289, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.EModeCategory'}}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint8', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e50059': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateTransfer', 'paramNames': ['reserve'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e5005a': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateDropReserve', 'paramNames': ['reserve'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e5005b': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateSetUserEMode', 'paramNames': ['reservesData', 'reserves', 'eModeCategories', 'userConfig', 'reservesCount', 'categoryId'], 'fullArgs': [{'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'address', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'mappingValueType': {'primitiveName': 'address', 'type': 'Primitive'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint8', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'EModeCategory', 'structMembers': [{'name': 'ltv', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationThreshold', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationBonus', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'priceSource', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'label', 'type': {'type': 'StringType'}}], 'containingContract': 'DataTypes', 'astId': 289, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.EModeCategory'}}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint8', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e5005c': {'canonicalId': 'contracts/protocol/libraries/math/MathUtils.sol|MathUtils', 'declaringContract': 'MathUtils', 'method': {'name': 'calculateLinearInterest', 'paramNames': ['rate', 'lastUpdateTimestamp'], 'fullArgs': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint40', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'MathUtils'}}, '0xf196e5005d': {'canonicalId': 'contracts/protocol/libraries/math/MathUtils.sol|MathUtils', 'declaringContract': 'MathUtils', 'method': {'name': 'calculateCompoundedInterest', 'paramNames': ['rate', 'lastUpdateTimestamp', 'currentTimestamp'], 'fullArgs': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint40', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'MathUtils'}}, '0xf196e5005e': {'canonicalId': 'contracts/protocol/libraries/math/MathUtils.sol|MathUtils', 'declaringContract': 'MathUtils', 'method': {'name': 'calculateCompoundedInterest', 'paramNames': ['rate', 'lastUpdateTimestamp'], 'fullArgs': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint40', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'MathUtils'}}, '0xf196e5005f': {'canonicalId': 'contracts/protocol/libraries/math/PercentageMath.sol|PercentageMath', 'declaringContract': 'PercentageMath', 'method': {'name': 'percentMul', 'paramNames': ['value', 'percentage'], 'fullArgs': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'PercentageMath'}}, '0xf196e50060': {'canonicalId': 'contracts/protocol/libraries/math/PercentageMath.sol|PercentageMath', 'declaringContract': 'PercentageMath', 'method': {'name': 'percentDiv', 'paramNames': ['value', 'percentage'], 'fullArgs': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'PercentageMath'}}, '0xf196e50061': {'canonicalId': 'contracts/protocol/libraries/math/WadRayMath.sol|WadRayMath', 'declaringContract': 'WadRayMath', 'method': {'name': 'wad', 'paramNames': [], 'fullArgs': [], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'WadRayMath'}}, '0xf196e50062': {'canonicalId': 'contracts/protocol/libraries/math/WadRayMath.sol|WadRayMath', 'declaringContract': 'WadRayMath', 'method': {'name': 'halfRay', 'paramNames': [], 'fullArgs': [], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'WadRayMath'}}, '0xf196e50063': {'canonicalId': 'contracts/protocol/libraries/math/WadRayMath.sol|WadRayMath', 'declaringContract': 'WadRayMath', 'method': {'name': 'wadDiv', 'paramNames': ['a', 'b'], 'fullArgs': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'WadRayMath'}}, '0xf196e50064': {'canonicalId': 'contracts/protocol/libraries/math/WadRayMath.sol|WadRayMath', 'declaringContract': 'WadRayMath', 'method': {'name': 'halfWad', 'paramNames': [], 'fullArgs': [], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'WadRayMath'}}, '0xf196e50065': {'canonicalId': 'contracts/protocol/libraries/math/WadRayMath.sol|WadRayMath', 'declaringContract': 'WadRayMath', 'method': {'name': 'wadMul', 'paramNames': ['a', 'b'], 'fullArgs': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'WadRayMath'}}, '0xf196e50066': {'canonicalId': 'contracts/protocol/libraries/math/WadRayMath.sol|WadRayMath', 'declaringContract': 'WadRayMath', 'method': {'name': 'rayMul', 'paramNames': ['a', 'b'], 'fullArgs': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'WadRayMath'}}, '0xf196e50067': {'canonicalId': 'contracts/protocol/libraries/math/WadRayMath.sol|WadRayMath', 'declaringContract': 'WadRayMath', 'method': {'name': 'rayDiv', 'paramNames': ['a', 'b'], 'fullArgs': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'WadRayMath'}}, '0xf196e50068': {'canonicalId': 'contracts/protocol/libraries/math/WadRayMath.sol|WadRayMath', 'declaringContract': 'WadRayMath', 'method': {'name': 'rayToWad', 'paramNames': ['a'], 'fullArgs': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'WadRayMath'}}, '0xf196e50069': {'canonicalId': 'contracts/protocol/libraries/math/WadRayMath.sol|WadRayMath', 'declaringContract': 'WadRayMath', 'method': {'name': 'wadToRay', 'paramNames': ['a'], 'fullArgs': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'WadRayMath'}}, '0xf196e5006a': {'canonicalId': 'contracts/protocol/pool/Pool.sol|Pool', 'declaringContract': 'Pool', 'method': {'name': '_onlyPoolConfigurator', 'paramNames': [], 'fullArgs': [], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': False, 'contractName': 'Pool'}}, '0xf196e5006b': {'canonicalId': 'contracts/protocol/pool/Pool.sol|Pool', 'declaringContract': 'Pool', 'method': {'name': '_onlyBridge', 'paramNames': [], 'fullArgs': [], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': False, 'contractName': 'Pool'}}, '0xf196e5006c': {'canonicalId': 'contracts/protocol/pool/Pool.sol|Pool', 'declaringContract': 'Pool', 'method': {'name': 'getRevision', 'paramNames': [], 'fullArgs': [], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': False, 'contractName': 'Pool'}}, '0xf196e5006d': {'canonicalId': 'contracts/protocol/pool/Pool.sol|Pool', 'declaringContract': 'Pool', 'method': {'name': '_addReserveToList', 'paramNames': ['asset'], 'fullArgs': [{'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': False, 'contractName': 'Pool'}}}}
Found library contract {'name': 'SupplyLogic', 'original_file': 'contracts/protocol/libraries/logic/SupplyLogic.sol', 'lang': 'Solidity', 'file': 'Certora/harness/PoolHarness.sol', 'address': '00000000ce4604a0000000000000000000000046', 'methods': [{'name': 'executeSupply', 'paramNames': ['reserves', 'reservesList', 'userConfig', 'params'], 'fullArgs': [{'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'address', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'mappingValueType': {'primitiveName': 'address', 'type': 'Primitive'}}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ExecuteSupplyParams', 'structMembers': [{'name': 'asset', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'amount', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'onBehalfOf', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'referralCode', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 363, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ExecuteSupplyParams'}, 'location': 'memory'}], 'returns': [], 'sighash': '1913f161', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'external', 'isLibrary': True, 'contractName': 'SupplyLogic'}, {'name': 'finalizeTransfer', 'paramNames': ['reserves', 'reservesList', 'eModeCategories', 'usersConfig', 'params'], 'fullArgs': [{'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'address', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'mappingValueType': {'primitiveName': 'address', 'type': 'Primitive'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint8', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'EModeCategory', 'structMembers': [{'name': 'ltv', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationThreshold', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationBonus', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'priceSource', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'label', 'type': {'type': 'StringType'}}], 'containingContract': 'DataTypes', 'astId': 289, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.EModeCategory'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'address', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'FinalizeTransferParams', 'structMembers': [{'name': 'asset', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'from', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'to', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'amount', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'balanceFromBefore', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'balanceToBefore', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reservesCount', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'oracle', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'fromEModeCategory', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'toEModeCategory', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 440, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.FinalizeTransferParams'}, 'location': 'memory'}], 'returns': [], 'sighash': 'd4d954b3', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'external', 'isLibrary': True, 'contractName': 'SupplyLogic'}, {'name': 'executeWithdraw', 'paramNames': ['reserves', 'reservesList', 'eModeCategories', 'userConfig', 'params'], 'fullArgs': [{'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'address', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'mappingValueType': {'primitiveName': 'address', 'type': 'Primitive'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint8', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'EModeCategory', 'structMembers': [{'name': 'ltv', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationThreshold', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationBonus', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'priceSource', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'label', 'type': {'type': 'StringType'}}], 'containingContract': 'DataTypes', 'astId': 289, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.EModeCategory'}}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ExecuteWithdrawParams', 'structMembers': [{'name': 'asset', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'amount', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'to', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reservesCount', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'oracle', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'userEModeCategory', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 412, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ExecuteWithdrawParams'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '186dea44', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'external', 'isLibrary': True, 'contractName': 'SupplyLogic'}, {'name': 'executeUseReserveAsCollateral', 'paramNames': ['reserves', 'reservesList', 'eModeCategories', 'userConfig', 'asset', 'useAsCollateral', 'reservesCount', 'priceOracle', 'userEModeCategory'], 'fullArgs': [{'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'address', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'mappingValueType': {'primitiveName': 'address', 'type': 'Primitive'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint8', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'EModeCategory', 'structMembers': [{'name': 'ltv', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationThreshold', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationBonus', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'priceSource', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'label', 'type': {'type': 'StringType'}}], 'containingContract': 'DataTypes', 'astId': 289, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.EModeCategory'}}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'storage'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint8', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': 'bf697a26', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'external', 'isLibrary': True, 'contractName': 'SupplyLogic'}], 'storageLayout': {'storage': [], 'types': None}, 'immutables': [], 'internalFunctions': {'0xf196e50000': {'canonicalId': 'contracts/protocol/pool/Pool.sol|PoolHarness', 'declaringContract': 'PoolHarness', 'method': {'name': 'MAX_NUMBER_RESERVES', 'paramNames': [], 'fullArgs': [], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': 'f8119d51', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'public', 'isLibrary': False, 'contractName': 'PoolHarness'}}, '0xf196e50001': {'canonicalId': 'contracts/protocol/pool/Pool.sol|PoolHarness', 'declaringContract': 'PoolHarness', 'method': {'name': 'BRIDGE_PROTOCOL_FEE', 'paramNames': [], 'fullArgs': [], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '272d9072', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'public', 'isLibrary': False, 'contractName': 'PoolHarness'}}, '0xf196e50002': {'canonicalId': 'contracts/protocol/pool/Pool.sol|PoolHarness', 'declaringContract': 'PoolHarness', 'method': {'name': 'FLASHLOAN_PREMIUM_TOTAL', 'paramNames': [], 'fullArgs': [], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '074b2e43', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'public', 'isLibrary': False, 'contractName': 'PoolHarness'}}, '0xf196e50003': {'canonicalId': 'contracts/protocol/pool/Pool.sol|PoolHarness', 'declaringContract': 'PoolHarness', 'method': {'name': 'FLASHLOAN_PREMIUM_TO_PROTOCOL', 'paramNames': [], 'fullArgs': [], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '6a99c036', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'public', 'isLibrary': False, 'contractName': 'PoolHarness'}}, '0xf196e50004': {'canonicalId': 'contracts/protocol/pool/Pool.sol|PoolHarness', 'declaringContract': 'PoolHarness', 'method': {'name': 'MAX_STABLE_RATE_BORROW_SIZE_PERCENT', 'paramNames': [], 'fullArgs': [], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': 'e82fec2f', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'public', 'isLibrary': False, 'contractName': 'PoolHarness'}}, '0xf196e50005': {'canonicalId': 'contracts/dependencies/openzeppelin/contracts/Address.sol|Address', 'declaringContract': 'Address', 'method': {'name': 'isContract', 'paramNames': ['account'], 'fullArgs': [{'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'Address'}}, '0xf196e50006': {'canonicalId': 'contracts/dependencies/openzeppelin/contracts/Address.sol|Address', 'declaringContract': 'Address', 'method': {'name': 'sendValue', 'paramNames': ['recipient', 'amount'], 'fullArgs': [{'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'Address'}}, '0xf196e50007': {'canonicalId': 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol|SafeERC20', 'declaringContract': 'SafeERC20', 'method': {'name': 'safeTransfer', 'paramNames': ['token', 'to', 'value'], 'fullArgs': [{'typeDesc': {'type': 'Contract', 'contractName': 'IERC20'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'SafeERC20'}}, '0xf196e50008': {'canonicalId': 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol|SafeERC20', 'declaringContract': 'SafeERC20', 'method': {'name': 'safeTransferFrom', 'paramNames': ['token', 'from', 'to', 'value'], 'fullArgs': [{'typeDesc': {'type': 'Contract', 'contractName': 'IERC20'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'SafeERC20'}}, '0xf196e50009': {'canonicalId': 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol|SafeERC20', 'declaringContract': 'SafeERC20', 'method': {'name': 'safeApprove', 'paramNames': ['token', 'spender', 'value'], 'fullArgs': [{'typeDesc': {'type': 'Contract', 'contractName': 'IERC20'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'SafeERC20'}}, '0xf196e5000a': {'canonicalId': 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol|SafeERC20', 'declaringContract': 'SafeERC20', 'method': {'name': 'callOptionalReturn', 'paramNames': ['token', 'data'], 'fullArgs': [{'typeDesc': {'type': 'Contract', 'contractName': 'IERC20'}, 'location': 'stack'}, {'typeDesc': {'type': 'PackedBytes'}, 'location': 'memory'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'private', 'isLibrary': True, 'contractName': 'SafeERC20'}}, '0xf196e5000b': {'canonicalId': 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol|VersionedInitializable', 'declaringContract': 'VersionedInitializable', 'method': {'name': 'isConstructor', 'paramNames': [], 'fullArgs': [], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'private', 'isLibrary': False, 'contractName': 'VersionedInitializable'}}, '0xf196e5000c': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setLtv', 'paramNames': ['self', 'ltv'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5000d': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getLtv', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5000e': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setLiquidationBonus', 'paramNames': ['self', 'bonus'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5000f': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setLiquidationThreshold', 'paramNames': ['self', 'threshold'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50010': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getLiquidationThreshold', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50011': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getLiquidationBonus', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'storage'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50012': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setDecimals', 'paramNames': ['self', 'decimals'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50013': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getDecimals', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50014': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setActive', 'paramNames': ['self', 'active'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50015': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getActive', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50016': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setFrozen', 'paramNames': ['self', 'frozen'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50017': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getFrozen', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50018': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setPaused', 'paramNames': ['self', 'paused'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50019': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getPaused', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5001a': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setBorrowableInIsolation', 'paramNames': ['self', 'borrowable'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5001b': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getBorrowableInIsolation', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5001c': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getLiquidationProtocolFee', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5001d': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setUnbackedMintCap', 'paramNames': ['self', 'unbackedMintCap'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5001e': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getUnbackedMintCap', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5001f': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setEModeCategory', 'paramNames': ['self', 'category'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50020': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getEModeCategory', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50021': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getFlags', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50022': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getParams', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50023': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setDebtCeiling', 'paramNames': ['self', 'ceiling'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50024': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getDebtCeiling', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50025': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setLiquidationProtocolFee', 'paramNames': ['self', 'liquidationProtocolFee'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50026': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setStableRateBorrowingEnabled', 'paramNames': ['self', 'enabled'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50027': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getBorrowingEnabled', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50028': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setBorrowingEnabled', 'paramNames': ['self', 'enabled'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50029': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getStableRateBorrowingEnabled', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5002a': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setReserveFactor', 'paramNames': ['self', 'reserveFactor'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5002b': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getReserveFactor', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5002c': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setBorrowCap', 'paramNames': ['self', 'borrowCap'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5002d': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getBorrowCap', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5002e': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setSupplyCap', 'paramNames': ['self', 'supplyCap'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5002f': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getSupplyCap', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50030': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getCaps', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50031': {'canonicalId': 'contracts/protocol/libraries/configuration/UserConfiguration.sol|UserConfiguration', 'declaringContract': 'UserConfiguration', 'method': {'name': 'setBorrowing', 'paramNames': ['self', 'reserveIndex', 'borrowing'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'storage'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'UserConfiguration'}}, '0xf196e50032': {'canonicalId': 'contracts/protocol/libraries/configuration/UserConfiguration.sol|UserConfiguration', 'declaringContract': 'UserConfiguration', 'method': {'name': 'setUsingAsCollateral', 'paramNames': ['self', 'reserveIndex', 'usingAsCollateral'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'storage'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'UserConfiguration'}}, '0xf196e50033': {'canonicalId': 'contracts/protocol/libraries/configuration/UserConfiguration.sol|UserConfiguration', 'declaringContract': 'UserConfiguration', 'method': {'name': 'isUsingAsCollateral', 'paramNames': ['self', 'reserveIndex'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'UserConfiguration'}}, '0xf196e50034': {'canonicalId': 'contracts/protocol/libraries/configuration/UserConfiguration.sol|UserConfiguration', 'declaringContract': 'UserConfiguration', 'method': {'name': 'isUsingAsCollateralOrBorrowing', 'paramNames': ['self', 'reserveIndex'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'UserConfiguration'}}, '0xf196e50035': {'canonicalId': 'contracts/protocol/libraries/configuration/UserConfiguration.sol|UserConfiguration', 'declaringContract': 'UserConfiguration', 'method': {'name': 'isBorrowing', 'paramNames': ['self', 'reserveIndex'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'UserConfiguration'}}, '0xf196e50036': {'canonicalId': 'contracts/protocol/libraries/configuration/UserConfiguration.sol|UserConfiguration', 'declaringContract': 'UserConfiguration', 'method': {'name': 'isUsingAsCollateralOne', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'UserConfiguration'}}, '0xf196e50037': {'canonicalId': 'contracts/protocol/libraries/configuration/UserConfiguration.sol|UserConfiguration', 'declaringContract': 'UserConfiguration', 'method': {'name': 'isUsingAsCollateralAny', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'UserConfiguration'}}, '0xf196e50038': {'canonicalId': 'contracts/protocol/libraries/configuration/UserConfiguration.sol|UserConfiguration', 'declaringContract': 'UserConfiguration', 'method': {'name': 'isBorrowingAny', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'UserConfiguration'}}, '0xf196e50039': {'canonicalId': 'contracts/protocol/libraries/configuration/UserConfiguration.sol|UserConfiguration', 'declaringContract': 'UserConfiguration', 'method': {'name': 'isEmpty', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'UserConfiguration'}}, '0xf196e5003a': {'canonicalId': 'contracts/protocol/libraries/configuration/UserConfiguration.sol|UserConfiguration', 'declaringContract': 'UserConfiguration', 'method': {'name': 'getIsolationModeState', 'paramNames': ['self', 'reservesData', 'reservesList'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'address', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'mappingValueType': {'primitiveName': 'address', 'type': 'Primitive'}}, 'location': 'storage'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'UserConfiguration'}}, '0xf196e5003b': {'canonicalId': 'contracts/protocol/libraries/configuration/UserConfiguration.sol|UserConfiguration', 'declaringContract': 'UserConfiguration', 'method': {'name': '_getFirstAssetAsCollateralId', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'UserConfiguration'}}, '0xf196e5003c': {'canonicalId': 'contracts/protocol/libraries/helpers/Helpers.sol|Helpers', 'declaringContract': 'Helpers', 'method': {'name': 'getUserCurrentDebt', 'paramNames': ['user', 'reserve'], 'fullArgs': [{'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'Helpers'}}, '0xf196e5003d': {'canonicalId': 'contracts/protocol/libraries/helpers/Helpers.sol|Helpers', 'declaringContract': 'Helpers', 'method': {'name': 'getUserCurrentDebtMemory', 'paramNames': ['user', 'reserve'], 'fullArgs': [{'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'Helpers'}}, '0xf196e5003e': {'canonicalId': 'contracts/protocol/libraries/helpers/Helpers.sol|Helpers', 'declaringContract': 'Helpers', 'method': {'name': 'castUint128', 'paramNames': ['input'], 'fullArgs': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint128', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'Helpers'}}, '0xf196e5003f': {'canonicalId': 'contracts/protocol/libraries/logic/BorrowLogic.sol|BorrowLogic', 'declaringContract': 'BorrowLogic', 'method': {'name': 'executeBorrow', 'paramNames': ['reserves', 'reservesList', 'eModeCategories', 'userConfig', 'params'], 'fullArgs': [{'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'address', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'mappingValueType': {'primitiveName': 'address', 'type': 'Primitive'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint8', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'EModeCategory', 'structMembers': [{'name': 'ltv', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationThreshold', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationBonus', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'priceSource', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'label', 'type': {'type': 'StringType'}}], 'containingContract': 'DataTypes', 'astId': 289, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.EModeCategory'}}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ExecuteBorrowParams', 'structMembers': [{'name': 'asset', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'user', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'onBehalfOf', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'amount', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'interestRateMode', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'referralCode', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'releaseUnderlying', 'type': {'primitiveName': 'bool', 'type': 'Primitive'}}, {'name': 'maxStableRateBorrowSizePercent', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reservesCount', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'oracle', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'userEModeCategory', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'priceOracleSentinel', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 388, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ExecuteBorrowParams'}, 'location': 'memory'}], 'returns': [], 'sighash': '1e6473f9', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'public', 'isLibrary': True, 'contractName': 'BorrowLogic'}}, '0xf196e50040': {'canonicalId': 'contracts/protocol/libraries/logic/GenericLogic.sol|GenericLogic', 'declaringContract': 'GenericLogic', 'method': {'name': 'calculateUserAccountData', 'paramNames': ['reservesData', 'reserves', 'eModeCategories', 'params'], 'fullArgs': [{'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'address', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'mappingValueType': {'primitiveName': 'address', 'type': 'Primitive'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint8', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'EModeCategory', 'structMembers': [{'name': 'ltv', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationThreshold', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationBonus', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'priceSource', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'label', 'type': {'type': 'StringType'}}], 'containingContract': 'DataTypes', 'astId': 289, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.EModeCategory'}}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'CalculateUserAccountDataParams', 'structMembers': [{'name': 'userConfig', 'type': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}}, {'name': 'reservesCount', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'user', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'oracle', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'userEModeCategory', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 499, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.CalculateUserAccountDataParams'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'GenericLogic'}}, '0xf196e50041': {'canonicalId': 'contracts/protocol/libraries/logic/GenericLogic.sol|GenericLogic', 'declaringContract': 'GenericLogic', 'method': {'name': 'calculateAvailableBorrows', 'paramNames': ['totalCollateralInBaseCurrency', 'totalDebtInBaseCurrency', 'ltv'], 'fullArgs': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'GenericLogic'}}, '0xf196e50042': {'canonicalId': 'contracts/protocol/libraries/logic/IsolationModeLogic.sol|IsolationModeLogic', 'declaringContract': 'IsolationModeLogic', 'method': {'name': 'updateIsolatedDebtIfIsolated', 'paramNames': ['reserves', 'reservesList', 'userConfig', 'reserveCache', 'repayAmount'], 'fullArgs': [{'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'address', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'mappingValueType': {'primitiveName': 'address', 'type': 'Primitive'}}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'IsolationModeLogic'}}, '0xf196e50043': {'canonicalId': 'contracts/protocol/libraries/logic/LiquidationLogic.sol|LiquidationLogic', 'declaringContract': 'LiquidationLogic', 'method': {'name': '_calculateAvailableCollateralToLiquidate', 'paramNames': ['collateralReserve', 'debtReserveCache', 'collateralAsset', 'debtAsset', 'debtToCover', 'userCollateralBalance', 'liquidationBonus', 'oracle'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'type': 'Contract', 'contractName': 'IPriceOracleGetter'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'LiquidationLogic'}}, '0xf196e50044': {'canonicalId': 'contracts/protocol/libraries/logic/ReserveLogic.sol|ReserveLogic', 'declaringContract': 'ReserveLogic', 'method': {'name': 'getNormalizedIncome', 'paramNames': ['reserve'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveLogic'}}, '0xf196e50045': {'canonicalId': 'contracts/protocol/libraries/logic/ReserveLogic.sol|ReserveLogic', 'declaringContract': 'ReserveLogic', 'method': {'name': 'getNormalizedDebt', 'paramNames': ['reserve'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveLogic'}}, '0xf196e50046': {'canonicalId': 'contracts/protocol/libraries/logic/ReserveLogic.sol|ReserveLogic', 'declaringContract': 'ReserveLogic', 'method': {'name': 'init', 'paramNames': ['reserve', 'aTokenAddress', 'stableDebtTokenAddress', 'variableDebtTokenAddress', 'interestRateStrategyAddress'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveLogic'}}, '0xf196e50047': {'canonicalId': 'contracts/protocol/libraries/logic/ReserveLogic.sol|ReserveLogic', 'declaringContract': 'ReserveLogic', 'method': {'name': 'updateState', 'paramNames': ['reserve', 'reserveCache'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}, 'location': 'memory'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveLogic'}}, '0xf196e50048': {'canonicalId': 'contracts/protocol/libraries/logic/ReserveLogic.sol|ReserveLogic', 'declaringContract': 'ReserveLogic', 'method': {'name': 'cumulateToLiquidityIndex', 'paramNames': ['reserve', 'totalLiquidity', 'amount'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveLogic'}}, '0xf196e50049': {'canonicalId': 'contracts/protocol/libraries/logic/ReserveLogic.sol|ReserveLogic', 'declaringContract': 'ReserveLogic', 'method': {'name': 'updateInterestRates', 'paramNames': ['reserve', 'reserveCache', 'reserveAddress', 'liquidityAdded', 'liquidityTaken'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveLogic'}}, '0xf196e5004a': {'canonicalId': 'contracts/protocol/libraries/logic/ReserveLogic.sol|ReserveLogic', 'declaringContract': 'ReserveLogic', 'method': {'name': '_accrueToTreasury', 'paramNames': ['reserve', 'reserveCache'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}, 'location': 'memory'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveLogic'}}, '0xf196e5004b': {'canonicalId': 'contracts/protocol/libraries/logic/ReserveLogic.sol|ReserveLogic', 'declaringContract': 'ReserveLogic', 'method': {'name': '_updateIndexes', 'paramNames': ['reserve', 'reserveCache'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}, 'location': 'memory'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveLogic'}}, '0xf196e5004c': {'canonicalId': 'contracts/protocol/libraries/logic/ReserveLogic.sol|ReserveLogic', 'declaringContract': 'ReserveLogic', 'method': {'name': 'cache', 'paramNames': ['reserve'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}], 'returns': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}, 'location': 'memory'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveLogic'}}, '0xf196e5004d': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateSupply', 'paramNames': ['reserveCache', 'amount'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e5004e': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateWithdraw', 'paramNames': ['reserveCache', 'amount', 'userBalance'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e5004f': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateSwapRateMode', 'paramNames': ['reserve', 'reserveCache', 'userConfig', 'stableDebt', 'variableDebt', 'currentRateMode'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}, 'location': 'memory'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'storage'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'type': 'UserDefinedEnum', 'enumName': 'InterestRateMode', 'enumMembers': [{'name': 'NONE'}, {'name': 'STABLE'}, {'name': 'VARIABLE'}], 'containingContract': 'DataTypes', 'astId': 293, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.InterestRateMode'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e50050': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateBorrow', 'paramNames': ['reservesData', 'reserves', 'eModeCategories', 'params'], 'fullArgs': [{'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'address', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'mappingValueType': {'primitiveName': 'address', 'type': 'Primitive'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint8', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'EModeCategory', 'structMembers': [{'name': 'ltv', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationThreshold', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationBonus', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'priceSource', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'label', 'type': {'type': 'StringType'}}], 'containingContract': 'DataTypes', 'astId': 289, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.EModeCategory'}}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ValidateBorrowParams', 'structMembers': [{'name': 'reserveCache', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}}, {'name': 'userConfig', 'type': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}}, {'name': 'asset', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'userAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'amount', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'interestRateMode', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'maxStableLoanPercent', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reservesCount', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'oracle', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'userEModeCategory', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'priceOracleSentinel', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'isolationModeActive', 'type': {'primitiveName': 'bool', 'type': 'Primitive'}}, {'name': 'isolationModeCollateralAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'isolationModeDebtCeiling', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 530, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ValidateBorrowParams'}, 'location': 'memory'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e50051': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateRepay', 'paramNames': ['reserveCache', 'amountSent', 'rateMode', 'onBehalfOf', 'stableDebt', 'variableDebt'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'type': 'UserDefinedEnum', 'enumName': 'InterestRateMode', 'enumMembers': [{'name': 'NONE'}, {'name': 'STABLE'}, {'name': 'VARIABLE'}], 'containingContract': 'DataTypes', 'astId': 293, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.InterestRateMode'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e50052': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateRebalanceStableBorrowRate', 'paramNames': ['reserve', 'reserveCache', 'reserveAddress', 'stableDebtToken', 'variableDebtToken', 'aTokenAddress'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'type': 'Contract', 'contractName': 'IERC20'}, 'location': 'stack'}, {'typeDesc': {'type': 'Contract', 'contractName': 'IERC20'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e50053': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateSetUseReserveAsCollateral', 'paramNames': ['reserveCache', 'userBalance'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e50054': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateFlashloan', 'paramNames': ['assets', 'amounts', 'reservesData'], 'fullArgs': [{'typeDesc': {'type': 'Array', 'dynamicArrayBaseType': {'primitiveName': 'address', 'type': 'Primitive'}}, 'location': 'memory'}, {'typeDesc': {'type': 'Array', 'dynamicArrayBaseType': {'primitiveName': 'uint256', 'type': 'Primitive'}}, 'location': 'memory'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'address', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}}, 'location': 'storage'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e50055': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateFlashloanSimple', 'paramNames': ['reserve'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e50056': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateLiquidationCall', 'paramNames': ['userConfig', 'collateralReserve', 'params'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ValidateLiquidationCallParams', 'structMembers': [{'name': 'debtReserveCache', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}}, {'name': 'totalDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'healthFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'priceOracleSentinel', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 540, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ValidateLiquidationCallParams'}, 'location': 'memory'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e50057': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateHealthFactor', 'paramNames': ['reservesData', 'reserves', 'eModeCategories', 'userConfig', 'user', 'userEModeCategory', 'reservesCount', 'oracle'], 'fullArgs': [{'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'address', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'mappingValueType': {'primitiveName': 'address', 'type': 'Primitive'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint8', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'EModeCategory', 'structMembers': [{'name': 'ltv', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationThreshold', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationBonus', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'priceSource', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'label', 'type': {'type': 'StringType'}}], 'containingContract': 'DataTypes', 'astId': 289, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.EModeCategory'}}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint8', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e50058': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateHFAndLtv', 'paramNames': ['reservesData', 'reserves', 'eModeCategories', 'userConfig', 'asset', 'from', 'reservesCount', 'oracle', 'userEModeCategory'], 'fullArgs': [{'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'address', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'mappingValueType': {'primitiveName': 'address', 'type': 'Primitive'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint8', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'EModeCategory', 'structMembers': [{'name': 'ltv', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationThreshold', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationBonus', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'priceSource', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'label', 'type': {'type': 'StringType'}}], 'containingContract': 'DataTypes', 'astId': 289, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.EModeCategory'}}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint8', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e50059': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateTransfer', 'paramNames': ['reserve'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e5005a': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateDropReserve', 'paramNames': ['reserve'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e5005b': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateSetUserEMode', 'paramNames': ['reservesData', 'reserves', 'eModeCategories', 'userConfig', 'reservesCount', 'categoryId'], 'fullArgs': [{'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'address', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'mappingValueType': {'primitiveName': 'address', 'type': 'Primitive'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint8', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'EModeCategory', 'structMembers': [{'name': 'ltv', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationThreshold', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationBonus', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'priceSource', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'label', 'type': {'type': 'StringType'}}], 'containingContract': 'DataTypes', 'astId': 289, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.EModeCategory'}}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint8', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e5005c': {'canonicalId': 'contracts/protocol/libraries/math/MathUtils.sol|MathUtils', 'declaringContract': 'MathUtils', 'method': {'name': 'calculateLinearInterest', 'paramNames': ['rate', 'lastUpdateTimestamp'], 'fullArgs': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint40', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'MathUtils'}}, '0xf196e5005d': {'canonicalId': 'contracts/protocol/libraries/math/MathUtils.sol|MathUtils', 'declaringContract': 'MathUtils', 'method': {'name': 'calculateCompoundedInterest', 'paramNames': ['rate', 'lastUpdateTimestamp', 'currentTimestamp'], 'fullArgs': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint40', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'MathUtils'}}, '0xf196e5005e': {'canonicalId': 'contracts/protocol/libraries/math/MathUtils.sol|MathUtils', 'declaringContract': 'MathUtils', 'method': {'name': 'calculateCompoundedInterest', 'paramNames': ['rate', 'lastUpdateTimestamp'], 'fullArgs': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint40', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'MathUtils'}}, '0xf196e5005f': {'canonicalId': 'contracts/protocol/libraries/math/PercentageMath.sol|PercentageMath', 'declaringContract': 'PercentageMath', 'method': {'name': 'percentMul', 'paramNames': ['value', 'percentage'], 'fullArgs': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'PercentageMath'}}, '0xf196e50060': {'canonicalId': 'contracts/protocol/libraries/math/PercentageMath.sol|PercentageMath', 'declaringContract': 'PercentageMath', 'method': {'name': 'percentDiv', 'paramNames': ['value', 'percentage'], 'fullArgs': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'PercentageMath'}}, '0xf196e50061': {'canonicalId': 'contracts/protocol/libraries/math/WadRayMath.sol|WadRayMath', 'declaringContract': 'WadRayMath', 'method': {'name': 'wad', 'paramNames': [], 'fullArgs': [], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'WadRayMath'}}, '0xf196e50062': {'canonicalId': 'contracts/protocol/libraries/math/WadRayMath.sol|WadRayMath', 'declaringContract': 'WadRayMath', 'method': {'name': 'halfRay', 'paramNames': [], 'fullArgs': [], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'WadRayMath'}}, '0xf196e50063': {'canonicalId': 'contracts/protocol/libraries/math/WadRayMath.sol|WadRayMath', 'declaringContract': 'WadRayMath', 'method': {'name': 'wadDiv', 'paramNames': ['a', 'b'], 'fullArgs': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'WadRayMath'}}, '0xf196e50064': {'canonicalId': 'contracts/protocol/libraries/math/WadRayMath.sol|WadRayMath', 'declaringContract': 'WadRayMath', 'method': {'name': 'halfWad', 'paramNames': [], 'fullArgs': [], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'WadRayMath'}}, '0xf196e50065': {'canonicalId': 'contracts/protocol/libraries/math/WadRayMath.sol|WadRayMath', 'declaringContract': 'WadRayMath', 'method': {'name': 'wadMul', 'paramNames': ['a', 'b'], 'fullArgs': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'WadRayMath'}}, '0xf196e50066': {'canonicalId': 'contracts/protocol/libraries/math/WadRayMath.sol|WadRayMath', 'declaringContract': 'WadRayMath', 'method': {'name': 'rayMul', 'paramNames': ['a', 'b'], 'fullArgs': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'WadRayMath'}}, '0xf196e50067': {'canonicalId': 'contracts/protocol/libraries/math/WadRayMath.sol|WadRayMath', 'declaringContract': 'WadRayMath', 'method': {'name': 'rayDiv', 'paramNames': ['a', 'b'], 'fullArgs': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'WadRayMath'}}, '0xf196e50068': {'canonicalId': 'contracts/protocol/libraries/math/WadRayMath.sol|WadRayMath', 'declaringContract': 'WadRayMath', 'method': {'name': 'rayToWad', 'paramNames': ['a'], 'fullArgs': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'WadRayMath'}}, '0xf196e50069': {'canonicalId': 'contracts/protocol/libraries/math/WadRayMath.sol|WadRayMath', 'declaringContract': 'WadRayMath', 'method': {'name': 'wadToRay', 'paramNames': ['a'], 'fullArgs': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'WadRayMath'}}, '0xf196e5006a': {'canonicalId': 'contracts/protocol/pool/Pool.sol|Pool', 'declaringContract': 'Pool', 'method': {'name': '_onlyPoolConfigurator', 'paramNames': [], 'fullArgs': [], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': False, 'contractName': 'Pool'}}, '0xf196e5006b': {'canonicalId': 'contracts/protocol/pool/Pool.sol|Pool', 'declaringContract': 'Pool', 'method': {'name': '_onlyBridge', 'paramNames': [], 'fullArgs': [], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': False, 'contractName': 'Pool'}}, '0xf196e5006c': {'canonicalId': 'contracts/protocol/pool/Pool.sol|Pool', 'declaringContract': 'Pool', 'method': {'name': 'getRevision', 'paramNames': [], 'fullArgs': [], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': False, 'contractName': 'Pool'}}, '0xf196e5006d': {'canonicalId': 'contracts/protocol/pool/Pool.sol|Pool', 'declaringContract': 'Pool', 'method': {'name': '_addReserveToList', 'paramNames': ['asset'], 'fullArgs': [{'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': False, 'contractName': 'Pool'}}}}
Found library contract {'name': 'BridgeLogic', 'original_file': 'contracts/protocol/libraries/logic/BridgeLogic.sol', 'lang': 'Solidity', 'file': 'Certora/harness/PoolHarness.sol', 'address': '00000000ce4604a000000000000000000000003f', 'methods': [{'name': 'mintUnbacked', 'paramNames': ['reserve', 'userConfig', 'asset', 'amount', 'onBehalfOf', 'referralCode'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'storage'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint16', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': 'd6c9a662', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'external', 'isLibrary': True, 'contractName': 'BridgeLogic'}, {'name': 'backUnbacked', 'paramNames': ['reserve', 'asset', 'amount', 'fee', 'protocolFeeBps'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': 'e0ea7832', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'external', 'isLibrary': True, 'contractName': 'BridgeLogic'}], 'storageLayout': {'storage': [], 'types': None}, 'immutables': [], 'internalFunctions': {'0xf196e50000': {'canonicalId': 'contracts/protocol/pool/Pool.sol|PoolHarness', 'declaringContract': 'PoolHarness', 'method': {'name': 'MAX_NUMBER_RESERVES', 'paramNames': [], 'fullArgs': [], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': 'f8119d51', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'public', 'isLibrary': False, 'contractName': 'PoolHarness'}}, '0xf196e50001': {'canonicalId': 'contracts/protocol/pool/Pool.sol|PoolHarness', 'declaringContract': 'PoolHarness', 'method': {'name': 'BRIDGE_PROTOCOL_FEE', 'paramNames': [], 'fullArgs': [], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '272d9072', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'public', 'isLibrary': False, 'contractName': 'PoolHarness'}}, '0xf196e50002': {'canonicalId': 'contracts/protocol/pool/Pool.sol|PoolHarness', 'declaringContract': 'PoolHarness', 'method': {'name': 'FLASHLOAN_PREMIUM_TOTAL', 'paramNames': [], 'fullArgs': [], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '074b2e43', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'public', 'isLibrary': False, 'contractName': 'PoolHarness'}}, '0xf196e50003': {'canonicalId': 'contracts/protocol/pool/Pool.sol|PoolHarness', 'declaringContract': 'PoolHarness', 'method': {'name': 'FLASHLOAN_PREMIUM_TO_PROTOCOL', 'paramNames': [], 'fullArgs': [], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '6a99c036', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'public', 'isLibrary': False, 'contractName': 'PoolHarness'}}, '0xf196e50004': {'canonicalId': 'contracts/protocol/pool/Pool.sol|PoolHarness', 'declaringContract': 'PoolHarness', 'method': {'name': 'MAX_STABLE_RATE_BORROW_SIZE_PERCENT', 'paramNames': [], 'fullArgs': [], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': 'e82fec2f', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'public', 'isLibrary': False, 'contractName': 'PoolHarness'}}, '0xf196e50005': {'canonicalId': 'contracts/dependencies/openzeppelin/contracts/Address.sol|Address', 'declaringContract': 'Address', 'method': {'name': 'isContract', 'paramNames': ['account'], 'fullArgs': [{'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'Address'}}, '0xf196e50006': {'canonicalId': 'contracts/dependencies/openzeppelin/contracts/Address.sol|Address', 'declaringContract': 'Address', 'method': {'name': 'sendValue', 'paramNames': ['recipient', 'amount'], 'fullArgs': [{'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'Address'}}, '0xf196e50007': {'canonicalId': 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol|SafeERC20', 'declaringContract': 'SafeERC20', 'method': {'name': 'safeTransfer', 'paramNames': ['token', 'to', 'value'], 'fullArgs': [{'typeDesc': {'type': 'Contract', 'contractName': 'IERC20'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'SafeERC20'}}, '0xf196e50008': {'canonicalId': 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol|SafeERC20', 'declaringContract': 'SafeERC20', 'method': {'name': 'safeTransferFrom', 'paramNames': ['token', 'from', 'to', 'value'], 'fullArgs': [{'typeDesc': {'type': 'Contract', 'contractName': 'IERC20'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'SafeERC20'}}, '0xf196e50009': {'canonicalId': 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol|SafeERC20', 'declaringContract': 'SafeERC20', 'method': {'name': 'safeApprove', 'paramNames': ['token', 'spender', 'value'], 'fullArgs': [{'typeDesc': {'type': 'Contract', 'contractName': 'IERC20'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'SafeERC20'}}, '0xf196e5000a': {'canonicalId': 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol|SafeERC20', 'declaringContract': 'SafeERC20', 'method': {'name': 'callOptionalReturn', 'paramNames': ['token', 'data'], 'fullArgs': [{'typeDesc': {'type': 'Contract', 'contractName': 'IERC20'}, 'location': 'stack'}, {'typeDesc': {'type': 'PackedBytes'}, 'location': 'memory'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'private', 'isLibrary': True, 'contractName': 'SafeERC20'}}, '0xf196e5000b': {'canonicalId': 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol|VersionedInitializable', 'declaringContract': 'VersionedInitializable', 'method': {'name': 'isConstructor', 'paramNames': [], 'fullArgs': [], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'private', 'isLibrary': False, 'contractName': 'VersionedInitializable'}}, '0xf196e5000c': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setLtv', 'paramNames': ['self', 'ltv'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5000d': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getLtv', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5000e': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setLiquidationBonus', 'paramNames': ['self', 'bonus'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5000f': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setLiquidationThreshold', 'paramNames': ['self', 'threshold'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50010': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getLiquidationThreshold', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50011': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getLiquidationBonus', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'storage'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50012': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setDecimals', 'paramNames': ['self', 'decimals'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50013': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getDecimals', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50014': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setActive', 'paramNames': ['self', 'active'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50015': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getActive', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50016': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setFrozen', 'paramNames': ['self', 'frozen'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50017': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getFrozen', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50018': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setPaused', 'paramNames': ['self', 'paused'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50019': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getPaused', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5001a': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setBorrowableInIsolation', 'paramNames': ['self', 'borrowable'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5001b': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getBorrowableInIsolation', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5001c': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getLiquidationProtocolFee', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5001d': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setUnbackedMintCap', 'paramNames': ['self', 'unbackedMintCap'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5001e': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getUnbackedMintCap', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5001f': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setEModeCategory', 'paramNames': ['self', 'category'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50020': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getEModeCategory', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50021': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getFlags', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50022': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getParams', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50023': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setDebtCeiling', 'paramNames': ['self', 'ceiling'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50024': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getDebtCeiling', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50025': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setLiquidationProtocolFee', 'paramNames': ['self', 'liquidationProtocolFee'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50026': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setStableRateBorrowingEnabled', 'paramNames': ['self', 'enabled'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50027': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getBorrowingEnabled', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50028': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setBorrowingEnabled', 'paramNames': ['self', 'enabled'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50029': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getStableRateBorrowingEnabled', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5002a': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setReserveFactor', 'paramNames': ['self', 'reserveFactor'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5002b': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getReserveFactor', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5002c': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setBorrowCap', 'paramNames': ['self', 'borrowCap'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5002d': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getBorrowCap', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5002e': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setSupplyCap', 'paramNames': ['self', 'supplyCap'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5002f': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getSupplyCap', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50030': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getCaps', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50031': {'canonicalId': 'contracts/protocol/libraries/configuration/UserConfiguration.sol|UserConfiguration', 'declaringContract': 'UserConfiguration', 'method': {'name': 'setBorrowing', 'paramNames': ['self', 'reserveIndex', 'borrowing'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'storage'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'UserConfiguration'}}, '0xf196e50032': {'canonicalId': 'contracts/protocol/libraries/configuration/UserConfiguration.sol|UserConfiguration', 'declaringContract': 'UserConfiguration', 'method': {'name': 'setUsingAsCollateral', 'paramNames': ['self', 'reserveIndex', 'usingAsCollateral'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'storage'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'UserConfiguration'}}, '0xf196e50033': {'canonicalId': 'contracts/protocol/libraries/configuration/UserConfiguration.sol|UserConfiguration', 'declaringContract': 'UserConfiguration', 'method': {'name': 'isUsingAsCollateral', 'paramNames': ['self', 'reserveIndex'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'UserConfiguration'}}, '0xf196e50034': {'canonicalId': 'contracts/protocol/libraries/configuration/UserConfiguration.sol|UserConfiguration', 'declaringContract': 'UserConfiguration', 'method': {'name': 'isUsingAsCollateralOrBorrowing', 'paramNames': ['self', 'reserveIndex'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'UserConfiguration'}}, '0xf196e50035': {'canonicalId': 'contracts/protocol/libraries/configuration/UserConfiguration.sol|UserConfiguration', 'declaringContract': 'UserConfiguration', 'method': {'name': 'isBorrowing', 'paramNames': ['self', 'reserveIndex'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'UserConfiguration'}}, '0xf196e50036': {'canonicalId': 'contracts/protocol/libraries/configuration/UserConfiguration.sol|UserConfiguration', 'declaringContract': 'UserConfiguration', 'method': {'name': 'isUsingAsCollateralOne', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'UserConfiguration'}}, '0xf196e50037': {'canonicalId': 'contracts/protocol/libraries/configuration/UserConfiguration.sol|UserConfiguration', 'declaringContract': 'UserConfiguration', 'method': {'name': 'isUsingAsCollateralAny', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'UserConfiguration'}}, '0xf196e50038': {'canonicalId': 'contracts/protocol/libraries/configuration/UserConfiguration.sol|UserConfiguration', 'declaringContract': 'UserConfiguration', 'method': {'name': 'isBorrowingAny', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'UserConfiguration'}}, '0xf196e50039': {'canonicalId': 'contracts/protocol/libraries/configuration/UserConfiguration.sol|UserConfiguration', 'declaringContract': 'UserConfiguration', 'method': {'name': 'isEmpty', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'UserConfiguration'}}, '0xf196e5003a': {'canonicalId': 'contracts/protocol/libraries/configuration/UserConfiguration.sol|UserConfiguration', 'declaringContract': 'UserConfiguration', 'method': {'name': 'getIsolationModeState', 'paramNames': ['self', 'reservesData', 'reservesList'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'address', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'mappingValueType': {'primitiveName': 'address', 'type': 'Primitive'}}, 'location': 'storage'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'UserConfiguration'}}, '0xf196e5003b': {'canonicalId': 'contracts/protocol/libraries/configuration/UserConfiguration.sol|UserConfiguration', 'declaringContract': 'UserConfiguration', 'method': {'name': '_getFirstAssetAsCollateralId', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'UserConfiguration'}}, '0xf196e5003c': {'canonicalId': 'contracts/protocol/libraries/helpers/Helpers.sol|Helpers', 'declaringContract': 'Helpers', 'method': {'name': 'getUserCurrentDebt', 'paramNames': ['user', 'reserve'], 'fullArgs': [{'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'Helpers'}}, '0xf196e5003d': {'canonicalId': 'contracts/protocol/libraries/helpers/Helpers.sol|Helpers', 'declaringContract': 'Helpers', 'method': {'name': 'getUserCurrentDebtMemory', 'paramNames': ['user', 'reserve'], 'fullArgs': [{'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'Helpers'}}, '0xf196e5003e': {'canonicalId': 'contracts/protocol/libraries/helpers/Helpers.sol|Helpers', 'declaringContract': 'Helpers', 'method': {'name': 'castUint128', 'paramNames': ['input'], 'fullArgs': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint128', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'Helpers'}}, '0xf196e5003f': {'canonicalId': 'contracts/protocol/libraries/logic/BorrowLogic.sol|BorrowLogic', 'declaringContract': 'BorrowLogic', 'method': {'name': 'executeBorrow', 'paramNames': ['reserves', 'reservesList', 'eModeCategories', 'userConfig', 'params'], 'fullArgs': [{'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'address', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'mappingValueType': {'primitiveName': 'address', 'type': 'Primitive'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint8', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'EModeCategory', 'structMembers': [{'name': 'ltv', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationThreshold', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationBonus', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'priceSource', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'label', 'type': {'type': 'StringType'}}], 'containingContract': 'DataTypes', 'astId': 289, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.EModeCategory'}}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ExecuteBorrowParams', 'structMembers': [{'name': 'asset', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'user', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'onBehalfOf', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'amount', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'interestRateMode', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'referralCode', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'releaseUnderlying', 'type': {'primitiveName': 'bool', 'type': 'Primitive'}}, {'name': 'maxStableRateBorrowSizePercent', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reservesCount', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'oracle', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'userEModeCategory', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'priceOracleSentinel', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 388, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ExecuteBorrowParams'}, 'location': 'memory'}], 'returns': [], 'sighash': '1e6473f9', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'public', 'isLibrary': True, 'contractName': 'BorrowLogic'}}, '0xf196e50040': {'canonicalId': 'contracts/protocol/libraries/logic/GenericLogic.sol|GenericLogic', 'declaringContract': 'GenericLogic', 'method': {'name': 'calculateUserAccountData', 'paramNames': ['reservesData', 'reserves', 'eModeCategories', 'params'], 'fullArgs': [{'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'address', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'mappingValueType': {'primitiveName': 'address', 'type': 'Primitive'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint8', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'EModeCategory', 'structMembers': [{'name': 'ltv', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationThreshold', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationBonus', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'priceSource', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'label', 'type': {'type': 'StringType'}}], 'containingContract': 'DataTypes', 'astId': 289, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.EModeCategory'}}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'CalculateUserAccountDataParams', 'structMembers': [{'name': 'userConfig', 'type': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}}, {'name': 'reservesCount', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'user', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'oracle', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'userEModeCategory', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 499, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.CalculateUserAccountDataParams'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'GenericLogic'}}, '0xf196e50041': {'canonicalId': 'contracts/protocol/libraries/logic/GenericLogic.sol|GenericLogic', 'declaringContract': 'GenericLogic', 'method': {'name': 'calculateAvailableBorrows', 'paramNames': ['totalCollateralInBaseCurrency', 'totalDebtInBaseCurrency', 'ltv'], 'fullArgs': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'GenericLogic'}}, '0xf196e50042': {'canonicalId': 'contracts/protocol/libraries/logic/IsolationModeLogic.sol|IsolationModeLogic', 'declaringContract': 'IsolationModeLogic', 'method': {'name': 'updateIsolatedDebtIfIsolated', 'paramNames': ['reserves', 'reservesList', 'userConfig', 'reserveCache', 'repayAmount'], 'fullArgs': [{'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'address', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'mappingValueType': {'primitiveName': 'address', 'type': 'Primitive'}}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'IsolationModeLogic'}}, '0xf196e50043': {'canonicalId': 'contracts/protocol/libraries/logic/LiquidationLogic.sol|LiquidationLogic', 'declaringContract': 'LiquidationLogic', 'method': {'name': '_calculateAvailableCollateralToLiquidate', 'paramNames': ['collateralReserve', 'debtReserveCache', 'collateralAsset', 'debtAsset', 'debtToCover', 'userCollateralBalance', 'liquidationBonus', 'oracle'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'type': 'Contract', 'contractName': 'IPriceOracleGetter'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'LiquidationLogic'}}, '0xf196e50044': {'canonicalId': 'contracts/protocol/libraries/logic/ReserveLogic.sol|ReserveLogic', 'declaringContract': 'ReserveLogic', 'method': {'name': 'getNormalizedIncome', 'paramNames': ['reserve'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveLogic'}}, '0xf196e50045': {'canonicalId': 'contracts/protocol/libraries/logic/ReserveLogic.sol|ReserveLogic', 'declaringContract': 'ReserveLogic', 'method': {'name': 'getNormalizedDebt', 'paramNames': ['reserve'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveLogic'}}, '0xf196e50046': {'canonicalId': 'contracts/protocol/libraries/logic/ReserveLogic.sol|ReserveLogic', 'declaringContract': 'ReserveLogic', 'method': {'name': 'init', 'paramNames': ['reserve', 'aTokenAddress', 'stableDebtTokenAddress', 'variableDebtTokenAddress', 'interestRateStrategyAddress'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveLogic'}}, '0xf196e50047': {'canonicalId': 'contracts/protocol/libraries/logic/ReserveLogic.sol|ReserveLogic', 'declaringContract': 'ReserveLogic', 'method': {'name': 'updateState', 'paramNames': ['reserve', 'reserveCache'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}, 'location': 'memory'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveLogic'}}, '0xf196e50048': {'canonicalId': 'contracts/protocol/libraries/logic/ReserveLogic.sol|ReserveLogic', 'declaringContract': 'ReserveLogic', 'method': {'name': 'cumulateToLiquidityIndex', 'paramNames': ['reserve', 'totalLiquidity', 'amount'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveLogic'}}, '0xf196e50049': {'canonicalId': 'contracts/protocol/libraries/logic/ReserveLogic.sol|ReserveLogic', 'declaringContract': 'ReserveLogic', 'method': {'name': 'updateInterestRates', 'paramNames': ['reserve', 'reserveCache', 'reserveAddress', 'liquidityAdded', 'liquidityTaken'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveLogic'}}, '0xf196e5004a': {'canonicalId': 'contracts/protocol/libraries/logic/ReserveLogic.sol|ReserveLogic', 'declaringContract': 'ReserveLogic', 'method': {'name': '_accrueToTreasury', 'paramNames': ['reserve', 'reserveCache'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}, 'location': 'memory'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveLogic'}}, '0xf196e5004b': {'canonicalId': 'contracts/protocol/libraries/logic/ReserveLogic.sol|ReserveLogic', 'declaringContract': 'ReserveLogic', 'method': {'name': '_updateIndexes', 'paramNames': ['reserve', 'reserveCache'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}, 'location': 'memory'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveLogic'}}, '0xf196e5004c': {'canonicalId': 'contracts/protocol/libraries/logic/ReserveLogic.sol|ReserveLogic', 'declaringContract': 'ReserveLogic', 'method': {'name': 'cache', 'paramNames': ['reserve'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}], 'returns': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}, 'location': 'memory'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveLogic'}}, '0xf196e5004d': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateSupply', 'paramNames': ['reserveCache', 'amount'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e5004e': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateWithdraw', 'paramNames': ['reserveCache', 'amount', 'userBalance'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e5004f': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateSwapRateMode', 'paramNames': ['reserve', 'reserveCache', 'userConfig', 'stableDebt', 'variableDebt', 'currentRateMode'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}, 'location': 'memory'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'storage'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'type': 'UserDefinedEnum', 'enumName': 'InterestRateMode', 'enumMembers': [{'name': 'NONE'}, {'name': 'STABLE'}, {'name': 'VARIABLE'}], 'containingContract': 'DataTypes', 'astId': 293, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.InterestRateMode'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e50050': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateBorrow', 'paramNames': ['reservesData', 'reserves', 'eModeCategories', 'params'], 'fullArgs': [{'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'address', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'mappingValueType': {'primitiveName': 'address', 'type': 'Primitive'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint8', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'EModeCategory', 'structMembers': [{'name': 'ltv', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationThreshold', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationBonus', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'priceSource', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'label', 'type': {'type': 'StringType'}}], 'containingContract': 'DataTypes', 'astId': 289, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.EModeCategory'}}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ValidateBorrowParams', 'structMembers': [{'name': 'reserveCache', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}}, {'name': 'userConfig', 'type': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}}, {'name': 'asset', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'userAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'amount', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'interestRateMode', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'maxStableLoanPercent', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reservesCount', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'oracle', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'userEModeCategory', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'priceOracleSentinel', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'isolationModeActive', 'type': {'primitiveName': 'bool', 'type': 'Primitive'}}, {'name': 'isolationModeCollateralAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'isolationModeDebtCeiling', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 530, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ValidateBorrowParams'}, 'location': 'memory'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e50051': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateRepay', 'paramNames': ['reserveCache', 'amountSent', 'rateMode', 'onBehalfOf', 'stableDebt', 'variableDebt'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'type': 'UserDefinedEnum', 'enumName': 'InterestRateMode', 'enumMembers': [{'name': 'NONE'}, {'name': 'STABLE'}, {'name': 'VARIABLE'}], 'containingContract': 'DataTypes', 'astId': 293, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.InterestRateMode'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e50052': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateRebalanceStableBorrowRate', 'paramNames': ['reserve', 'reserveCache', 'reserveAddress', 'stableDebtToken', 'variableDebtToken', 'aTokenAddress'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'type': 'Contract', 'contractName': 'IERC20'}, 'location': 'stack'}, {'typeDesc': {'type': 'Contract', 'contractName': 'IERC20'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e50053': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateSetUseReserveAsCollateral', 'paramNames': ['reserveCache', 'userBalance'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e50054': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateFlashloan', 'paramNames': ['assets', 'amounts', 'reservesData'], 'fullArgs': [{'typeDesc': {'type': 'Array', 'dynamicArrayBaseType': {'primitiveName': 'address', 'type': 'Primitive'}}, 'location': 'memory'}, {'typeDesc': {'type': 'Array', 'dynamicArrayBaseType': {'primitiveName': 'uint256', 'type': 'Primitive'}}, 'location': 'memory'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'address', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}}, 'location': 'storage'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e50055': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateFlashloanSimple', 'paramNames': ['reserve'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e50056': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateLiquidationCall', 'paramNames': ['userConfig', 'collateralReserve', 'params'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ValidateLiquidationCallParams', 'structMembers': [{'name': 'debtReserveCache', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}}, {'name': 'totalDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'healthFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'priceOracleSentinel', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 540, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ValidateLiquidationCallParams'}, 'location': 'memory'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e50057': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateHealthFactor', 'paramNames': ['reservesData', 'reserves', 'eModeCategories', 'userConfig', 'user', 'userEModeCategory', 'reservesCount', 'oracle'], 'fullArgs': [{'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'address', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'mappingValueType': {'primitiveName': 'address', 'type': 'Primitive'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint8', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'EModeCategory', 'structMembers': [{'name': 'ltv', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationThreshold', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationBonus', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'priceSource', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'label', 'type': {'type': 'StringType'}}], 'containingContract': 'DataTypes', 'astId': 289, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.EModeCategory'}}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint8', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e50058': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateHFAndLtv', 'paramNames': ['reservesData', 'reserves', 'eModeCategories', 'userConfig', 'asset', 'from', 'reservesCount', 'oracle', 'userEModeCategory'], 'fullArgs': [{'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'address', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'mappingValueType': {'primitiveName': 'address', 'type': 'Primitive'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint8', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'EModeCategory', 'structMembers': [{'name': 'ltv', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationThreshold', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationBonus', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'priceSource', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'label', 'type': {'type': 'StringType'}}], 'containingContract': 'DataTypes', 'astId': 289, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.EModeCategory'}}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint8', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e50059': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateTransfer', 'paramNames': ['reserve'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e5005a': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateDropReserve', 'paramNames': ['reserve'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e5005b': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateSetUserEMode', 'paramNames': ['reservesData', 'reserves', 'eModeCategories', 'userConfig', 'reservesCount', 'categoryId'], 'fullArgs': [{'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'address', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'mappingValueType': {'primitiveName': 'address', 'type': 'Primitive'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint8', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'EModeCategory', 'structMembers': [{'name': 'ltv', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationThreshold', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationBonus', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'priceSource', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'label', 'type': {'type': 'StringType'}}], 'containingContract': 'DataTypes', 'astId': 289, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.EModeCategory'}}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint8', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e5005c': {'canonicalId': 'contracts/protocol/libraries/math/MathUtils.sol|MathUtils', 'declaringContract': 'MathUtils', 'method': {'name': 'calculateLinearInterest', 'paramNames': ['rate', 'lastUpdateTimestamp'], 'fullArgs': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint40', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'MathUtils'}}, '0xf196e5005d': {'canonicalId': 'contracts/protocol/libraries/math/MathUtils.sol|MathUtils', 'declaringContract': 'MathUtils', 'method': {'name': 'calculateCompoundedInterest', 'paramNames': ['rate', 'lastUpdateTimestamp', 'currentTimestamp'], 'fullArgs': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint40', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'MathUtils'}}, '0xf196e5005e': {'canonicalId': 'contracts/protocol/libraries/math/MathUtils.sol|MathUtils', 'declaringContract': 'MathUtils', 'method': {'name': 'calculateCompoundedInterest', 'paramNames': ['rate', 'lastUpdateTimestamp'], 'fullArgs': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint40', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'MathUtils'}}, '0xf196e5005f': {'canonicalId': 'contracts/protocol/libraries/math/PercentageMath.sol|PercentageMath', 'declaringContract': 'PercentageMath', 'method': {'name': 'percentMul', 'paramNames': ['value', 'percentage'], 'fullArgs': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'PercentageMath'}}, '0xf196e50060': {'canonicalId': 'contracts/protocol/libraries/math/PercentageMath.sol|PercentageMath', 'declaringContract': 'PercentageMath', 'method': {'name': 'percentDiv', 'paramNames': ['value', 'percentage'], 'fullArgs': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'PercentageMath'}}, '0xf196e50061': {'canonicalId': 'contracts/protocol/libraries/math/WadRayMath.sol|WadRayMath', 'declaringContract': 'WadRayMath', 'method': {'name': 'wad', 'paramNames': [], 'fullArgs': [], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'WadRayMath'}}, '0xf196e50062': {'canonicalId': 'contracts/protocol/libraries/math/WadRayMath.sol|WadRayMath', 'declaringContract': 'WadRayMath', 'method': {'name': 'halfRay', 'paramNames': [], 'fullArgs': [], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'WadRayMath'}}, '0xf196e50063': {'canonicalId': 'contracts/protocol/libraries/math/WadRayMath.sol|WadRayMath', 'declaringContract': 'WadRayMath', 'method': {'name': 'wadDiv', 'paramNames': ['a', 'b'], 'fullArgs': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'WadRayMath'}}, '0xf196e50064': {'canonicalId': 'contracts/protocol/libraries/math/WadRayMath.sol|WadRayMath', 'declaringContract': 'WadRayMath', 'method': {'name': 'halfWad', 'paramNames': [], 'fullArgs': [], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'WadRayMath'}}, '0xf196e50065': {'canonicalId': 'contracts/protocol/libraries/math/WadRayMath.sol|WadRayMath', 'declaringContract': 'WadRayMath', 'method': {'name': 'wadMul', 'paramNames': ['a', 'b'], 'fullArgs': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'WadRayMath'}}, '0xf196e50066': {'canonicalId': 'contracts/protocol/libraries/math/WadRayMath.sol|WadRayMath', 'declaringContract': 'WadRayMath', 'method': {'name': 'rayMul', 'paramNames': ['a', 'b'], 'fullArgs': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'WadRayMath'}}, '0xf196e50067': {'canonicalId': 'contracts/protocol/libraries/math/WadRayMath.sol|WadRayMath', 'declaringContract': 'WadRayMath', 'method': {'name': 'rayDiv', 'paramNames': ['a', 'b'], 'fullArgs': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'WadRayMath'}}, '0xf196e50068': {'canonicalId': 'contracts/protocol/libraries/math/WadRayMath.sol|WadRayMath', 'declaringContract': 'WadRayMath', 'method': {'name': 'rayToWad', 'paramNames': ['a'], 'fullArgs': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'WadRayMath'}}, '0xf196e50069': {'canonicalId': 'contracts/protocol/libraries/math/WadRayMath.sol|WadRayMath', 'declaringContract': 'WadRayMath', 'method': {'name': 'wadToRay', 'paramNames': ['a'], 'fullArgs': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'WadRayMath'}}, '0xf196e5006a': {'canonicalId': 'contracts/protocol/pool/Pool.sol|Pool', 'declaringContract': 'Pool', 'method': {'name': '_onlyPoolConfigurator', 'paramNames': [], 'fullArgs': [], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': False, 'contractName': 'Pool'}}, '0xf196e5006b': {'canonicalId': 'contracts/protocol/pool/Pool.sol|Pool', 'declaringContract': 'Pool', 'method': {'name': '_onlyBridge', 'paramNames': [], 'fullArgs': [], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': False, 'contractName': 'Pool'}}, '0xf196e5006c': {'canonicalId': 'contracts/protocol/pool/Pool.sol|Pool', 'declaringContract': 'Pool', 'method': {'name': 'getRevision', 'paramNames': [], 'fullArgs': [], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': False, 'contractName': 'Pool'}}, '0xf196e5006d': {'canonicalId': 'contracts/protocol/pool/Pool.sol|Pool', 'declaringContract': 'Pool', 'method': {'name': '_addReserveToList', 'paramNames': ['asset'], 'fullArgs': [{'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': False, 'contractName': 'Pool'}}}}
Found library contract {'name': 'FlashLoanLogic', 'original_file': 'contracts/protocol/libraries/logic/FlashLoanLogic.sol', 'lang': 'Solidity', 'file': 'Certora/harness/PoolHarness.sol', 'address': '00000000ce4604a0000000000000000000000041', 'methods': [{'name': 'executeFlashLoan', 'paramNames': ['reserves', 'reservesList', 'eModeCategories', 'userConfig', 'params'], 'fullArgs': [{'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'address', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'mappingValueType': {'primitiveName': 'address', 'type': 'Primitive'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint8', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'EModeCategory', 'structMembers': [{'name': 'ltv', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationThreshold', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationBonus', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'priceSource', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'label', 'type': {'type': 'StringType'}}], 'containingContract': 'DataTypes', 'astId': 289, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.EModeCategory'}}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'FlashloanParams', 'structMembers': [{'name': 'receiverAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'assets', 'type': {'type': 'Array', 'dynamicArrayBaseType': {'primitiveName': 'address', 'type': 'Primitive'}}}, {'name': 'amounts', 'type': {'type': 'Array', 'dynamicArrayBaseType': {'primitiveName': 'uint256', 'type': 'Primitive'}}}, {'name': 'modes', 'type': {'type': 'Array', 'dynamicArrayBaseType': {'primitiveName': 'uint256', 'type': 'Primitive'}}}, {'name': 'onBehalfOf', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'params', 'type': {'type': 'PackedBytes'}}, {'name': 'referralCode', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'flashLoanPremiumToProtocol', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'flashLoanPremiumTotal', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'maxStableRateBorrowSizePercent', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reservesCount', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'addressesProvider', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'userEModeCategory', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'isAuthorizedFlashBorrower', 'type': {'primitiveName': 'bool', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 472, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.FlashloanParams'}, 'location': 'memory'}], 'returns': [], 'sighash': '2e7263ea', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'external', 'isLibrary': True, 'contractName': 'FlashLoanLogic'}, {'name': 'executeFlashLoanSimple', 'paramNames': ['reserve', 'params'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'FlashloanSimpleParams', 'structMembers': [{'name': 'receiverAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'asset', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'amount', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'params', 'type': {'type': 'PackedBytes'}}, {'name': 'referralCode', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'flashLoanPremiumToProtocol', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'flashLoanPremiumTotal', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 487, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.FlashloanSimpleParams'}, 'location': 'memory'}], 'returns': [], 'sighash': 'a1fe0e8d', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'external', 'isLibrary': True, 'contractName': 'FlashLoanLogic'}], 'storageLayout': {'storage': [], 'types': None}, 'immutables': [], 'internalFunctions': {'0xf196e50000': {'canonicalId': 'contracts/protocol/pool/Pool.sol|PoolHarness', 'declaringContract': 'PoolHarness', 'method': {'name': 'MAX_NUMBER_RESERVES', 'paramNames': [], 'fullArgs': [], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': 'f8119d51', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'public', 'isLibrary': False, 'contractName': 'PoolHarness'}}, '0xf196e50001': {'canonicalId': 'contracts/protocol/pool/Pool.sol|PoolHarness', 'declaringContract': 'PoolHarness', 'method': {'name': 'BRIDGE_PROTOCOL_FEE', 'paramNames': [], 'fullArgs': [], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '272d9072', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'public', 'isLibrary': False, 'contractName': 'PoolHarness'}}, '0xf196e50002': {'canonicalId': 'contracts/protocol/pool/Pool.sol|PoolHarness', 'declaringContract': 'PoolHarness', 'method': {'name': 'FLASHLOAN_PREMIUM_TOTAL', 'paramNames': [], 'fullArgs': [], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '074b2e43', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'public', 'isLibrary': False, 'contractName': 'PoolHarness'}}, '0xf196e50003': {'canonicalId': 'contracts/protocol/pool/Pool.sol|PoolHarness', 'declaringContract': 'PoolHarness', 'method': {'name': 'FLASHLOAN_PREMIUM_TO_PROTOCOL', 'paramNames': [], 'fullArgs': [], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '6a99c036', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'public', 'isLibrary': False, 'contractName': 'PoolHarness'}}, '0xf196e50004': {'canonicalId': 'contracts/protocol/pool/Pool.sol|PoolHarness', 'declaringContract': 'PoolHarness', 'method': {'name': 'MAX_STABLE_RATE_BORROW_SIZE_PERCENT', 'paramNames': [], 'fullArgs': [], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': 'e82fec2f', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'public', 'isLibrary': False, 'contractName': 'PoolHarness'}}, '0xf196e50005': {'canonicalId': 'contracts/dependencies/openzeppelin/contracts/Address.sol|Address', 'declaringContract': 'Address', 'method': {'name': 'isContract', 'paramNames': ['account'], 'fullArgs': [{'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'Address'}}, '0xf196e50006': {'canonicalId': 'contracts/dependencies/openzeppelin/contracts/Address.sol|Address', 'declaringContract': 'Address', 'method': {'name': 'sendValue', 'paramNames': ['recipient', 'amount'], 'fullArgs': [{'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'Address'}}, '0xf196e50007': {'canonicalId': 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol|SafeERC20', 'declaringContract': 'SafeERC20', 'method': {'name': 'safeTransfer', 'paramNames': ['token', 'to', 'value'], 'fullArgs': [{'typeDesc': {'type': 'Contract', 'contractName': 'IERC20'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'SafeERC20'}}, '0xf196e50008': {'canonicalId': 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol|SafeERC20', 'declaringContract': 'SafeERC20', 'method': {'name': 'safeTransferFrom', 'paramNames': ['token', 'from', 'to', 'value'], 'fullArgs': [{'typeDesc': {'type': 'Contract', 'contractName': 'IERC20'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'SafeERC20'}}, '0xf196e50009': {'canonicalId': 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol|SafeERC20', 'declaringContract': 'SafeERC20', 'method': {'name': 'safeApprove', 'paramNames': ['token', 'spender', 'value'], 'fullArgs': [{'typeDesc': {'type': 'Contract', 'contractName': 'IERC20'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'SafeERC20'}}, '0xf196e5000a': {'canonicalId': 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol|SafeERC20', 'declaringContract': 'SafeERC20', 'method': {'name': 'callOptionalReturn', 'paramNames': ['token', 'data'], 'fullArgs': [{'typeDesc': {'type': 'Contract', 'contractName': 'IERC20'}, 'location': 'stack'}, {'typeDesc': {'type': 'PackedBytes'}, 'location': 'memory'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'private', 'isLibrary': True, 'contractName': 'SafeERC20'}}, '0xf196e5000b': {'canonicalId': 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol|VersionedInitializable', 'declaringContract': 'VersionedInitializable', 'method': {'name': 'isConstructor', 'paramNames': [], 'fullArgs': [], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'private', 'isLibrary': False, 'contractName': 'VersionedInitializable'}}, '0xf196e5000c': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setLtv', 'paramNames': ['self', 'ltv'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5000d': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getLtv', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5000e': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setLiquidationBonus', 'paramNames': ['self', 'bonus'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5000f': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setLiquidationThreshold', 'paramNames': ['self', 'threshold'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50010': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getLiquidationThreshold', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50011': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getLiquidationBonus', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'storage'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50012': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setDecimals', 'paramNames': ['self', 'decimals'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50013': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getDecimals', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50014': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setActive', 'paramNames': ['self', 'active'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50015': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getActive', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50016': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setFrozen', 'paramNames': ['self', 'frozen'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50017': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getFrozen', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50018': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setPaused', 'paramNames': ['self', 'paused'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50019': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getPaused', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5001a': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setBorrowableInIsolation', 'paramNames': ['self', 'borrowable'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5001b': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getBorrowableInIsolation', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5001c': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getLiquidationProtocolFee', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5001d': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setUnbackedMintCap', 'paramNames': ['self', 'unbackedMintCap'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5001e': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getUnbackedMintCap', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5001f': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setEModeCategory', 'paramNames': ['self', 'category'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50020': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getEModeCategory', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50021': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getFlags', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50022': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getParams', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50023': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setDebtCeiling', 'paramNames': ['self', 'ceiling'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50024': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getDebtCeiling', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50025': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setLiquidationProtocolFee', 'paramNames': ['self', 'liquidationProtocolFee'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50026': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setStableRateBorrowingEnabled', 'paramNames': ['self', 'enabled'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50027': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getBorrowingEnabled', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50028': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setBorrowingEnabled', 'paramNames': ['self', 'enabled'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50029': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getStableRateBorrowingEnabled', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5002a': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setReserveFactor', 'paramNames': ['self', 'reserveFactor'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5002b': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getReserveFactor', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5002c': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setBorrowCap', 'paramNames': ['self', 'borrowCap'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5002d': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getBorrowCap', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5002e': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setSupplyCap', 'paramNames': ['self', 'supplyCap'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5002f': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getSupplyCap', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50030': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getCaps', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50031': {'canonicalId': 'contracts/protocol/libraries/configuration/UserConfiguration.sol|UserConfiguration', 'declaringContract': 'UserConfiguration', 'method': {'name': 'setBorrowing', 'paramNames': ['self', 'reserveIndex', 'borrowing'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'storage'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'UserConfiguration'}}, '0xf196e50032': {'canonicalId': 'contracts/protocol/libraries/configuration/UserConfiguration.sol|UserConfiguration', 'declaringContract': 'UserConfiguration', 'method': {'name': 'setUsingAsCollateral', 'paramNames': ['self', 'reserveIndex', 'usingAsCollateral'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'storage'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'UserConfiguration'}}, '0xf196e50033': {'canonicalId': 'contracts/protocol/libraries/configuration/UserConfiguration.sol|UserConfiguration', 'declaringContract': 'UserConfiguration', 'method': {'name': 'isUsingAsCollateral', 'paramNames': ['self', 'reserveIndex'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'UserConfiguration'}}, '0xf196e50034': {'canonicalId': 'contracts/protocol/libraries/configuration/UserConfiguration.sol|UserConfiguration', 'declaringContract': 'UserConfiguration', 'method': {'name': 'isUsingAsCollateralOrBorrowing', 'paramNames': ['self', 'reserveIndex'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'UserConfiguration'}}, '0xf196e50035': {'canonicalId': 'contracts/protocol/libraries/configuration/UserConfiguration.sol|UserConfiguration', 'declaringContract': 'UserConfiguration', 'method': {'name': 'isBorrowing', 'paramNames': ['self', 'reserveIndex'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'UserConfiguration'}}, '0xf196e50036': {'canonicalId': 'contracts/protocol/libraries/configuration/UserConfiguration.sol|UserConfiguration', 'declaringContract': 'UserConfiguration', 'method': {'name': 'isUsingAsCollateralOne', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'UserConfiguration'}}, '0xf196e50037': {'canonicalId': 'contracts/protocol/libraries/configuration/UserConfiguration.sol|UserConfiguration', 'declaringContract': 'UserConfiguration', 'method': {'name': 'isUsingAsCollateralAny', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'UserConfiguration'}}, '0xf196e50038': {'canonicalId': 'contracts/protocol/libraries/configuration/UserConfiguration.sol|UserConfiguration', 'declaringContract': 'UserConfiguration', 'method': {'name': 'isBorrowingAny', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'UserConfiguration'}}, '0xf196e50039': {'canonicalId': 'contracts/protocol/libraries/configuration/UserConfiguration.sol|UserConfiguration', 'declaringContract': 'UserConfiguration', 'method': {'name': 'isEmpty', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'UserConfiguration'}}, '0xf196e5003a': {'canonicalId': 'contracts/protocol/libraries/configuration/UserConfiguration.sol|UserConfiguration', 'declaringContract': 'UserConfiguration', 'method': {'name': 'getIsolationModeState', 'paramNames': ['self', 'reservesData', 'reservesList'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'address', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'mappingValueType': {'primitiveName': 'address', 'type': 'Primitive'}}, 'location': 'storage'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'UserConfiguration'}}, '0xf196e5003b': {'canonicalId': 'contracts/protocol/libraries/configuration/UserConfiguration.sol|UserConfiguration', 'declaringContract': 'UserConfiguration', 'method': {'name': '_getFirstAssetAsCollateralId', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'UserConfiguration'}}, '0xf196e5003c': {'canonicalId': 'contracts/protocol/libraries/helpers/Helpers.sol|Helpers', 'declaringContract': 'Helpers', 'method': {'name': 'getUserCurrentDebt', 'paramNames': ['user', 'reserve'], 'fullArgs': [{'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'Helpers'}}, '0xf196e5003d': {'canonicalId': 'contracts/protocol/libraries/helpers/Helpers.sol|Helpers', 'declaringContract': 'Helpers', 'method': {'name': 'getUserCurrentDebtMemory', 'paramNames': ['user', 'reserve'], 'fullArgs': [{'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'Helpers'}}, '0xf196e5003e': {'canonicalId': 'contracts/protocol/libraries/helpers/Helpers.sol|Helpers', 'declaringContract': 'Helpers', 'method': {'name': 'castUint128', 'paramNames': ['input'], 'fullArgs': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint128', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'Helpers'}}, '0xf196e5003f': {'canonicalId': 'contracts/protocol/libraries/logic/BorrowLogic.sol|BorrowLogic', 'declaringContract': 'BorrowLogic', 'method': {'name': 'executeBorrow', 'paramNames': ['reserves', 'reservesList', 'eModeCategories', 'userConfig', 'params'], 'fullArgs': [{'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'address', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'mappingValueType': {'primitiveName': 'address', 'type': 'Primitive'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint8', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'EModeCategory', 'structMembers': [{'name': 'ltv', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationThreshold', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationBonus', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'priceSource', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'label', 'type': {'type': 'StringType'}}], 'containingContract': 'DataTypes', 'astId': 289, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.EModeCategory'}}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ExecuteBorrowParams', 'structMembers': [{'name': 'asset', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'user', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'onBehalfOf', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'amount', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'interestRateMode', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'referralCode', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'releaseUnderlying', 'type': {'primitiveName': 'bool', 'type': 'Primitive'}}, {'name': 'maxStableRateBorrowSizePercent', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reservesCount', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'oracle', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'userEModeCategory', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'priceOracleSentinel', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 388, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ExecuteBorrowParams'}, 'location': 'memory'}], 'returns': [], 'sighash': '1e6473f9', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'public', 'isLibrary': True, 'contractName': 'BorrowLogic'}}, '0xf196e50040': {'canonicalId': 'contracts/protocol/libraries/logic/GenericLogic.sol|GenericLogic', 'declaringContract': 'GenericLogic', 'method': {'name': 'calculateUserAccountData', 'paramNames': ['reservesData', 'reserves', 'eModeCategories', 'params'], 'fullArgs': [{'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'address', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'mappingValueType': {'primitiveName': 'address', 'type': 'Primitive'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint8', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'EModeCategory', 'structMembers': [{'name': 'ltv', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationThreshold', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationBonus', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'priceSource', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'label', 'type': {'type': 'StringType'}}], 'containingContract': 'DataTypes', 'astId': 289, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.EModeCategory'}}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'CalculateUserAccountDataParams', 'structMembers': [{'name': 'userConfig', 'type': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}}, {'name': 'reservesCount', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'user', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'oracle', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'userEModeCategory', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 499, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.CalculateUserAccountDataParams'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'GenericLogic'}}, '0xf196e50041': {'canonicalId': 'contracts/protocol/libraries/logic/GenericLogic.sol|GenericLogic', 'declaringContract': 'GenericLogic', 'method': {'name': 'calculateAvailableBorrows', 'paramNames': ['totalCollateralInBaseCurrency', 'totalDebtInBaseCurrency', 'ltv'], 'fullArgs': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'GenericLogic'}}, '0xf196e50042': {'canonicalId': 'contracts/protocol/libraries/logic/IsolationModeLogic.sol|IsolationModeLogic', 'declaringContract': 'IsolationModeLogic', 'method': {'name': 'updateIsolatedDebtIfIsolated', 'paramNames': ['reserves', 'reservesList', 'userConfig', 'reserveCache', 'repayAmount'], 'fullArgs': [{'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'address', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'mappingValueType': {'primitiveName': 'address', 'type': 'Primitive'}}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'IsolationModeLogic'}}, '0xf196e50043': {'canonicalId': 'contracts/protocol/libraries/logic/LiquidationLogic.sol|LiquidationLogic', 'declaringContract': 'LiquidationLogic', 'method': {'name': '_calculateAvailableCollateralToLiquidate', 'paramNames': ['collateralReserve', 'debtReserveCache', 'collateralAsset', 'debtAsset', 'debtToCover', 'userCollateralBalance', 'liquidationBonus', 'oracle'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'type': 'Contract', 'contractName': 'IPriceOracleGetter'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'LiquidationLogic'}}, '0xf196e50044': {'canonicalId': 'contracts/protocol/libraries/logic/ReserveLogic.sol|ReserveLogic', 'declaringContract': 'ReserveLogic', 'method': {'name': 'getNormalizedIncome', 'paramNames': ['reserve'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveLogic'}}, '0xf196e50045': {'canonicalId': 'contracts/protocol/libraries/logic/ReserveLogic.sol|ReserveLogic', 'declaringContract': 'ReserveLogic', 'method': {'name': 'getNormalizedDebt', 'paramNames': ['reserve'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveLogic'}}, '0xf196e50046': {'canonicalId': 'contracts/protocol/libraries/logic/ReserveLogic.sol|ReserveLogic', 'declaringContract': 'ReserveLogic', 'method': {'name': 'init', 'paramNames': ['reserve', 'aTokenAddress', 'stableDebtTokenAddress', 'variableDebtTokenAddress', 'interestRateStrategyAddress'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveLogic'}}, '0xf196e50047': {'canonicalId': 'contracts/protocol/libraries/logic/ReserveLogic.sol|ReserveLogic', 'declaringContract': 'ReserveLogic', 'method': {'name': 'updateState', 'paramNames': ['reserve', 'reserveCache'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}, 'location': 'memory'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveLogic'}}, '0xf196e50048': {'canonicalId': 'contracts/protocol/libraries/logic/ReserveLogic.sol|ReserveLogic', 'declaringContract': 'ReserveLogic', 'method': {'name': 'cumulateToLiquidityIndex', 'paramNames': ['reserve', 'totalLiquidity', 'amount'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveLogic'}}, '0xf196e50049': {'canonicalId': 'contracts/protocol/libraries/logic/ReserveLogic.sol|ReserveLogic', 'declaringContract': 'ReserveLogic', 'method': {'name': 'updateInterestRates', 'paramNames': ['reserve', 'reserveCache', 'reserveAddress', 'liquidityAdded', 'liquidityTaken'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveLogic'}}, '0xf196e5004a': {'canonicalId': 'contracts/protocol/libraries/logic/ReserveLogic.sol|ReserveLogic', 'declaringContract': 'ReserveLogic', 'method': {'name': '_accrueToTreasury', 'paramNames': ['reserve', 'reserveCache'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}, 'location': 'memory'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveLogic'}}, '0xf196e5004b': {'canonicalId': 'contracts/protocol/libraries/logic/ReserveLogic.sol|ReserveLogic', 'declaringContract': 'ReserveLogic', 'method': {'name': '_updateIndexes', 'paramNames': ['reserve', 'reserveCache'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}, 'location': 'memory'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveLogic'}}, '0xf196e5004c': {'canonicalId': 'contracts/protocol/libraries/logic/ReserveLogic.sol|ReserveLogic', 'declaringContract': 'ReserveLogic', 'method': {'name': 'cache', 'paramNames': ['reserve'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}], 'returns': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}, 'location': 'memory'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveLogic'}}, '0xf196e5004d': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateSupply', 'paramNames': ['reserveCache', 'amount'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e5004e': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateWithdraw', 'paramNames': ['reserveCache', 'amount', 'userBalance'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e5004f': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateSwapRateMode', 'paramNames': ['reserve', 'reserveCache', 'userConfig', 'stableDebt', 'variableDebt', 'currentRateMode'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}, 'location': 'memory'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'storage'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'type': 'UserDefinedEnum', 'enumName': 'InterestRateMode', 'enumMembers': [{'name': 'NONE'}, {'name': 'STABLE'}, {'name': 'VARIABLE'}], 'containingContract': 'DataTypes', 'astId': 293, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.InterestRateMode'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e50050': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateBorrow', 'paramNames': ['reservesData', 'reserves', 'eModeCategories', 'params'], 'fullArgs': [{'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'address', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'mappingValueType': {'primitiveName': 'address', 'type': 'Primitive'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint8', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'EModeCategory', 'structMembers': [{'name': 'ltv', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationThreshold', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationBonus', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'priceSource', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'label', 'type': {'type': 'StringType'}}], 'containingContract': 'DataTypes', 'astId': 289, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.EModeCategory'}}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ValidateBorrowParams', 'structMembers': [{'name': 'reserveCache', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}}, {'name': 'userConfig', 'type': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}}, {'name': 'asset', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'userAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'amount', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'interestRateMode', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'maxStableLoanPercent', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reservesCount', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'oracle', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'userEModeCategory', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'priceOracleSentinel', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'isolationModeActive', 'type': {'primitiveName': 'bool', 'type': 'Primitive'}}, {'name': 'isolationModeCollateralAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'isolationModeDebtCeiling', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 530, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ValidateBorrowParams'}, 'location': 'memory'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e50051': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateRepay', 'paramNames': ['reserveCache', 'amountSent', 'rateMode', 'onBehalfOf', 'stableDebt', 'variableDebt'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'type': 'UserDefinedEnum', 'enumName': 'InterestRateMode', 'enumMembers': [{'name': 'NONE'}, {'name': 'STABLE'}, {'name': 'VARIABLE'}], 'containingContract': 'DataTypes', 'astId': 293, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.InterestRateMode'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e50052': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateRebalanceStableBorrowRate', 'paramNames': ['reserve', 'reserveCache', 'reserveAddress', 'stableDebtToken', 'variableDebtToken', 'aTokenAddress'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'type': 'Contract', 'contractName': 'IERC20'}, 'location': 'stack'}, {'typeDesc': {'type': 'Contract', 'contractName': 'IERC20'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e50053': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateSetUseReserveAsCollateral', 'paramNames': ['reserveCache', 'userBalance'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e50054': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateFlashloan', 'paramNames': ['assets', 'amounts', 'reservesData'], 'fullArgs': [{'typeDesc': {'type': 'Array', 'dynamicArrayBaseType': {'primitiveName': 'address', 'type': 'Primitive'}}, 'location': 'memory'}, {'typeDesc': {'type': 'Array', 'dynamicArrayBaseType': {'primitiveName': 'uint256', 'type': 'Primitive'}}, 'location': 'memory'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'address', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}}, 'location': 'storage'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e50055': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateFlashloanSimple', 'paramNames': ['reserve'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e50056': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateLiquidationCall', 'paramNames': ['userConfig', 'collateralReserve', 'params'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ValidateLiquidationCallParams', 'structMembers': [{'name': 'debtReserveCache', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}}, {'name': 'totalDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'healthFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'priceOracleSentinel', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 540, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ValidateLiquidationCallParams'}, 'location': 'memory'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e50057': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateHealthFactor', 'paramNames': ['reservesData', 'reserves', 'eModeCategories', 'userConfig', 'user', 'userEModeCategory', 'reservesCount', 'oracle'], 'fullArgs': [{'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'address', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'mappingValueType': {'primitiveName': 'address', 'type': 'Primitive'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint8', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'EModeCategory', 'structMembers': [{'name': 'ltv', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationThreshold', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationBonus', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'priceSource', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'label', 'type': {'type': 'StringType'}}], 'containingContract': 'DataTypes', 'astId': 289, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.EModeCategory'}}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint8', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e50058': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateHFAndLtv', 'paramNames': ['reservesData', 'reserves', 'eModeCategories', 'userConfig', 'asset', 'from', 'reservesCount', 'oracle', 'userEModeCategory'], 'fullArgs': [{'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'address', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'mappingValueType': {'primitiveName': 'address', 'type': 'Primitive'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint8', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'EModeCategory', 'structMembers': [{'name': 'ltv', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationThreshold', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationBonus', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'priceSource', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'label', 'type': {'type': 'StringType'}}], 'containingContract': 'DataTypes', 'astId': 289, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.EModeCategory'}}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint8', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e50059': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateTransfer', 'paramNames': ['reserve'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e5005a': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateDropReserve', 'paramNames': ['reserve'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e5005b': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateSetUserEMode', 'paramNames': ['reservesData', 'reserves', 'eModeCategories', 'userConfig', 'reservesCount', 'categoryId'], 'fullArgs': [{'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'address', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'mappingValueType': {'primitiveName': 'address', 'type': 'Primitive'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint8', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'EModeCategory', 'structMembers': [{'name': 'ltv', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationThreshold', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationBonus', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'priceSource', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'label', 'type': {'type': 'StringType'}}], 'containingContract': 'DataTypes', 'astId': 289, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.EModeCategory'}}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint8', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e5005c': {'canonicalId': 'contracts/protocol/libraries/math/MathUtils.sol|MathUtils', 'declaringContract': 'MathUtils', 'method': {'name': 'calculateLinearInterest', 'paramNames': ['rate', 'lastUpdateTimestamp'], 'fullArgs': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint40', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'MathUtils'}}, '0xf196e5005d': {'canonicalId': 'contracts/protocol/libraries/math/MathUtils.sol|MathUtils', 'declaringContract': 'MathUtils', 'method': {'name': 'calculateCompoundedInterest', 'paramNames': ['rate', 'lastUpdateTimestamp', 'currentTimestamp'], 'fullArgs': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint40', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'MathUtils'}}, '0xf196e5005e': {'canonicalId': 'contracts/protocol/libraries/math/MathUtils.sol|MathUtils', 'declaringContract': 'MathUtils', 'method': {'name': 'calculateCompoundedInterest', 'paramNames': ['rate', 'lastUpdateTimestamp'], 'fullArgs': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint40', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'MathUtils'}}, '0xf196e5005f': {'canonicalId': 'contracts/protocol/libraries/math/PercentageMath.sol|PercentageMath', 'declaringContract': 'PercentageMath', 'method': {'name': 'percentMul', 'paramNames': ['value', 'percentage'], 'fullArgs': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'PercentageMath'}}, '0xf196e50060': {'canonicalId': 'contracts/protocol/libraries/math/PercentageMath.sol|PercentageMath', 'declaringContract': 'PercentageMath', 'method': {'name': 'percentDiv', 'paramNames': ['value', 'percentage'], 'fullArgs': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'PercentageMath'}}, '0xf196e50061': {'canonicalId': 'contracts/protocol/libraries/math/WadRayMath.sol|WadRayMath', 'declaringContract': 'WadRayMath', 'method': {'name': 'wad', 'paramNames': [], 'fullArgs': [], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'WadRayMath'}}, '0xf196e50062': {'canonicalId': 'contracts/protocol/libraries/math/WadRayMath.sol|WadRayMath', 'declaringContract': 'WadRayMath', 'method': {'name': 'halfRay', 'paramNames': [], 'fullArgs': [], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'WadRayMath'}}, '0xf196e50063': {'canonicalId': 'contracts/protocol/libraries/math/WadRayMath.sol|WadRayMath', 'declaringContract': 'WadRayMath', 'method': {'name': 'wadDiv', 'paramNames': ['a', 'b'], 'fullArgs': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'WadRayMath'}}, '0xf196e50064': {'canonicalId': 'contracts/protocol/libraries/math/WadRayMath.sol|WadRayMath', 'declaringContract': 'WadRayMath', 'method': {'name': 'halfWad', 'paramNames': [], 'fullArgs': [], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'WadRayMath'}}, '0xf196e50065': {'canonicalId': 'contracts/protocol/libraries/math/WadRayMath.sol|WadRayMath', 'declaringContract': 'WadRayMath', 'method': {'name': 'wadMul', 'paramNames': ['a', 'b'], 'fullArgs': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'WadRayMath'}}, '0xf196e50066': {'canonicalId': 'contracts/protocol/libraries/math/WadRayMath.sol|WadRayMath', 'declaringContract': 'WadRayMath', 'method': {'name': 'rayMul', 'paramNames': ['a', 'b'], 'fullArgs': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'WadRayMath'}}, '0xf196e50067': {'canonicalId': 'contracts/protocol/libraries/math/WadRayMath.sol|WadRayMath', 'declaringContract': 'WadRayMath', 'method': {'name': 'rayDiv', 'paramNames': ['a', 'b'], 'fullArgs': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'WadRayMath'}}, '0xf196e50068': {'canonicalId': 'contracts/protocol/libraries/math/WadRayMath.sol|WadRayMath', 'declaringContract': 'WadRayMath', 'method': {'name': 'rayToWad', 'paramNames': ['a'], 'fullArgs': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'WadRayMath'}}, '0xf196e50069': {'canonicalId': 'contracts/protocol/libraries/math/WadRayMath.sol|WadRayMath', 'declaringContract': 'WadRayMath', 'method': {'name': 'wadToRay', 'paramNames': ['a'], 'fullArgs': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'WadRayMath'}}, '0xf196e5006a': {'canonicalId': 'contracts/protocol/pool/Pool.sol|Pool', 'declaringContract': 'Pool', 'method': {'name': '_onlyPoolConfigurator', 'paramNames': [], 'fullArgs': [], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': False, 'contractName': 'Pool'}}, '0xf196e5006b': {'canonicalId': 'contracts/protocol/pool/Pool.sol|Pool', 'declaringContract': 'Pool', 'method': {'name': '_onlyBridge', 'paramNames': [], 'fullArgs': [], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': False, 'contractName': 'Pool'}}, '0xf196e5006c': {'canonicalId': 'contracts/protocol/pool/Pool.sol|Pool', 'declaringContract': 'Pool', 'method': {'name': 'getRevision', 'paramNames': [], 'fullArgs': [], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': False, 'contractName': 'Pool'}}, '0xf196e5006d': {'canonicalId': 'contracts/protocol/pool/Pool.sol|Pool', 'declaringContract': 'Pool', 'method': {'name': '_addReserveToList', 'paramNames': ['asset'], 'fullArgs': [{'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': False, 'contractName': 'Pool'}}}}
Found library contract {'name': 'EModeLogic', 'original_file': 'contracts/protocol/libraries/logic/EModeLogic.sol', 'lang': 'Solidity', 'file': 'Certora/harness/PoolHarness.sol', 'address': '00000000ce4604a0000000000000000000000040', 'methods': [{'name': 'executeSetUserEMode', 'paramNames': ['reserves', 'reservesList', 'eModeCategories', 'usersEModeCategory', 'userConfig', 'params'], 'fullArgs': [{'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'address', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'mappingValueType': {'primitiveName': 'address', 'type': 'Primitive'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint8', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'EModeCategory', 'structMembers': [{'name': 'ltv', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationThreshold', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationBonus', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'priceSource', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'label', 'type': {'type': 'StringType'}}], 'containingContract': 'DataTypes', 'astId': 289, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.EModeCategory'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'address', 'type': 'Primitive'}, 'mappingValueType': {'primitiveName': 'uint8', 'type': 'Primitive'}}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ExecuteSetUserEModeParams', 'structMembers': [{'name': 'reservesCount', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'oracle', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'categoryId', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 419, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ExecuteSetUserEModeParams'}, 'location': 'memory'}], 'returns': [], 'sighash': '5d5dc313', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'external', 'isLibrary': True, 'contractName': 'EModeLogic'}], 'storageLayout': {'storage': [], 'types': None}, 'immutables': [], 'internalFunctions': {'0xf196e50000': {'canonicalId': 'contracts/protocol/pool/Pool.sol|PoolHarness', 'declaringContract': 'PoolHarness', 'method': {'name': 'MAX_NUMBER_RESERVES', 'paramNames': [], 'fullArgs': [], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': 'f8119d51', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'public', 'isLibrary': False, 'contractName': 'PoolHarness'}}, '0xf196e50001': {'canonicalId': 'contracts/protocol/pool/Pool.sol|PoolHarness', 'declaringContract': 'PoolHarness', 'method': {'name': 'BRIDGE_PROTOCOL_FEE', 'paramNames': [], 'fullArgs': [], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '272d9072', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'public', 'isLibrary': False, 'contractName': 'PoolHarness'}}, '0xf196e50002': {'canonicalId': 'contracts/protocol/pool/Pool.sol|PoolHarness', 'declaringContract': 'PoolHarness', 'method': {'name': 'FLASHLOAN_PREMIUM_TOTAL', 'paramNames': [], 'fullArgs': [], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '074b2e43', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'public', 'isLibrary': False, 'contractName': 'PoolHarness'}}, '0xf196e50003': {'canonicalId': 'contracts/protocol/pool/Pool.sol|PoolHarness', 'declaringContract': 'PoolHarness', 'method': {'name': 'FLASHLOAN_PREMIUM_TO_PROTOCOL', 'paramNames': [], 'fullArgs': [], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '6a99c036', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'public', 'isLibrary': False, 'contractName': 'PoolHarness'}}, '0xf196e50004': {'canonicalId': 'contracts/protocol/pool/Pool.sol|PoolHarness', 'declaringContract': 'PoolHarness', 'method': {'name': 'MAX_STABLE_RATE_BORROW_SIZE_PERCENT', 'paramNames': [], 'fullArgs': [], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': 'e82fec2f', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'public', 'isLibrary': False, 'contractName': 'PoolHarness'}}, '0xf196e50005': {'canonicalId': 'contracts/dependencies/openzeppelin/contracts/Address.sol|Address', 'declaringContract': 'Address', 'method': {'name': 'isContract', 'paramNames': ['account'], 'fullArgs': [{'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'Address'}}, '0xf196e50006': {'canonicalId': 'contracts/dependencies/openzeppelin/contracts/Address.sol|Address', 'declaringContract': 'Address', 'method': {'name': 'sendValue', 'paramNames': ['recipient', 'amount'], 'fullArgs': [{'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'Address'}}, '0xf196e50007': {'canonicalId': 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol|SafeERC20', 'declaringContract': 'SafeERC20', 'method': {'name': 'safeTransfer', 'paramNames': ['token', 'to', 'value'], 'fullArgs': [{'typeDesc': {'type': 'Contract', 'contractName': 'IERC20'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'SafeERC20'}}, '0xf196e50008': {'canonicalId': 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol|SafeERC20', 'declaringContract': 'SafeERC20', 'method': {'name': 'safeTransferFrom', 'paramNames': ['token', 'from', 'to', 'value'], 'fullArgs': [{'typeDesc': {'type': 'Contract', 'contractName': 'IERC20'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'SafeERC20'}}, '0xf196e50009': {'canonicalId': 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol|SafeERC20', 'declaringContract': 'SafeERC20', 'method': {'name': 'safeApprove', 'paramNames': ['token', 'spender', 'value'], 'fullArgs': [{'typeDesc': {'type': 'Contract', 'contractName': 'IERC20'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'SafeERC20'}}, '0xf196e5000a': {'canonicalId': 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol|SafeERC20', 'declaringContract': 'SafeERC20', 'method': {'name': 'callOptionalReturn', 'paramNames': ['token', 'data'], 'fullArgs': [{'typeDesc': {'type': 'Contract', 'contractName': 'IERC20'}, 'location': 'stack'}, {'typeDesc': {'type': 'PackedBytes'}, 'location': 'memory'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'private', 'isLibrary': True, 'contractName': 'SafeERC20'}}, '0xf196e5000b': {'canonicalId': 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol|VersionedInitializable', 'declaringContract': 'VersionedInitializable', 'method': {'name': 'isConstructor', 'paramNames': [], 'fullArgs': [], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'private', 'isLibrary': False, 'contractName': 'VersionedInitializable'}}, '0xf196e5000c': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setLtv', 'paramNames': ['self', 'ltv'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5000d': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getLtv', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5000e': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setLiquidationBonus', 'paramNames': ['self', 'bonus'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5000f': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setLiquidationThreshold', 'paramNames': ['self', 'threshold'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50010': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getLiquidationThreshold', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50011': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getLiquidationBonus', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'storage'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50012': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setDecimals', 'paramNames': ['self', 'decimals'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50013': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getDecimals', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50014': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setActive', 'paramNames': ['self', 'active'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50015': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getActive', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50016': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setFrozen', 'paramNames': ['self', 'frozen'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50017': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getFrozen', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50018': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setPaused', 'paramNames': ['self', 'paused'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50019': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getPaused', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5001a': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setBorrowableInIsolation', 'paramNames': ['self', 'borrowable'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5001b': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getBorrowableInIsolation', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5001c': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getLiquidationProtocolFee', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5001d': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setUnbackedMintCap', 'paramNames': ['self', 'unbackedMintCap'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5001e': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getUnbackedMintCap', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5001f': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setEModeCategory', 'paramNames': ['self', 'category'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50020': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getEModeCategory', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50021': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getFlags', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50022': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getParams', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50023': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setDebtCeiling', 'paramNames': ['self', 'ceiling'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50024': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getDebtCeiling', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50025': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setLiquidationProtocolFee', 'paramNames': ['self', 'liquidationProtocolFee'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50026': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setStableRateBorrowingEnabled', 'paramNames': ['self', 'enabled'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50027': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getBorrowingEnabled', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50028': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setBorrowingEnabled', 'paramNames': ['self', 'enabled'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50029': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getStableRateBorrowingEnabled', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5002a': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setReserveFactor', 'paramNames': ['self', 'reserveFactor'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5002b': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getReserveFactor', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5002c': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setBorrowCap', 'paramNames': ['self', 'borrowCap'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5002d': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getBorrowCap', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5002e': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setSupplyCap', 'paramNames': ['self', 'supplyCap'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5002f': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getSupplyCap', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50030': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getCaps', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50031': {'canonicalId': 'contracts/protocol/libraries/configuration/UserConfiguration.sol|UserConfiguration', 'declaringContract': 'UserConfiguration', 'method': {'name': 'setBorrowing', 'paramNames': ['self', 'reserveIndex', 'borrowing'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'storage'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'UserConfiguration'}}, '0xf196e50032': {'canonicalId': 'contracts/protocol/libraries/configuration/UserConfiguration.sol|UserConfiguration', 'declaringContract': 'UserConfiguration', 'method': {'name': 'setUsingAsCollateral', 'paramNames': ['self', 'reserveIndex', 'usingAsCollateral'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'storage'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'UserConfiguration'}}, '0xf196e50033': {'canonicalId': 'contracts/protocol/libraries/configuration/UserConfiguration.sol|UserConfiguration', 'declaringContract': 'UserConfiguration', 'method': {'name': 'isUsingAsCollateral', 'paramNames': ['self', 'reserveIndex'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'UserConfiguration'}}, '0xf196e50034': {'canonicalId': 'contracts/protocol/libraries/configuration/UserConfiguration.sol|UserConfiguration', 'declaringContract': 'UserConfiguration', 'method': {'name': 'isUsingAsCollateralOrBorrowing', 'paramNames': ['self', 'reserveIndex'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'UserConfiguration'}}, '0xf196e50035': {'canonicalId': 'contracts/protocol/libraries/configuration/UserConfiguration.sol|UserConfiguration', 'declaringContract': 'UserConfiguration', 'method': {'name': 'isBorrowing', 'paramNames': ['self', 'reserveIndex'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'UserConfiguration'}}, '0xf196e50036': {'canonicalId': 'contracts/protocol/libraries/configuration/UserConfiguration.sol|UserConfiguration', 'declaringContract': 'UserConfiguration', 'method': {'name': 'isUsingAsCollateralOne', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'UserConfiguration'}}, '0xf196e50037': {'canonicalId': 'contracts/protocol/libraries/configuration/UserConfiguration.sol|UserConfiguration', 'declaringContract': 'UserConfiguration', 'method': {'name': 'isUsingAsCollateralAny', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'UserConfiguration'}}, '0xf196e50038': {'canonicalId': 'contracts/protocol/libraries/configuration/UserConfiguration.sol|UserConfiguration', 'declaringContract': 'UserConfiguration', 'method': {'name': 'isBorrowingAny', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'UserConfiguration'}}, '0xf196e50039': {'canonicalId': 'contracts/protocol/libraries/configuration/UserConfiguration.sol|UserConfiguration', 'declaringContract': 'UserConfiguration', 'method': {'name': 'isEmpty', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'UserConfiguration'}}, '0xf196e5003a': {'canonicalId': 'contracts/protocol/libraries/configuration/UserConfiguration.sol|UserConfiguration', 'declaringContract': 'UserConfiguration', 'method': {'name': 'getIsolationModeState', 'paramNames': ['self', 'reservesData', 'reservesList'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'address', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'mappingValueType': {'primitiveName': 'address', 'type': 'Primitive'}}, 'location': 'storage'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'UserConfiguration'}}, '0xf196e5003b': {'canonicalId': 'contracts/protocol/libraries/configuration/UserConfiguration.sol|UserConfiguration', 'declaringContract': 'UserConfiguration', 'method': {'name': '_getFirstAssetAsCollateralId', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'UserConfiguration'}}, '0xf196e5003c': {'canonicalId': 'contracts/protocol/libraries/helpers/Helpers.sol|Helpers', 'declaringContract': 'Helpers', 'method': {'name': 'getUserCurrentDebt', 'paramNames': ['user', 'reserve'], 'fullArgs': [{'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'Helpers'}}, '0xf196e5003d': {'canonicalId': 'contracts/protocol/libraries/helpers/Helpers.sol|Helpers', 'declaringContract': 'Helpers', 'method': {'name': 'getUserCurrentDebtMemory', 'paramNames': ['user', 'reserve'], 'fullArgs': [{'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'Helpers'}}, '0xf196e5003e': {'canonicalId': 'contracts/protocol/libraries/helpers/Helpers.sol|Helpers', 'declaringContract': 'Helpers', 'method': {'name': 'castUint128', 'paramNames': ['input'], 'fullArgs': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint128', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'Helpers'}}, '0xf196e5003f': {'canonicalId': 'contracts/protocol/libraries/logic/BorrowLogic.sol|BorrowLogic', 'declaringContract': 'BorrowLogic', 'method': {'name': 'executeBorrow', 'paramNames': ['reserves', 'reservesList', 'eModeCategories', 'userConfig', 'params'], 'fullArgs': [{'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'address', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'mappingValueType': {'primitiveName': 'address', 'type': 'Primitive'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint8', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'EModeCategory', 'structMembers': [{'name': 'ltv', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationThreshold', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationBonus', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'priceSource', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'label', 'type': {'type': 'StringType'}}], 'containingContract': 'DataTypes', 'astId': 289, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.EModeCategory'}}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ExecuteBorrowParams', 'structMembers': [{'name': 'asset', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'user', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'onBehalfOf', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'amount', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'interestRateMode', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'referralCode', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'releaseUnderlying', 'type': {'primitiveName': 'bool', 'type': 'Primitive'}}, {'name': 'maxStableRateBorrowSizePercent', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reservesCount', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'oracle', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'userEModeCategory', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'priceOracleSentinel', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 388, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ExecuteBorrowParams'}, 'location': 'memory'}], 'returns': [], 'sighash': '1e6473f9', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'public', 'isLibrary': True, 'contractName': 'BorrowLogic'}}, '0xf196e50040': {'canonicalId': 'contracts/protocol/libraries/logic/GenericLogic.sol|GenericLogic', 'declaringContract': 'GenericLogic', 'method': {'name': 'calculateUserAccountData', 'paramNames': ['reservesData', 'reserves', 'eModeCategories', 'params'], 'fullArgs': [{'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'address', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'mappingValueType': {'primitiveName': 'address', 'type': 'Primitive'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint8', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'EModeCategory', 'structMembers': [{'name': 'ltv', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationThreshold', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationBonus', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'priceSource', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'label', 'type': {'type': 'StringType'}}], 'containingContract': 'DataTypes', 'astId': 289, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.EModeCategory'}}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'CalculateUserAccountDataParams', 'structMembers': [{'name': 'userConfig', 'type': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}}, {'name': 'reservesCount', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'user', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'oracle', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'userEModeCategory', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 499, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.CalculateUserAccountDataParams'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'GenericLogic'}}, '0xf196e50041': {'canonicalId': 'contracts/protocol/libraries/logic/GenericLogic.sol|GenericLogic', 'declaringContract': 'GenericLogic', 'method': {'name': 'calculateAvailableBorrows', 'paramNames': ['totalCollateralInBaseCurrency', 'totalDebtInBaseCurrency', 'ltv'], 'fullArgs': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'GenericLogic'}}, '0xf196e50042': {'canonicalId': 'contracts/protocol/libraries/logic/IsolationModeLogic.sol|IsolationModeLogic', 'declaringContract': 'IsolationModeLogic', 'method': {'name': 'updateIsolatedDebtIfIsolated', 'paramNames': ['reserves', 'reservesList', 'userConfig', 'reserveCache', 'repayAmount'], 'fullArgs': [{'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'address', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'mappingValueType': {'primitiveName': 'address', 'type': 'Primitive'}}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'IsolationModeLogic'}}, '0xf196e50043': {'canonicalId': 'contracts/protocol/libraries/logic/LiquidationLogic.sol|LiquidationLogic', 'declaringContract': 'LiquidationLogic', 'method': {'name': '_calculateAvailableCollateralToLiquidate', 'paramNames': ['collateralReserve', 'debtReserveCache', 'collateralAsset', 'debtAsset', 'debtToCover', 'userCollateralBalance', 'liquidationBonus', 'oracle'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'type': 'Contract', 'contractName': 'IPriceOracleGetter'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'LiquidationLogic'}}, '0xf196e50044': {'canonicalId': 'contracts/protocol/libraries/logic/ReserveLogic.sol|ReserveLogic', 'declaringContract': 'ReserveLogic', 'method': {'name': 'getNormalizedIncome', 'paramNames': ['reserve'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveLogic'}}, '0xf196e50045': {'canonicalId': 'contracts/protocol/libraries/logic/ReserveLogic.sol|ReserveLogic', 'declaringContract': 'ReserveLogic', 'method': {'name': 'getNormalizedDebt', 'paramNames': ['reserve'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveLogic'}}, '0xf196e50046': {'canonicalId': 'contracts/protocol/libraries/logic/ReserveLogic.sol|ReserveLogic', 'declaringContract': 'ReserveLogic', 'method': {'name': 'init', 'paramNames': ['reserve', 'aTokenAddress', 'stableDebtTokenAddress', 'variableDebtTokenAddress', 'interestRateStrategyAddress'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveLogic'}}, '0xf196e50047': {'canonicalId': 'contracts/protocol/libraries/logic/ReserveLogic.sol|ReserveLogic', 'declaringContract': 'ReserveLogic', 'method': {'name': 'updateState', 'paramNames': ['reserve', 'reserveCache'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}, 'location': 'memory'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveLogic'}}, '0xf196e50048': {'canonicalId': 'contracts/protocol/libraries/logic/ReserveLogic.sol|ReserveLogic', 'declaringContract': 'ReserveLogic', 'method': {'name': 'cumulateToLiquidityIndex', 'paramNames': ['reserve', 'totalLiquidity', 'amount'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveLogic'}}, '0xf196e50049': {'canonicalId': 'contracts/protocol/libraries/logic/ReserveLogic.sol|ReserveLogic', 'declaringContract': 'ReserveLogic', 'method': {'name': 'updateInterestRates', 'paramNames': ['reserve', 'reserveCache', 'reserveAddress', 'liquidityAdded', 'liquidityTaken'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveLogic'}}, '0xf196e5004a': {'canonicalId': 'contracts/protocol/libraries/logic/ReserveLogic.sol|ReserveLogic', 'declaringContract': 'ReserveLogic', 'method': {'name': '_accrueToTreasury', 'paramNames': ['reserve', 'reserveCache'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}, 'location': 'memory'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveLogic'}}, '0xf196e5004b': {'canonicalId': 'contracts/protocol/libraries/logic/ReserveLogic.sol|ReserveLogic', 'declaringContract': 'ReserveLogic', 'method': {'name': '_updateIndexes', 'paramNames': ['reserve', 'reserveCache'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}, 'location': 'memory'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveLogic'}}, '0xf196e5004c': {'canonicalId': 'contracts/protocol/libraries/logic/ReserveLogic.sol|ReserveLogic', 'declaringContract': 'ReserveLogic', 'method': {'name': 'cache', 'paramNames': ['reserve'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}], 'returns': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}, 'location': 'memory'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveLogic'}}, '0xf196e5004d': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateSupply', 'paramNames': ['reserveCache', 'amount'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e5004e': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateWithdraw', 'paramNames': ['reserveCache', 'amount', 'userBalance'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e5004f': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateSwapRateMode', 'paramNames': ['reserve', 'reserveCache', 'userConfig', 'stableDebt', 'variableDebt', 'currentRateMode'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}, 'location': 'memory'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'storage'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'type': 'UserDefinedEnum', 'enumName': 'InterestRateMode', 'enumMembers': [{'name': 'NONE'}, {'name': 'STABLE'}, {'name': 'VARIABLE'}], 'containingContract': 'DataTypes', 'astId': 293, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.InterestRateMode'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e50050': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateBorrow', 'paramNames': ['reservesData', 'reserves', 'eModeCategories', 'params'], 'fullArgs': [{'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'address', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'mappingValueType': {'primitiveName': 'address', 'type': 'Primitive'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint8', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'EModeCategory', 'structMembers': [{'name': 'ltv', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationThreshold', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationBonus', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'priceSource', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'label', 'type': {'type': 'StringType'}}], 'containingContract': 'DataTypes', 'astId': 289, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.EModeCategory'}}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ValidateBorrowParams', 'structMembers': [{'name': 'reserveCache', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}}, {'name': 'userConfig', 'type': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}}, {'name': 'asset', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'userAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'amount', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'interestRateMode', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'maxStableLoanPercent', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reservesCount', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'oracle', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'userEModeCategory', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'priceOracleSentinel', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'isolationModeActive', 'type': {'primitiveName': 'bool', 'type': 'Primitive'}}, {'name': 'isolationModeCollateralAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'isolationModeDebtCeiling', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 530, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ValidateBorrowParams'}, 'location': 'memory'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e50051': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateRepay', 'paramNames': ['reserveCache', 'amountSent', 'rateMode', 'onBehalfOf', 'stableDebt', 'variableDebt'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'type': 'UserDefinedEnum', 'enumName': 'InterestRateMode', 'enumMembers': [{'name': 'NONE'}, {'name': 'STABLE'}, {'name': 'VARIABLE'}], 'containingContract': 'DataTypes', 'astId': 293, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.InterestRateMode'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e50052': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateRebalanceStableBorrowRate', 'paramNames': ['reserve', 'reserveCache', 'reserveAddress', 'stableDebtToken', 'variableDebtToken', 'aTokenAddress'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'type': 'Contract', 'contractName': 'IERC20'}, 'location': 'stack'}, {'typeDesc': {'type': 'Contract', 'contractName': 'IERC20'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e50053': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateSetUseReserveAsCollateral', 'paramNames': ['reserveCache', 'userBalance'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e50054': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateFlashloan', 'paramNames': ['assets', 'amounts', 'reservesData'], 'fullArgs': [{'typeDesc': {'type': 'Array', 'dynamicArrayBaseType': {'primitiveName': 'address', 'type': 'Primitive'}}, 'location': 'memory'}, {'typeDesc': {'type': 'Array', 'dynamicArrayBaseType': {'primitiveName': 'uint256', 'type': 'Primitive'}}, 'location': 'memory'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'address', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}}, 'location': 'storage'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e50055': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateFlashloanSimple', 'paramNames': ['reserve'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e50056': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateLiquidationCall', 'paramNames': ['userConfig', 'collateralReserve', 'params'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ValidateLiquidationCallParams', 'structMembers': [{'name': 'debtReserveCache', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}}, {'name': 'totalDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'healthFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'priceOracleSentinel', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 540, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ValidateLiquidationCallParams'}, 'location': 'memory'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e50057': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateHealthFactor', 'paramNames': ['reservesData', 'reserves', 'eModeCategories', 'userConfig', 'user', 'userEModeCategory', 'reservesCount', 'oracle'], 'fullArgs': [{'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'address', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'mappingValueType': {'primitiveName': 'address', 'type': 'Primitive'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint8', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'EModeCategory', 'structMembers': [{'name': 'ltv', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationThreshold', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationBonus', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'priceSource', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'label', 'type': {'type': 'StringType'}}], 'containingContract': 'DataTypes', 'astId': 289, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.EModeCategory'}}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint8', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e50058': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateHFAndLtv', 'paramNames': ['reservesData', 'reserves', 'eModeCategories', 'userConfig', 'asset', 'from', 'reservesCount', 'oracle', 'userEModeCategory'], 'fullArgs': [{'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'address', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'mappingValueType': {'primitiveName': 'address', 'type': 'Primitive'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint8', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'EModeCategory', 'structMembers': [{'name': 'ltv', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationThreshold', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationBonus', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'priceSource', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'label', 'type': {'type': 'StringType'}}], 'containingContract': 'DataTypes', 'astId': 289, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.EModeCategory'}}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint8', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e50059': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateTransfer', 'paramNames': ['reserve'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e5005a': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateDropReserve', 'paramNames': ['reserve'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e5005b': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateSetUserEMode', 'paramNames': ['reservesData', 'reserves', 'eModeCategories', 'userConfig', 'reservesCount', 'categoryId'], 'fullArgs': [{'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'address', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'mappingValueType': {'primitiveName': 'address', 'type': 'Primitive'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint8', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'EModeCategory', 'structMembers': [{'name': 'ltv', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationThreshold', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationBonus', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'priceSource', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'label', 'type': {'type': 'StringType'}}], 'containingContract': 'DataTypes', 'astId': 289, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.EModeCategory'}}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint8', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e5005c': {'canonicalId': 'contracts/protocol/libraries/math/MathUtils.sol|MathUtils', 'declaringContract': 'MathUtils', 'method': {'name': 'calculateLinearInterest', 'paramNames': ['rate', 'lastUpdateTimestamp'], 'fullArgs': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint40', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'MathUtils'}}, '0xf196e5005d': {'canonicalId': 'contracts/protocol/libraries/math/MathUtils.sol|MathUtils', 'declaringContract': 'MathUtils', 'method': {'name': 'calculateCompoundedInterest', 'paramNames': ['rate', 'lastUpdateTimestamp', 'currentTimestamp'], 'fullArgs': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint40', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'MathUtils'}}, '0xf196e5005e': {'canonicalId': 'contracts/protocol/libraries/math/MathUtils.sol|MathUtils', 'declaringContract': 'MathUtils', 'method': {'name': 'calculateCompoundedInterest', 'paramNames': ['rate', 'lastUpdateTimestamp'], 'fullArgs': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint40', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'MathUtils'}}, '0xf196e5005f': {'canonicalId': 'contracts/protocol/libraries/math/PercentageMath.sol|PercentageMath', 'declaringContract': 'PercentageMath', 'method': {'name': 'percentMul', 'paramNames': ['value', 'percentage'], 'fullArgs': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'PercentageMath'}}, '0xf196e50060': {'canonicalId': 'contracts/protocol/libraries/math/PercentageMath.sol|PercentageMath', 'declaringContract': 'PercentageMath', 'method': {'name': 'percentDiv', 'paramNames': ['value', 'percentage'], 'fullArgs': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'PercentageMath'}}, '0xf196e50061': {'canonicalId': 'contracts/protocol/libraries/math/WadRayMath.sol|WadRayMath', 'declaringContract': 'WadRayMath', 'method': {'name': 'wad', 'paramNames': [], 'fullArgs': [], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'WadRayMath'}}, '0xf196e50062': {'canonicalId': 'contracts/protocol/libraries/math/WadRayMath.sol|WadRayMath', 'declaringContract': 'WadRayMath', 'method': {'name': 'halfRay', 'paramNames': [], 'fullArgs': [], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'WadRayMath'}}, '0xf196e50063': {'canonicalId': 'contracts/protocol/libraries/math/WadRayMath.sol|WadRayMath', 'declaringContract': 'WadRayMath', 'method': {'name': 'wadDiv', 'paramNames': ['a', 'b'], 'fullArgs': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'WadRayMath'}}, '0xf196e50064': {'canonicalId': 'contracts/protocol/libraries/math/WadRayMath.sol|WadRayMath', 'declaringContract': 'WadRayMath', 'method': {'name': 'halfWad', 'paramNames': [], 'fullArgs': [], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'WadRayMath'}}, '0xf196e50065': {'canonicalId': 'contracts/protocol/libraries/math/WadRayMath.sol|WadRayMath', 'declaringContract': 'WadRayMath', 'method': {'name': 'wadMul', 'paramNames': ['a', 'b'], 'fullArgs': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'WadRayMath'}}, '0xf196e50066': {'canonicalId': 'contracts/protocol/libraries/math/WadRayMath.sol|WadRayMath', 'declaringContract': 'WadRayMath', 'method': {'name': 'rayMul', 'paramNames': ['a', 'b'], 'fullArgs': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'WadRayMath'}}, '0xf196e50067': {'canonicalId': 'contracts/protocol/libraries/math/WadRayMath.sol|WadRayMath', 'declaringContract': 'WadRayMath', 'method': {'name': 'rayDiv', 'paramNames': ['a', 'b'], 'fullArgs': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'WadRayMath'}}, '0xf196e50068': {'canonicalId': 'contracts/protocol/libraries/math/WadRayMath.sol|WadRayMath', 'declaringContract': 'WadRayMath', 'method': {'name': 'rayToWad', 'paramNames': ['a'], 'fullArgs': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'WadRayMath'}}, '0xf196e50069': {'canonicalId': 'contracts/protocol/libraries/math/WadRayMath.sol|WadRayMath', 'declaringContract': 'WadRayMath', 'method': {'name': 'wadToRay', 'paramNames': ['a'], 'fullArgs': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'WadRayMath'}}, '0xf196e5006a': {'canonicalId': 'contracts/protocol/pool/Pool.sol|Pool', 'declaringContract': 'Pool', 'method': {'name': '_onlyPoolConfigurator', 'paramNames': [], 'fullArgs': [], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': False, 'contractName': 'Pool'}}, '0xf196e5006b': {'canonicalId': 'contracts/protocol/pool/Pool.sol|Pool', 'declaringContract': 'Pool', 'method': {'name': '_onlyBridge', 'paramNames': [], 'fullArgs': [], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': False, 'contractName': 'Pool'}}, '0xf196e5006c': {'canonicalId': 'contracts/protocol/pool/Pool.sol|Pool', 'declaringContract': 'Pool', 'method': {'name': 'getRevision', 'paramNames': [], 'fullArgs': [], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': False, 'contractName': 'Pool'}}, '0xf196e5006d': {'canonicalId': 'contracts/protocol/pool/Pool.sol|Pool', 'declaringContract': 'Pool', 'method': {'name': '_addReserveToList', 'paramNames': ['asset'], 'fullArgs': [{'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': False, 'contractName': 'Pool'}}}}
Found library contract {'name': 'LiquidationLogic', 'original_file': 'contracts/protocol/libraries/logic/LiquidationLogic.sol', 'lang': 'Solidity', 'file': 'Certora/harness/PoolHarness.sol', 'address': '00000000ce4604a0000000000000000000000044', 'methods': [{'name': 'MAX_LIQUIDATION_CLOSE_FACTOR', 'paramNames': [], 'fullArgs': [], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': 'd2467544', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'external', 'isLibrary': True, 'contractName': 'LiquidationLogic'}, {'name': 'executeLiquidationCall', 'paramNames': ['reserves', 'usersConfig', 'reservesList', 'eModeCategories', 'params'], 'fullArgs': [{'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'address', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'address', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'mappingValueType': {'primitiveName': 'address', 'type': 'Primitive'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint8', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'EModeCategory', 'structMembers': [{'name': 'ltv', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationThreshold', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationBonus', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'priceSource', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'label', 'type': {'type': 'StringType'}}], 'containingContract': 'DataTypes', 'astId': 289, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.EModeCategory'}}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ExecuteLiquidationCallParams', 'structMembers': [{'name': 'reservesCount', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'debtToCover', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'collateralAsset', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'debtAsset', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'user', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'receiveAToken', 'type': {'primitiveName': 'bool', 'type': 'Primitive'}}, {'name': 'priceOracle', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'userEModeCategory', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'priceOracleSentinel', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 354, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ExecuteLiquidationCallParams'}, 'location': 'memory'}], 'returns': [], 'sighash': 'bdcb2b8d', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'external', 'isLibrary': True, 'contractName': 'LiquidationLogic'}, {'name': 'CLOSE_FACTOR_HF_THRESHOLD', 'paramNames': [], 'fullArgs': [], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': 'a18964a5', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'external', 'isLibrary': True, 'contractName': 'LiquidationLogic'}], 'storageLayout': {'storage': [], 'types': None}, 'immutables': [], 'internalFunctions': {'0xf196e50000': {'canonicalId': 'contracts/protocol/pool/Pool.sol|PoolHarness', 'declaringContract': 'PoolHarness', 'method': {'name': 'MAX_NUMBER_RESERVES', 'paramNames': [], 'fullArgs': [], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': 'f8119d51', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'public', 'isLibrary': False, 'contractName': 'PoolHarness'}}, '0xf196e50001': {'canonicalId': 'contracts/protocol/pool/Pool.sol|PoolHarness', 'declaringContract': 'PoolHarness', 'method': {'name': 'BRIDGE_PROTOCOL_FEE', 'paramNames': [], 'fullArgs': [], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '272d9072', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'public', 'isLibrary': False, 'contractName': 'PoolHarness'}}, '0xf196e50002': {'canonicalId': 'contracts/protocol/pool/Pool.sol|PoolHarness', 'declaringContract': 'PoolHarness', 'method': {'name': 'FLASHLOAN_PREMIUM_TOTAL', 'paramNames': [], 'fullArgs': [], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '074b2e43', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'public', 'isLibrary': False, 'contractName': 'PoolHarness'}}, '0xf196e50003': {'canonicalId': 'contracts/protocol/pool/Pool.sol|PoolHarness', 'declaringContract': 'PoolHarness', 'method': {'name': 'FLASHLOAN_PREMIUM_TO_PROTOCOL', 'paramNames': [], 'fullArgs': [], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '6a99c036', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'public', 'isLibrary': False, 'contractName': 'PoolHarness'}}, '0xf196e50004': {'canonicalId': 'contracts/protocol/pool/Pool.sol|PoolHarness', 'declaringContract': 'PoolHarness', 'method': {'name': 'MAX_STABLE_RATE_BORROW_SIZE_PERCENT', 'paramNames': [], 'fullArgs': [], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': 'e82fec2f', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'public', 'isLibrary': False, 'contractName': 'PoolHarness'}}, '0xf196e50005': {'canonicalId': 'contracts/dependencies/openzeppelin/contracts/Address.sol|Address', 'declaringContract': 'Address', 'method': {'name': 'isContract', 'paramNames': ['account'], 'fullArgs': [{'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'Address'}}, '0xf196e50006': {'canonicalId': 'contracts/dependencies/openzeppelin/contracts/Address.sol|Address', 'declaringContract': 'Address', 'method': {'name': 'sendValue', 'paramNames': ['recipient', 'amount'], 'fullArgs': [{'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'Address'}}, '0xf196e50007': {'canonicalId': 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol|SafeERC20', 'declaringContract': 'SafeERC20', 'method': {'name': 'safeTransfer', 'paramNames': ['token', 'to', 'value'], 'fullArgs': [{'typeDesc': {'type': 'Contract', 'contractName': 'IERC20'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'SafeERC20'}}, '0xf196e50008': {'canonicalId': 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol|SafeERC20', 'declaringContract': 'SafeERC20', 'method': {'name': 'safeTransferFrom', 'paramNames': ['token', 'from', 'to', 'value'], 'fullArgs': [{'typeDesc': {'type': 'Contract', 'contractName': 'IERC20'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'SafeERC20'}}, '0xf196e50009': {'canonicalId': 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol|SafeERC20', 'declaringContract': 'SafeERC20', 'method': {'name': 'safeApprove', 'paramNames': ['token', 'spender', 'value'], 'fullArgs': [{'typeDesc': {'type': 'Contract', 'contractName': 'IERC20'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'SafeERC20'}}, '0xf196e5000a': {'canonicalId': 'contracts/dependencies/openzeppelin/contracts/SafeERC20.sol|SafeERC20', 'declaringContract': 'SafeERC20', 'method': {'name': 'callOptionalReturn', 'paramNames': ['token', 'data'], 'fullArgs': [{'typeDesc': {'type': 'Contract', 'contractName': 'IERC20'}, 'location': 'stack'}, {'typeDesc': {'type': 'PackedBytes'}, 'location': 'memory'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'private', 'isLibrary': True, 'contractName': 'SafeERC20'}}, '0xf196e5000b': {'canonicalId': 'contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol|VersionedInitializable', 'declaringContract': 'VersionedInitializable', 'method': {'name': 'isConstructor', 'paramNames': [], 'fullArgs': [], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'private', 'isLibrary': False, 'contractName': 'VersionedInitializable'}}, '0xf196e5000c': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setLtv', 'paramNames': ['self', 'ltv'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5000d': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getLtv', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5000e': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setLiquidationBonus', 'paramNames': ['self', 'bonus'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5000f': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setLiquidationThreshold', 'paramNames': ['self', 'threshold'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50010': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getLiquidationThreshold', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50011': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getLiquidationBonus', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'storage'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50012': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setDecimals', 'paramNames': ['self', 'decimals'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50013': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getDecimals', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50014': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setActive', 'paramNames': ['self', 'active'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50015': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getActive', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50016': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setFrozen', 'paramNames': ['self', 'frozen'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50017': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getFrozen', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50018': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setPaused', 'paramNames': ['self', 'paused'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50019': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getPaused', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5001a': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setBorrowableInIsolation', 'paramNames': ['self', 'borrowable'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5001b': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getBorrowableInIsolation', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5001c': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getLiquidationProtocolFee', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5001d': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setUnbackedMintCap', 'paramNames': ['self', 'unbackedMintCap'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5001e': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getUnbackedMintCap', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5001f': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setEModeCategory', 'paramNames': ['self', 'category'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50020': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getEModeCategory', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50021': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getFlags', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50022': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getParams', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50023': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setDebtCeiling', 'paramNames': ['self', 'ceiling'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50024': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getDebtCeiling', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50025': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setLiquidationProtocolFee', 'paramNames': ['self', 'liquidationProtocolFee'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50026': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setStableRateBorrowingEnabled', 'paramNames': ['self', 'enabled'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50027': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getBorrowingEnabled', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50028': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setBorrowingEnabled', 'paramNames': ['self', 'enabled'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50029': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getStableRateBorrowingEnabled', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5002a': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setReserveFactor', 'paramNames': ['self', 'reserveFactor'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5002b': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getReserveFactor', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5002c': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setBorrowCap', 'paramNames': ['self', 'borrowCap'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5002d': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getBorrowCap', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5002e': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'setSupplyCap', 'paramNames': ['self', 'supplyCap'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e5002f': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getSupplyCap', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50030': {'canonicalId': 'contracts/protocol/libraries/configuration/ReserveConfiguration.sol|ReserveConfiguration', 'declaringContract': 'ReserveConfiguration', 'method': {'name': 'getCaps', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveConfiguration'}}, '0xf196e50031': {'canonicalId': 'contracts/protocol/libraries/configuration/UserConfiguration.sol|UserConfiguration', 'declaringContract': 'UserConfiguration', 'method': {'name': 'setBorrowing', 'paramNames': ['self', 'reserveIndex', 'borrowing'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'storage'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'UserConfiguration'}}, '0xf196e50032': {'canonicalId': 'contracts/protocol/libraries/configuration/UserConfiguration.sol|UserConfiguration', 'declaringContract': 'UserConfiguration', 'method': {'name': 'setUsingAsCollateral', 'paramNames': ['self', 'reserveIndex', 'usingAsCollateral'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'storage'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'UserConfiguration'}}, '0xf196e50033': {'canonicalId': 'contracts/protocol/libraries/configuration/UserConfiguration.sol|UserConfiguration', 'declaringContract': 'UserConfiguration', 'method': {'name': 'isUsingAsCollateral', 'paramNames': ['self', 'reserveIndex'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'UserConfiguration'}}, '0xf196e50034': {'canonicalId': 'contracts/protocol/libraries/configuration/UserConfiguration.sol|UserConfiguration', 'declaringContract': 'UserConfiguration', 'method': {'name': 'isUsingAsCollateralOrBorrowing', 'paramNames': ['self', 'reserveIndex'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'UserConfiguration'}}, '0xf196e50035': {'canonicalId': 'contracts/protocol/libraries/configuration/UserConfiguration.sol|UserConfiguration', 'declaringContract': 'UserConfiguration', 'method': {'name': 'isBorrowing', 'paramNames': ['self', 'reserveIndex'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'UserConfiguration'}}, '0xf196e50036': {'canonicalId': 'contracts/protocol/libraries/configuration/UserConfiguration.sol|UserConfiguration', 'declaringContract': 'UserConfiguration', 'method': {'name': 'isUsingAsCollateralOne', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'UserConfiguration'}}, '0xf196e50037': {'canonicalId': 'contracts/protocol/libraries/configuration/UserConfiguration.sol|UserConfiguration', 'declaringContract': 'UserConfiguration', 'method': {'name': 'isUsingAsCollateralAny', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'UserConfiguration'}}, '0xf196e50038': {'canonicalId': 'contracts/protocol/libraries/configuration/UserConfiguration.sol|UserConfiguration', 'declaringContract': 'UserConfiguration', 'method': {'name': 'isBorrowingAny', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'UserConfiguration'}}, '0xf196e50039': {'canonicalId': 'contracts/protocol/libraries/configuration/UserConfiguration.sol|UserConfiguration', 'declaringContract': 'UserConfiguration', 'method': {'name': 'isEmpty', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'UserConfiguration'}}, '0xf196e5003a': {'canonicalId': 'contracts/protocol/libraries/configuration/UserConfiguration.sol|UserConfiguration', 'declaringContract': 'UserConfiguration', 'method': {'name': 'getIsolationModeState', 'paramNames': ['self', 'reservesData', 'reservesList'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'address', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'mappingValueType': {'primitiveName': 'address', 'type': 'Primitive'}}, 'location': 'storage'}], 'returns': [{'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'UserConfiguration'}}, '0xf196e5003b': {'canonicalId': 'contracts/protocol/libraries/configuration/UserConfiguration.sol|UserConfiguration', 'declaringContract': 'UserConfiguration', 'method': {'name': '_getFirstAssetAsCollateralId', 'paramNames': ['self'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'UserConfiguration'}}, '0xf196e5003c': {'canonicalId': 'contracts/protocol/libraries/helpers/Helpers.sol|Helpers', 'declaringContract': 'Helpers', 'method': {'name': 'getUserCurrentDebt', 'paramNames': ['user', 'reserve'], 'fullArgs': [{'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'Helpers'}}, '0xf196e5003d': {'canonicalId': 'contracts/protocol/libraries/helpers/Helpers.sol|Helpers', 'declaringContract': 'Helpers', 'method': {'name': 'getUserCurrentDebtMemory', 'paramNames': ['user', 'reserve'], 'fullArgs': [{'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'Helpers'}}, '0xf196e5003e': {'canonicalId': 'contracts/protocol/libraries/helpers/Helpers.sol|Helpers', 'declaringContract': 'Helpers', 'method': {'name': 'castUint128', 'paramNames': ['input'], 'fullArgs': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint128', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'Helpers'}}, '0xf196e5003f': {'canonicalId': 'contracts/protocol/libraries/logic/BorrowLogic.sol|BorrowLogic', 'declaringContract': 'BorrowLogic', 'method': {'name': 'executeBorrow', 'paramNames': ['reserves', 'reservesList', 'eModeCategories', 'userConfig', 'params'], 'fullArgs': [{'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'address', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'mappingValueType': {'primitiveName': 'address', 'type': 'Primitive'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint8', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'EModeCategory', 'structMembers': [{'name': 'ltv', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationThreshold', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationBonus', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'priceSource', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'label', 'type': {'type': 'StringType'}}], 'containingContract': 'DataTypes', 'astId': 289, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.EModeCategory'}}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ExecuteBorrowParams', 'structMembers': [{'name': 'asset', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'user', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'onBehalfOf', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'amount', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'interestRateMode', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'referralCode', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'releaseUnderlying', 'type': {'primitiveName': 'bool', 'type': 'Primitive'}}, {'name': 'maxStableRateBorrowSizePercent', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reservesCount', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'oracle', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'userEModeCategory', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'priceOracleSentinel', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 388, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ExecuteBorrowParams'}, 'location': 'memory'}], 'returns': [], 'sighash': '1e6473f9', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'public', 'isLibrary': True, 'contractName': 'BorrowLogic'}}, '0xf196e50040': {'canonicalId': 'contracts/protocol/libraries/logic/GenericLogic.sol|GenericLogic', 'declaringContract': 'GenericLogic', 'method': {'name': 'calculateUserAccountData', 'paramNames': ['reservesData', 'reserves', 'eModeCategories', 'params'], 'fullArgs': [{'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'address', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'mappingValueType': {'primitiveName': 'address', 'type': 'Primitive'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint8', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'EModeCategory', 'structMembers': [{'name': 'ltv', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationThreshold', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationBonus', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'priceSource', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'label', 'type': {'type': 'StringType'}}], 'containingContract': 'DataTypes', 'astId': 289, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.EModeCategory'}}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'CalculateUserAccountDataParams', 'structMembers': [{'name': 'userConfig', 'type': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}}, {'name': 'reservesCount', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'user', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'oracle', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'userEModeCategory', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 499, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.CalculateUserAccountDataParams'}, 'location': 'memory'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'GenericLogic'}}, '0xf196e50041': {'canonicalId': 'contracts/protocol/libraries/logic/GenericLogic.sol|GenericLogic', 'declaringContract': 'GenericLogic', 'method': {'name': 'calculateAvailableBorrows', 'paramNames': ['totalCollateralInBaseCurrency', 'totalDebtInBaseCurrency', 'ltv'], 'fullArgs': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'GenericLogic'}}, '0xf196e50042': {'canonicalId': 'contracts/protocol/libraries/logic/IsolationModeLogic.sol|IsolationModeLogic', 'declaringContract': 'IsolationModeLogic', 'method': {'name': 'updateIsolatedDebtIfIsolated', 'paramNames': ['reserves', 'reservesList', 'userConfig', 'reserveCache', 'repayAmount'], 'fullArgs': [{'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'address', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'mappingValueType': {'primitiveName': 'address', 'type': 'Primitive'}}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'IsolationModeLogic'}}, '0xf196e50043': {'canonicalId': 'contracts/protocol/libraries/logic/LiquidationLogic.sol|LiquidationLogic', 'declaringContract': 'LiquidationLogic', 'method': {'name': '_calculateAvailableCollateralToLiquidate', 'paramNames': ['collateralReserve', 'debtReserveCache', 'collateralAsset', 'debtAsset', 'debtToCover', 'userCollateralBalance', 'liquidationBonus', 'oracle'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'type': 'Contract', 'contractName': 'IPriceOracleGetter'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'LiquidationLogic'}}, '0xf196e50044': {'canonicalId': 'contracts/protocol/libraries/logic/ReserveLogic.sol|ReserveLogic', 'declaringContract': 'ReserveLogic', 'method': {'name': 'getNormalizedIncome', 'paramNames': ['reserve'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveLogic'}}, '0xf196e50045': {'canonicalId': 'contracts/protocol/libraries/logic/ReserveLogic.sol|ReserveLogic', 'declaringContract': 'ReserveLogic', 'method': {'name': 'getNormalizedDebt', 'paramNames': ['reserve'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveLogic'}}, '0xf196e50046': {'canonicalId': 'contracts/protocol/libraries/logic/ReserveLogic.sol|ReserveLogic', 'declaringContract': 'ReserveLogic', 'method': {'name': 'init', 'paramNames': ['reserve', 'aTokenAddress', 'stableDebtTokenAddress', 'variableDebtTokenAddress', 'interestRateStrategyAddress'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveLogic'}}, '0xf196e50047': {'canonicalId': 'contracts/protocol/libraries/logic/ReserveLogic.sol|ReserveLogic', 'declaringContract': 'ReserveLogic', 'method': {'name': 'updateState', 'paramNames': ['reserve', 'reserveCache'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}, 'location': 'memory'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveLogic'}}, '0xf196e50048': {'canonicalId': 'contracts/protocol/libraries/logic/ReserveLogic.sol|ReserveLogic', 'declaringContract': 'ReserveLogic', 'method': {'name': 'cumulateToLiquidityIndex', 'paramNames': ['reserve', 'totalLiquidity', 'amount'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveLogic'}}, '0xf196e50049': {'canonicalId': 'contracts/protocol/libraries/logic/ReserveLogic.sol|ReserveLogic', 'declaringContract': 'ReserveLogic', 'method': {'name': 'updateInterestRates', 'paramNames': ['reserve', 'reserveCache', 'reserveAddress', 'liquidityAdded', 'liquidityTaken'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveLogic'}}, '0xf196e5004a': {'canonicalId': 'contracts/protocol/libraries/logic/ReserveLogic.sol|ReserveLogic', 'declaringContract': 'ReserveLogic', 'method': {'name': '_accrueToTreasury', 'paramNames': ['reserve', 'reserveCache'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}, 'location': 'memory'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveLogic'}}, '0xf196e5004b': {'canonicalId': 'contracts/protocol/libraries/logic/ReserveLogic.sol|ReserveLogic', 'declaringContract': 'ReserveLogic', 'method': {'name': '_updateIndexes', 'paramNames': ['reserve', 'reserveCache'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}, 'location': 'memory'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveLogic'}}, '0xf196e5004c': {'canonicalId': 'contracts/protocol/libraries/logic/ReserveLogic.sol|ReserveLogic', 'declaringContract': 'ReserveLogic', 'method': {'name': 'cache', 'paramNames': ['reserve'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}], 'returns': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}, 'location': 'memory'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ReserveLogic'}}, '0xf196e5004d': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateSupply', 'paramNames': ['reserveCache', 'amount'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e5004e': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateWithdraw', 'paramNames': ['reserveCache', 'amount', 'userBalance'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e5004f': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateSwapRateMode', 'paramNames': ['reserve', 'reserveCache', 'userConfig', 'stableDebt', 'variableDebt', 'currentRateMode'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}, 'location': 'memory'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'storage'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'type': 'UserDefinedEnum', 'enumName': 'InterestRateMode', 'enumMembers': [{'name': 'NONE'}, {'name': 'STABLE'}, {'name': 'VARIABLE'}], 'containingContract': 'DataTypes', 'astId': 293, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.InterestRateMode'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e50050': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateBorrow', 'paramNames': ['reservesData', 'reserves', 'eModeCategories', 'params'], 'fullArgs': [{'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'address', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'mappingValueType': {'primitiveName': 'address', 'type': 'Primitive'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint8', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'EModeCategory', 'structMembers': [{'name': 'ltv', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationThreshold', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationBonus', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'priceSource', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'label', 'type': {'type': 'StringType'}}], 'containingContract': 'DataTypes', 'astId': 289, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.EModeCategory'}}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ValidateBorrowParams', 'structMembers': [{'name': 'reserveCache', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}}, {'name': 'userConfig', 'type': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}}, {'name': 'asset', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'userAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'amount', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'interestRateMode', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'maxStableLoanPercent', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reservesCount', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'oracle', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'userEModeCategory', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'priceOracleSentinel', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'isolationModeActive', 'type': {'primitiveName': 'bool', 'type': 'Primitive'}}, {'name': 'isolationModeCollateralAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'isolationModeDebtCeiling', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 530, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ValidateBorrowParams'}, 'location': 'memory'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e50051': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateRepay', 'paramNames': ['reserveCache', 'amountSent', 'rateMode', 'onBehalfOf', 'stableDebt', 'variableDebt'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'type': 'UserDefinedEnum', 'enumName': 'InterestRateMode', 'enumMembers': [{'name': 'NONE'}, {'name': 'STABLE'}, {'name': 'VARIABLE'}], 'containingContract': 'DataTypes', 'astId': 293, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.InterestRateMode'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e50052': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateRebalanceStableBorrowRate', 'paramNames': ['reserve', 'reserveCache', 'reserveAddress', 'stableDebtToken', 'variableDebtToken', 'aTokenAddress'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'type': 'Contract', 'contractName': 'IERC20'}, 'location': 'stack'}, {'typeDesc': {'type': 'Contract', 'contractName': 'IERC20'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e50053': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateSetUseReserveAsCollateral', 'paramNames': ['reserveCache', 'userBalance'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e50054': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateFlashloan', 'paramNames': ['assets', 'amounts', 'reservesData'], 'fullArgs': [{'typeDesc': {'type': 'Array', 'dynamicArrayBaseType': {'primitiveName': 'address', 'type': 'Primitive'}}, 'location': 'memory'}, {'typeDesc': {'type': 'Array', 'dynamicArrayBaseType': {'primitiveName': 'uint256', 'type': 'Primitive'}}, 'location': 'memory'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'address', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}}, 'location': 'storage'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e50055': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateFlashloanSimple', 'paramNames': ['reserve'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e50056': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateLiquidationCall', 'paramNames': ['userConfig', 'collateralReserve', 'params'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ValidateLiquidationCallParams', 'structMembers': [{'name': 'debtReserveCache', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveCache', 'structMembers': [{'name': 'currScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextScaledVariableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currPrincipalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextAvgStableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextTotalStableDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextLiquidityIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'nextVariableBorrowIndex', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currLiquidityRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'currVariableBorrowRate', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'reserveConfiguration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'reserveLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'stableDebtLastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 335, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveCache'}}, {'name': 'totalDebt', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'healthFactor', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}, {'name': 'priceOracleSentinel', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 540, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ValidateLiquidationCallParams'}, 'location': 'memory'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e50057': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateHealthFactor', 'paramNames': ['reservesData', 'reserves', 'eModeCategories', 'userConfig', 'user', 'userEModeCategory', 'reservesCount', 'oracle'], 'fullArgs': [{'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'address', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'mappingValueType': {'primitiveName': 'address', 'type': 'Primitive'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint8', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'EModeCategory', 'structMembers': [{'name': 'ltv', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationThreshold', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationBonus', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'priceSource', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'label', 'type': {'type': 'StringType'}}], 'containingContract': 'DataTypes', 'astId': 289, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.EModeCategory'}}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint8', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'bool', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e50058': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateHFAndLtv', 'paramNames': ['reservesData', 'reserves', 'eModeCategories', 'userConfig', 'asset', 'from', 'reservesCount', 'oracle', 'userEModeCategory'], 'fullArgs': [{'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'address', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'mappingValueType': {'primitiveName': 'address', 'type': 'Primitive'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint8', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'EModeCategory', 'structMembers': [{'name': 'ltv', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationThreshold', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationBonus', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'priceSource', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'label', 'type': {'type': 'StringType'}}], 'containingContract': 'DataTypes', 'astId': 289, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.EModeCategory'}}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint8', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e50059': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateTransfer', 'paramNames': ['reserve'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e5005a': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateDropReserve', 'paramNames': ['reserve'], 'fullArgs': [{'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}, 'location': 'storage'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e5005b': {'canonicalId': 'contracts/protocol/libraries/logic/ValidationLogic.sol|ValidationLogic', 'declaringContract': 'ValidationLogic', 'method': {'name': 'validateSetUserEMode', 'paramNames': ['reservesData', 'reserves', 'eModeCategories', 'userConfig', 'reservesCount', 'categoryId'], 'fullArgs': [{'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'address', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'ReserveData', 'structMembers': [{'name': 'configuration', 'type': {'type': 'UserDefinedStruct', 'structName': 'ReserveConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 275, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveConfigurationMap'}}, {'name': 'liquidityIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentLiquidityRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'variableBorrowIndex', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentVariableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'currentStableBorrowRate', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'lastUpdateTimestamp', 'type': {'primitiveName': 'uint40', 'type': 'Primitive'}}, {'name': 'aTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'stableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'variableDebtTokenAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'interestRateStrategyAddress', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'id', 'type': {'primitiveName': 'uint8', 'type': 'Primitive'}}, {'name': 'accruedToTreasury', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'unbacked', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}, {'name': 'isolationModeTotalDebt', 'type': {'primitiveName': 'uint128', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 272, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.ReserveData'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'mappingValueType': {'primitiveName': 'address', 'type': 'Primitive'}}, 'location': 'storage'}, {'typeDesc': {'type': 'Mapping', 'mappingKeyType': {'primitiveName': 'uint8', 'type': 'Primitive'}, 'mappingValueType': {'type': 'UserDefinedStruct', 'structName': 'EModeCategory', 'structMembers': [{'name': 'ltv', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationThreshold', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'liquidationBonus', 'type': {'primitiveName': 'uint16', 'type': 'Primitive'}}, {'name': 'priceSource', 'type': {'primitiveName': 'address', 'type': 'Primitive'}}, {'name': 'label', 'type': {'type': 'StringType'}}], 'containingContract': 'DataTypes', 'astId': 289, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.EModeCategory'}}, 'location': 'storage'}, {'typeDesc': {'type': 'UserDefinedStruct', 'structName': 'UserConfigurationMap', 'structMembers': [{'name': 'data', 'type': {'primitiveName': 'uint256', 'type': 'Primitive'}}], 'containingContract': 'DataTypes', 'astId': 278, 'canonicalId': 'contracts/protocol/libraries/types/DataTypes.sol|DataTypes.UserConfigurationMap'}, 'location': 'memory'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint8', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'ValidationLogic'}}, '0xf196e5005c': {'canonicalId': 'contracts/protocol/libraries/math/MathUtils.sol|MathUtils', 'declaringContract': 'MathUtils', 'method': {'name': 'calculateLinearInterest', 'paramNames': ['rate', 'lastUpdateTimestamp'], 'fullArgs': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint40', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'MathUtils'}}, '0xf196e5005d': {'canonicalId': 'contracts/protocol/libraries/math/MathUtils.sol|MathUtils', 'declaringContract': 'MathUtils', 'method': {'name': 'calculateCompoundedInterest', 'paramNames': ['rate', 'lastUpdateTimestamp', 'currentTimestamp'], 'fullArgs': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint40', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'MathUtils'}}, '0xf196e5005e': {'canonicalId': 'contracts/protocol/libraries/math/MathUtils.sol|MathUtils', 'declaringContract': 'MathUtils', 'method': {'name': 'calculateCompoundedInterest', 'paramNames': ['rate', 'lastUpdateTimestamp'], 'fullArgs': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint40', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'MathUtils'}}, '0xf196e5005f': {'canonicalId': 'contracts/protocol/libraries/math/PercentageMath.sol|PercentageMath', 'declaringContract': 'PercentageMath', 'method': {'name': 'percentMul', 'paramNames': ['value', 'percentage'], 'fullArgs': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'PercentageMath'}}, '0xf196e50060': {'canonicalId': 'contracts/protocol/libraries/math/PercentageMath.sol|PercentageMath', 'declaringContract': 'PercentageMath', 'method': {'name': 'percentDiv', 'paramNames': ['value', 'percentage'], 'fullArgs': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'PercentageMath'}}, '0xf196e50061': {'canonicalId': 'contracts/protocol/libraries/math/WadRayMath.sol|WadRayMath', 'declaringContract': 'WadRayMath', 'method': {'name': 'wad', 'paramNames': [], 'fullArgs': [], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'WadRayMath'}}, '0xf196e50062': {'canonicalId': 'contracts/protocol/libraries/math/WadRayMath.sol|WadRayMath', 'declaringContract': 'WadRayMath', 'method': {'name': 'halfRay', 'paramNames': [], 'fullArgs': [], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'WadRayMath'}}, '0xf196e50063': {'canonicalId': 'contracts/protocol/libraries/math/WadRayMath.sol|WadRayMath', 'declaringContract': 'WadRayMath', 'method': {'name': 'wadDiv', 'paramNames': ['a', 'b'], 'fullArgs': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'WadRayMath'}}, '0xf196e50064': {'canonicalId': 'contracts/protocol/libraries/math/WadRayMath.sol|WadRayMath', 'declaringContract': 'WadRayMath', 'method': {'name': 'halfWad', 'paramNames': [], 'fullArgs': [], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'WadRayMath'}}, '0xf196e50065': {'canonicalId': 'contracts/protocol/libraries/math/WadRayMath.sol|WadRayMath', 'declaringContract': 'WadRayMath', 'method': {'name': 'wadMul', 'paramNames': ['a', 'b'], 'fullArgs': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'WadRayMath'}}, '0xf196e50066': {'canonicalId': 'contracts/protocol/libraries/math/WadRayMath.sol|WadRayMath', 'declaringContract': 'WadRayMath', 'method': {'name': 'rayMul', 'paramNames': ['a', 'b'], 'fullArgs': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'WadRayMath'}}, '0xf196e50067': {'canonicalId': 'contracts/protocol/libraries/math/WadRayMath.sol|WadRayMath', 'declaringContract': 'WadRayMath', 'method': {'name': 'rayDiv', 'paramNames': ['a', 'b'], 'fullArgs': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}, {'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'WadRayMath'}}, '0xf196e50068': {'canonicalId': 'contracts/protocol/libraries/math/WadRayMath.sol|WadRayMath', 'declaringContract': 'WadRayMath', 'method': {'name': 'rayToWad', 'paramNames': ['a'], 'fullArgs': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'WadRayMath'}}, '0xf196e50069': {'canonicalId': 'contracts/protocol/libraries/math/WadRayMath.sol|WadRayMath', 'declaringContract': 'WadRayMath', 'method': {'name': 'wadToRay', 'paramNames': ['a'], 'fullArgs': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': True, 'contractName': 'WadRayMath'}}, '0xf196e5006a': {'canonicalId': 'contracts/protocol/pool/Pool.sol|Pool', 'declaringContract': 'Pool', 'method': {'name': '_onlyPoolConfigurator', 'paramNames': [], 'fullArgs': [], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': False, 'contractName': 'Pool'}}, '0xf196e5006b': {'canonicalId': 'contracts/protocol/pool/Pool.sol|Pool', 'declaringContract': 'Pool', 'method': {'name': '_onlyBridge', 'paramNames': [], 'fullArgs': [], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'view', 'visibility': 'internal', 'isLibrary': False, 'contractName': 'Pool'}}, '0xf196e5006c': {'canonicalId': 'contracts/protocol/pool/Pool.sol|Pool', 'declaringContract': 'Pool', 'method': {'name': 'getRevision', 'paramNames': [], 'fullArgs': [], 'returns': [{'typeDesc': {'primitiveName': 'uint256', 'type': 'Primitive'}, 'location': 'stack'}], 'sighash': '0', 'notpayable': True, 'stateMutability': 'pure', 'visibility': 'internal', 'isLibrary': False, 'contractName': 'Pool'}}, '0xf196e5006d': {'canonicalId': 'contracts/protocol/pool/Pool.sol|Pool', 'declaringContract': 'Pool', 'method': {'name': '_addReserveToList', 'paramNames': ['asset'], 'fullArgs': [{'typeDesc': {'primitiveName': 'address', 'type': 'Primitive'}, 'location': 'stack'}], 'returns': [], 'sighash': '0', 'notpayable': True, 'stateMutability': 'nonpayable', 'visibility': 'internal', 'isLibrary': False, 'contractName': 'Pool'}}}}

building file Certora/harness/SymbolicPriceOracle.sol
Running cmd solc -o ".certora_internal/24_02_02_08_49_36_072/.certora_config/SymbolicPriceOracle.sol_1/" --overwrite --allow-paths "/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts",.,"node_modules/@nomiclabs/hardhat-etherscan","node_modules/axios-curlirize","node_modules/tmp-promise" --standard-json
stdout, stderr = .certora_internal/24_02_02_08_49_36_072/.certora_config/SymbolicPriceOracle.sol_1.standard.json.stdout, .certora_internal/24_02_02_08_49_36_072/.certora_config/SymbolicPriceOracle.sol_1.standard.json.stderr
Exitcode 0
Solc run solc -o ".certora_internal/24_02_02_08_49_36_072/.certora_config/SymbolicPriceOracle.sol_1/" --overwrite --allow-paths "/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts",.,"node_modules/@nomiclabs/hardhat-etherscan","node_modules/axios-curlirize","node_modules/tmp-promise" --standard-json time: 0.1589
reading standard json data from .certora_internal/24_02_02_08_49_36_072/.certora_config/SymbolicPriceOracle.sol_1.standard.json.stdout
collecting worklist for /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/Certora/harness/SymbolicPriceOracle.sol
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/Certora/harness/SymbolicPriceOracle.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/Certora/harness/SymbolicPriceOracle.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPriceOracleGetter.sol'])
Adding a base contract link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPriceOracleGetter.sol to worklist
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPriceOracleGetter.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/Certora/harness/SymbolicPriceOracle.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPriceOracleGetter.sol'])
Contracts in SymbolicPriceOracle.sol_1 (file Certora/harness/SymbolicPriceOracle.sol): ['SymbolicPriceOracle']
Contracts with their chosen addresses: [(274184521717934524641157099916833587278, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/Certora/harness/SymbolicPriceOracle.sol:SymbolicPriceOracle'), (274184521717934524641157099916833587279, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPriceOracleGetter.sol:IPriceOracleGetter')]
Working on contract SymbolicPriceOracle
Working on contract SymbolicPriceOracle
Working on contract IPriceOracleGetter
Working on contract IPriceOracleGetter
For contracts of primary SymbolicPriceOracle
finding primary contract address of /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/Certora/harness/SymbolicPriceOracle.sol:SymbolicPriceOracle in [(274184521717934524641157099916833587278, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/Certora/harness/SymbolicPriceOracle.sol:SymbolicPriceOracle'), (274184521717934524641157099916833587279, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPriceOracleGetter.sol:IPriceOracleGetter')]
Contracts in SDC SymbolicPriceOracle.sol_1: ['SymbolicPriceOracle', 'IPriceOracleGetter']
Building source tree
Copying /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/Certora/harness/SymbolicPriceOracle.sol to .certora_internal/24_02_02_08_49_36_072/.certora_sources/Certora/harness/SymbolicPriceOracle.sol
Backing up current .certora_sources to .certora_internal/24_02_02_08_49_36_072/.certora_sources/.pre_autofinders.1
Running cmd solc -o ".certora_internal/24_02_02_08_49_36_072/.certora_config/SymbolicPriceOracle.sol_1/" --overwrite --allow-paths "/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts",.,"/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/node_modules/@nomiclabs/hardhat-etherscan","/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/node_modules/axios-curlirize","/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/node_modules/tmp-promise" --standard-json
stdout, stderr = .certora_internal/24_02_02_08_49_36_072/.certora_config/SymbolicPriceOracle.sol_1.standard.json.stdout, .certora_internal/24_02_02_08_49_36_072/.certora_config/SymbolicPriceOracle.sol_1.standard.json.stderr
Exitcode 0
Solc run solc -o ".certora_internal/24_02_02_08_49_36_072/.certora_config/SymbolicPriceOracle.sol_1/" --overwrite --allow-paths "/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts",.,"/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/node_modules/@nomiclabs/hardhat-etherscan","/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/node_modules/axios-curlirize","/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/node_modules/tmp-promise" --standard-json time: 0.1596
reading standard json data from .certora_internal/24_02_02_08_49_36_072/.certora_config/SymbolicPriceOracle.sol_1.standard.json.stdout
collecting worklist for /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/Certora/harness/SymbolicPriceOracle.sol
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/Certora/harness/SymbolicPriceOracle.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/Certora/harness/SymbolicPriceOracle.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPriceOracleGetter.sol'])
Adding a base contract link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPriceOracleGetter.sol to worklist
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPriceOracleGetter.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/Certora/harness/SymbolicPriceOracle.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPriceOracleGetter.sol'])
Contracts in SymbolicPriceOracle.sol_1 (file .certora_internal/24_02_02_08_49_36_072/.certora_sources/Certora/harness/SymbolicPriceOracle.sol): ['SymbolicPriceOracle']
Contracts with their chosen addresses: [(274184521717934524641157099916833587280, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/Certora/harness/SymbolicPriceOracle.sol:SymbolicPriceOracle'), (274184521717934524641157099916833587281, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPriceOracleGetter.sol:IPriceOracleGetter')]
Working on contract SymbolicPriceOracle
Working on contract SymbolicPriceOracle
Working on contract IPriceOracleGetter
Working on contract IPriceOracleGetter
For contracts of primary SymbolicPriceOracle
finding primary contract address of /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/Certora/harness/SymbolicPriceOracle.sol:SymbolicPriceOracle in [(274184521717934524641157099916833587280, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/Certora/harness/SymbolicPriceOracle.sol:SymbolicPriceOracle'), (274184521717934524641157099916833587281, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPriceOracleGetter.sol:IPriceOracleGetter')]
Contracts in SDC SymbolicPriceOracle.sol_1: ['SymbolicPriceOracle', 'IPriceOracleGetter']
Backing up instrumented .certora_sources to .certora_internal/24_02_02_08_49_36_072/.certora_sources/.post_autofinders.1
Rolling back .certora_sources to .certora_internal/24_02_02_08_49_36_072/.certora_sources/.pre_autofinders.1 version
Libraries to add = []

building file contracts/protocol/configuration/PoolAddressesProvider.sol
Running cmd solc -o ".certora_internal/24_02_02_08_49_36_072/.certora_config/PoolAddressesProvider.sol_2/" --overwrite --allow-paths "/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts",.,"node_modules/@nomiclabs/hardhat-etherscan","node_modules/axios-curlirize","node_modules/tmp-promise" --standard-json
stdout, stderr = .certora_internal/24_02_02_08_49_36_072/.certora_config/PoolAddressesProvider.sol_2.standard.json.stdout, .certora_internal/24_02_02_08_49_36_072/.certora_config/PoolAddressesProvider.sol_2.standard.json.stderr
Exitcode 0
Solc run solc -o ".certora_internal/24_02_02_08_49_36_072/.certora_config/PoolAddressesProvider.sol_2/" --overwrite --allow-paths "/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts",.,"node_modules/@nomiclabs/hardhat-etherscan","node_modules/axios-curlirize","node_modules/tmp-promise" --standard-json time: 0.3575
reading standard json data from .certora_internal/24_02_02_08_49_36_072/.certora_config/PoolAddressesProvider.sol_2.standard.json.stdout
collecting worklist for /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/configuration/PoolAddressesProvider.sol
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/configuration/PoolAddressesProvider.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/Address.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/Context.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/Ownable.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/upgradeability/Proxy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/configuration/PoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/aave-upgradeability/BaseImmutableAdminUpgradeabilityProxy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/aave-upgradeability/InitializableImmutableAdminUpgradeabilityProxy.sol'])
Adding a base contract link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/Context.sol to worklist
Adding a base contract link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/Ownable.sol to worklist
Adding a base contract link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPoolAddressesProvider.sol to worklist
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/aave-upgradeability/BaseImmutableAdminUpgradeabilityProxy.sol to worklist
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol to worklist
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/Address.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/Context.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/Ownable.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/upgradeability/Proxy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/configuration/PoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/aave-upgradeability/BaseImmutableAdminUpgradeabilityProxy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/aave-upgradeability/InitializableImmutableAdminUpgradeabilityProxy.sol'])
Adding a base contract link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol to worklist
Adding a base contract link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/upgradeability/Proxy.sol to worklist
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/upgradeability/Proxy.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/Address.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/Context.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/Ownable.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/upgradeability/Proxy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/configuration/PoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/aave-upgradeability/BaseImmutableAdminUpgradeabilityProxy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/aave-upgradeability/InitializableImmutableAdminUpgradeabilityProxy.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/Address.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/Context.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/Ownable.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/upgradeability/Proxy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/configuration/PoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/aave-upgradeability/BaseImmutableAdminUpgradeabilityProxy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/aave-upgradeability/InitializableImmutableAdminUpgradeabilityProxy.sol'])
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/Address.sol to worklist
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/Address.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/Address.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/Context.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/Ownable.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/upgradeability/Proxy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/configuration/PoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/aave-upgradeability/BaseImmutableAdminUpgradeabilityProxy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/aave-upgradeability/InitializableImmutableAdminUpgradeabilityProxy.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/aave-upgradeability/BaseImmutableAdminUpgradeabilityProxy.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/Address.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/Context.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/Ownable.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/upgradeability/Proxy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/configuration/PoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/aave-upgradeability/BaseImmutableAdminUpgradeabilityProxy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/aave-upgradeability/InitializableImmutableAdminUpgradeabilityProxy.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPoolAddressesProvider.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/Address.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/Context.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/Ownable.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/upgradeability/Proxy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/configuration/PoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/aave-upgradeability/BaseImmutableAdminUpgradeabilityProxy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/aave-upgradeability/InitializableImmutableAdminUpgradeabilityProxy.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/Ownable.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/Address.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/Context.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/Ownable.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/upgradeability/Proxy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/configuration/PoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/aave-upgradeability/BaseImmutableAdminUpgradeabilityProxy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/aave-upgradeability/InitializableImmutableAdminUpgradeabilityProxy.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/Context.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/Address.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/Context.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/Ownable.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/upgradeability/Proxy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/configuration/PoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/aave-upgradeability/BaseImmutableAdminUpgradeabilityProxy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/aave-upgradeability/InitializableImmutableAdminUpgradeabilityProxy.sol'])
Contracts in PoolAddressesProvider.sol_2 (file contracts/protocol/configuration/PoolAddressesProvider.sol): ['PoolAddressesProvider']
Contracts with their chosen addresses: [(274184521717934524641157099916833587282, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/Address.sol:Address'), (274184521717934524641157099916833587283, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/Context.sol:Context'), (274184521717934524641157099916833587284, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/Ownable.sol:Ownable'), (274184521717934524641157099916833587285, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol:BaseUpgradeabilityProxy'), (274184521717934524641157099916833587286, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol:InitializableUpgradeabilityProxy'), (274184521717934524641157099916833587287, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/upgradeability/Proxy.sol:Proxy'), (274184521717934524641157099916833587288, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPoolAddressesProvider.sol:IPoolAddressesProvider'), (274184521717934524641157099916833587289, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/configuration/PoolAddressesProvider.sol:PoolAddressesProvider'), (274184521717934524641157099916833587290, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/aave-upgradeability/BaseImmutableAdminUpgradeabilityProxy.sol:BaseImmutableAdminUpgradeabilityProxy')]
Working on contract Address
Working on contract Address
Working on contract Context
Working on contract Context
Working on contract Ownable
Working on contract Ownable
Working on contract BaseUpgradeabilityProxy
Working on contract BaseUpgradeabilityProxy
Working on contract InitializableUpgradeabilityProxy
Working on contract InitializableUpgradeabilityProxy
Working on contract Proxy
Working on contract Proxy
Working on contract IPoolAddressesProvider
Working on contract IPoolAddressesProvider
Working on contract PoolAddressesProvider
Working on contract PoolAddressesProvider
Working on contract BaseImmutableAdminUpgradeabilityProxy
Working on contract BaseImmutableAdminUpgradeabilityProxy
For contracts of primary PoolAddressesProvider
finding primary contract address of /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/configuration/PoolAddressesProvider.sol:PoolAddressesProvider in [(274184521717934524641157099916833587282, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/Address.sol:Address'), (274184521717934524641157099916833587283, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/Context.sol:Context'), (274184521717934524641157099916833587284, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/Ownable.sol:Ownable'), (274184521717934524641157099916833587285, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol:BaseUpgradeabilityProxy'), (274184521717934524641157099916833587286, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol:InitializableUpgradeabilityProxy'), (274184521717934524641157099916833587287, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/upgradeability/Proxy.sol:Proxy'), (274184521717934524641157099916833587288, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPoolAddressesProvider.sol:IPoolAddressesProvider'), (274184521717934524641157099916833587289, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/configuration/PoolAddressesProvider.sol:PoolAddressesProvider'), (274184521717934524641157099916833587290, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/aave-upgradeability/BaseImmutableAdminUpgradeabilityProxy.sol:BaseImmutableAdminUpgradeabilityProxy')]
Contracts in SDC PoolAddressesProvider.sol_2: ['Address', 'Context', 'Ownable', 'BaseUpgradeabilityProxy', 'InitializableUpgradeabilityProxy', 'Proxy', 'IPoolAddressesProvider', 'PoolAddressesProvider', 'BaseImmutableAdminUpgradeabilityProxy']
Building source tree
Copying /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/aave-upgradeability/InitializableImmutableAdminUpgradeabilityProxy.sol to .certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/aave-upgradeability/InitializableImmutableAdminUpgradeabilityProxy.sol
Copying /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/configuration/PoolAddressesProvider.sol to .certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/configuration/PoolAddressesProvider.sol
Copying /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/Ownable.sol to .certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/Ownable.sol
Copying /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol to .certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol
Copying /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol to .certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol
Copying /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/Context.sol to .certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/Context.sol
Copying /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/upgradeability/Proxy.sol to .certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/upgradeability/Proxy.sol
Copying /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/aave-upgradeability/BaseImmutableAdminUpgradeabilityProxy.sol to .certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/aave-upgradeability/BaseImmutableAdminUpgradeabilityProxy.sol
Backing up current .certora_sources to .certora_internal/24_02_02_08_49_36_072/.certora_sources/.pre_autofinders.2
Running cmd solc -o ".certora_internal/24_02_02_08_49_36_072/.certora_config/PoolAddressesProvider.sol_2/" --overwrite --allow-paths "/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts",.,"/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/node_modules/@nomiclabs/hardhat-etherscan","/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/node_modules/axios-curlirize","/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/node_modules/tmp-promise" --standard-json
stdout, stderr = .certora_internal/24_02_02_08_49_36_072/.certora_config/PoolAddressesProvider.sol_2.standard.json.stdout, .certora_internal/24_02_02_08_49_36_072/.certora_config/PoolAddressesProvider.sol_2.standard.json.stderr
Exitcode 0
Solc run solc -o ".certora_internal/24_02_02_08_49_36_072/.certora_config/PoolAddressesProvider.sol_2/" --overwrite --allow-paths "/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts",.,"/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/node_modules/@nomiclabs/hardhat-etherscan","/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/node_modules/axios-curlirize","/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/node_modules/tmp-promise" --standard-json time: 0.4185
reading standard json data from .certora_internal/24_02_02_08_49_36_072/.certora_config/PoolAddressesProvider.sol_2.standard.json.stdout
collecting worklist for /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/configuration/PoolAddressesProvider.sol
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/configuration/PoolAddressesProvider.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/Address.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/Context.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/Ownable.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/upgradeability/Proxy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/configuration/PoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/aave-upgradeability/BaseImmutableAdminUpgradeabilityProxy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/aave-upgradeability/InitializableImmutableAdminUpgradeabilityProxy.sol'])
Adding a base contract link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/Context.sol to worklist
Adding a base contract link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/Ownable.sol to worklist
Adding a base contract link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPoolAddressesProvider.sol to worklist
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/aave-upgradeability/BaseImmutableAdminUpgradeabilityProxy.sol to worklist
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol to worklist
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/Address.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/Context.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/Ownable.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/upgradeability/Proxy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/configuration/PoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/aave-upgradeability/BaseImmutableAdminUpgradeabilityProxy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/aave-upgradeability/InitializableImmutableAdminUpgradeabilityProxy.sol'])
Adding a base contract link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol to worklist
Adding a base contract link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/upgradeability/Proxy.sol to worklist
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/upgradeability/Proxy.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/Address.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/Context.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/Ownable.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/upgradeability/Proxy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/configuration/PoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/aave-upgradeability/BaseImmutableAdminUpgradeabilityProxy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/aave-upgradeability/InitializableImmutableAdminUpgradeabilityProxy.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/Address.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/Context.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/Ownable.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/upgradeability/Proxy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/configuration/PoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/aave-upgradeability/BaseImmutableAdminUpgradeabilityProxy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/aave-upgradeability/InitializableImmutableAdminUpgradeabilityProxy.sol'])
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/Address.sol to worklist
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/Address.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/Address.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/Context.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/Ownable.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/upgradeability/Proxy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/configuration/PoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/aave-upgradeability/BaseImmutableAdminUpgradeabilityProxy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/aave-upgradeability/InitializableImmutableAdminUpgradeabilityProxy.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/aave-upgradeability/BaseImmutableAdminUpgradeabilityProxy.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/Address.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/Context.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/Ownable.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/upgradeability/Proxy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/configuration/PoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/aave-upgradeability/BaseImmutableAdminUpgradeabilityProxy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/aave-upgradeability/InitializableImmutableAdminUpgradeabilityProxy.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPoolAddressesProvider.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/Address.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/Context.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/Ownable.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/upgradeability/Proxy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/configuration/PoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/aave-upgradeability/BaseImmutableAdminUpgradeabilityProxy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/aave-upgradeability/InitializableImmutableAdminUpgradeabilityProxy.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/Ownable.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/Address.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/Context.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/Ownable.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/upgradeability/Proxy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/configuration/PoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/aave-upgradeability/BaseImmutableAdminUpgradeabilityProxy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/aave-upgradeability/InitializableImmutableAdminUpgradeabilityProxy.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/Context.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/Address.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/Context.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/Ownable.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/upgradeability/Proxy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/configuration/PoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/aave-upgradeability/BaseImmutableAdminUpgradeabilityProxy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/aave-upgradeability/InitializableImmutableAdminUpgradeabilityProxy.sol'])
Contracts in PoolAddressesProvider.sol_2 (file .certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/configuration/PoolAddressesProvider.sol): ['PoolAddressesProvider']
Contracts with their chosen addresses: [(274184521717934524641157099916833587291, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/Address.sol:Address'), (274184521717934524641157099916833587292, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/Context.sol:Context'), (274184521717934524641157099916833587293, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/Ownable.sol:Ownable'), (274184521717934524641157099916833587294, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol:BaseUpgradeabilityProxy'), (274184521717934524641157099916833587295, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol:InitializableUpgradeabilityProxy'), (274184521717934524641157099916833587296, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/upgradeability/Proxy.sol:Proxy'), (274184521717934524641157099916833587297, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPoolAddressesProvider.sol:IPoolAddressesProvider'), (274184521717934524641157099916833587298, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/configuration/PoolAddressesProvider.sol:PoolAddressesProvider'), (274184521717934524641157099916833587299, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/aave-upgradeability/BaseImmutableAdminUpgradeabilityProxy.sol:BaseImmutableAdminUpgradeabilityProxy')]
Working on contract Address
Working on contract Address
Working on contract Context
Working on contract Context
Working on contract Ownable
Working on contract Ownable
Working on contract BaseUpgradeabilityProxy
Working on contract BaseUpgradeabilityProxy
Working on contract InitializableUpgradeabilityProxy
Working on contract InitializableUpgradeabilityProxy
Working on contract Proxy
Working on contract Proxy
Working on contract IPoolAddressesProvider
Working on contract IPoolAddressesProvider
Working on contract PoolAddressesProvider
Working on contract PoolAddressesProvider
Working on contract BaseImmutableAdminUpgradeabilityProxy
Working on contract BaseImmutableAdminUpgradeabilityProxy
For contracts of primary PoolAddressesProvider
finding primary contract address of /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/configuration/PoolAddressesProvider.sol:PoolAddressesProvider in [(274184521717934524641157099916833587291, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/Address.sol:Address'), (274184521717934524641157099916833587292, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/Context.sol:Context'), (274184521717934524641157099916833587293, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/Ownable.sol:Ownable'), (274184521717934524641157099916833587294, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/upgradeability/BaseUpgradeabilityProxy.sol:BaseUpgradeabilityProxy'), (274184521717934524641157099916833587295, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/upgradeability/InitializableUpgradeabilityProxy.sol:InitializableUpgradeabilityProxy'), (274184521717934524641157099916833587296, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/upgradeability/Proxy.sol:Proxy'), (274184521717934524641157099916833587297, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPoolAddressesProvider.sol:IPoolAddressesProvider'), (274184521717934524641157099916833587298, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/configuration/PoolAddressesProvider.sol:PoolAddressesProvider'), (274184521717934524641157099916833587299, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/aave-upgradeability/BaseImmutableAdminUpgradeabilityProxy.sol:BaseImmutableAdminUpgradeabilityProxy')]
Contracts in SDC PoolAddressesProvider.sol_2: ['Address', 'Context', 'Ownable', 'BaseUpgradeabilityProxy', 'InitializableUpgradeabilityProxy', 'Proxy', 'IPoolAddressesProvider', 'PoolAddressesProvider', 'BaseImmutableAdminUpgradeabilityProxy']
Backing up instrumented .certora_sources to .certora_internal/24_02_02_08_49_36_072/.certora_sources/.post_autofinders.2
Rolling back .certora_sources to .certora_internal/24_02_02_08_49_36_072/.certora_sources/.pre_autofinders.2 version
Libraries to add = []

building file contracts/protocol/libraries/logic/LiquidationLogic.sol
Running cmd solc -o ".certora_internal/24_02_02_08_49_36_072/.certora_config/LiquidationLogic.sol_3/" --overwrite --allow-paths "/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts",.,"node_modules/@nomiclabs/hardhat-etherscan","node_modules/axios-curlirize","node_modules/tmp-promise" --standard-json
stdout, stderr = .certora_internal/24_02_02_08_49_36_072/.certora_config/LiquidationLogic.sol_3.standard.json.stdout, .certora_internal/24_02_02_08_49_36_072/.certora_config/LiquidationLogic.sol_3.standard.json.stderr
Exitcode 0
Solc run solc -o ".certora_internal/24_02_02_08_49_36_072/.certora_config/LiquidationLogic.sol_3/" --overwrite --allow-paths "/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts",.,"node_modules/@nomiclabs/hardhat-etherscan","node_modules/axios-curlirize","node_modules/tmp-promise" --standard-json time: 1.0806
reading standard json data from .certora_internal/24_02_02_08_49_36_072/.certora_config/LiquidationLogic.sol_3.standard.json.stdout
collecting worklist for /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/LiquidationLogic.sol
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/LiquidationLogic.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/Address.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/IERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IAaveIncentivesController.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IInitializableAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IInitializableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPool.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPriceOracleGetter.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPriceOracleSentinel.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IReserveInterestRateStrategy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IScaledBalanceToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IStableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IVariableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/configuration/ReserveConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/configuration/UserConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/helpers/Errors.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/helpers/Helpers.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/GenericLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/IsolationModeLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/LiquidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/ReserveLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/ValidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/MathUtils.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/PercentageMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/WadRayMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/types/DataTypes.sol'])
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/types/DataTypes.sol to worklist
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/GenericLogic.sol to worklist
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/helpers/Helpers.sol to worklist
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IAToken.sol to worklist
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/IERC20.sol to worklist
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPriceOracleGetter.sol to worklist
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IStableDebtToken.sol to worklist
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IVariableDebtToken.sol to worklist
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/IsolationModeLogic.sol to worklist
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/PercentageMath.sol to worklist
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/configuration/ReserveConfiguration.sol to worklist
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/ReserveLogic.sol to worklist
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/SafeERC20.sol to worklist
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/configuration/UserConfiguration.sol to worklist
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/ValidationLogic.sol to worklist
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/ValidationLogic.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/Address.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/IERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IAaveIncentivesController.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IInitializableAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IInitializableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPool.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPriceOracleGetter.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPriceOracleSentinel.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IReserveInterestRateStrategy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IScaledBalanceToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IStableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IVariableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/configuration/ReserveConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/configuration/UserConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/helpers/Errors.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/helpers/Helpers.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/GenericLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/IsolationModeLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/LiquidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/ReserveLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/ValidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/MathUtils.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/PercentageMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/WadRayMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/types/DataTypes.sol'])
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPriceOracleSentinel.sol to worklist
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IReserveInterestRateStrategy.sol to worklist
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IScaledBalanceToken.sol to worklist
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/WadRayMath.sol to worklist
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/WadRayMath.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/Address.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/IERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IAaveIncentivesController.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IInitializableAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IInitializableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPool.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPriceOracleGetter.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPriceOracleSentinel.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IReserveInterestRateStrategy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IScaledBalanceToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IStableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IVariableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/configuration/ReserveConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/configuration/UserConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/helpers/Errors.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/helpers/Helpers.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/GenericLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/IsolationModeLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/LiquidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/ReserveLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/ValidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/MathUtils.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/PercentageMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/WadRayMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/types/DataTypes.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IScaledBalanceToken.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/Address.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/IERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IAaveIncentivesController.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IInitializableAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IInitializableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPool.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPriceOracleGetter.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPriceOracleSentinel.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IReserveInterestRateStrategy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IScaledBalanceToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IStableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IVariableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/configuration/ReserveConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/configuration/UserConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/helpers/Errors.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/helpers/Helpers.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/GenericLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/IsolationModeLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/LiquidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/ReserveLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/ValidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/MathUtils.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/PercentageMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/WadRayMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/types/DataTypes.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IReserveInterestRateStrategy.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/Address.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/IERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IAaveIncentivesController.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IInitializableAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IInitializableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPool.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPriceOracleGetter.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPriceOracleSentinel.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IReserveInterestRateStrategy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IScaledBalanceToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IStableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IVariableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/configuration/ReserveConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/configuration/UserConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/helpers/Errors.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/helpers/Helpers.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/GenericLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/IsolationModeLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/LiquidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/ReserveLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/ValidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/MathUtils.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/PercentageMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/WadRayMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/types/DataTypes.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPriceOracleSentinel.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/Address.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/IERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IAaveIncentivesController.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IInitializableAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IInitializableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPool.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPriceOracleGetter.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPriceOracleSentinel.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IReserveInterestRateStrategy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IScaledBalanceToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IStableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IVariableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/configuration/ReserveConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/configuration/UserConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/helpers/Errors.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/helpers/Helpers.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/GenericLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/IsolationModeLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/LiquidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/ReserveLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/ValidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/MathUtils.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/PercentageMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/WadRayMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/types/DataTypes.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/configuration/UserConfiguration.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/Address.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/IERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IAaveIncentivesController.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IInitializableAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IInitializableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPool.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPriceOracleGetter.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPriceOracleSentinel.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IReserveInterestRateStrategy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IScaledBalanceToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IStableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IVariableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/configuration/ReserveConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/configuration/UserConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/helpers/Errors.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/helpers/Helpers.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/GenericLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/IsolationModeLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/LiquidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/ReserveLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/ValidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/MathUtils.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/PercentageMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/WadRayMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/types/DataTypes.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/SafeERC20.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/Address.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/IERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IAaveIncentivesController.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IInitializableAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IInitializableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPool.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPriceOracleGetter.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPriceOracleSentinel.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IReserveInterestRateStrategy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IScaledBalanceToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IStableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IVariableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/configuration/ReserveConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/configuration/UserConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/helpers/Errors.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/helpers/Helpers.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/GenericLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/IsolationModeLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/LiquidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/ReserveLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/ValidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/MathUtils.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/PercentageMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/WadRayMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/types/DataTypes.sol'])
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/Address.sol to worklist
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/Address.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/Address.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/IERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IAaveIncentivesController.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IInitializableAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IInitializableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPool.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPriceOracleGetter.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPriceOracleSentinel.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IReserveInterestRateStrategy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IScaledBalanceToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IStableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IVariableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/configuration/ReserveConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/configuration/UserConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/helpers/Errors.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/helpers/Helpers.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/GenericLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/IsolationModeLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/LiquidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/ReserveLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/ValidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/MathUtils.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/PercentageMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/WadRayMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/types/DataTypes.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/ReserveLogic.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/Address.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/IERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IAaveIncentivesController.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IInitializableAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IInitializableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPool.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPriceOracleGetter.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPriceOracleSentinel.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IReserveInterestRateStrategy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IScaledBalanceToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IStableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IVariableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/configuration/ReserveConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/configuration/UserConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/helpers/Errors.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/helpers/Helpers.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/GenericLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/IsolationModeLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/LiquidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/ReserveLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/ValidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/MathUtils.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/PercentageMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/WadRayMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/types/DataTypes.sol'])
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/MathUtils.sol to worklist
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/MathUtils.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/Address.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/IERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IAaveIncentivesController.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IInitializableAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IInitializableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPool.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPriceOracleGetter.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPriceOracleSentinel.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IReserveInterestRateStrategy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IScaledBalanceToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IStableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IVariableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/configuration/ReserveConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/configuration/UserConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/helpers/Errors.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/helpers/Helpers.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/GenericLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/IsolationModeLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/LiquidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/ReserveLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/ValidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/MathUtils.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/PercentageMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/WadRayMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/types/DataTypes.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/configuration/ReserveConfiguration.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/Address.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/IERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IAaveIncentivesController.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IInitializableAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IInitializableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPool.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPriceOracleGetter.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPriceOracleSentinel.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IReserveInterestRateStrategy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IScaledBalanceToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IStableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IVariableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/configuration/ReserveConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/configuration/UserConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/helpers/Errors.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/helpers/Helpers.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/GenericLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/IsolationModeLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/LiquidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/ReserveLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/ValidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/MathUtils.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/PercentageMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/WadRayMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/types/DataTypes.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/PercentageMath.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/Address.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/IERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IAaveIncentivesController.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IInitializableAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IInitializableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPool.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPriceOracleGetter.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPriceOracleSentinel.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IReserveInterestRateStrategy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IScaledBalanceToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IStableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IVariableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/configuration/ReserveConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/configuration/UserConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/helpers/Errors.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/helpers/Helpers.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/GenericLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/IsolationModeLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/LiquidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/ReserveLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/ValidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/MathUtils.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/PercentageMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/WadRayMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/types/DataTypes.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/IsolationModeLogic.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/Address.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/IERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IAaveIncentivesController.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IInitializableAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IInitializableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPool.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPriceOracleGetter.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPriceOracleSentinel.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IReserveInterestRateStrategy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IScaledBalanceToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IStableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IVariableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/configuration/ReserveConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/configuration/UserConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/helpers/Errors.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/helpers/Helpers.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/GenericLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/IsolationModeLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/LiquidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/ReserveLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/ValidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/MathUtils.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/PercentageMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/WadRayMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/types/DataTypes.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IVariableDebtToken.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/Address.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/IERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IAaveIncentivesController.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IInitializableAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IInitializableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPool.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPriceOracleGetter.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPriceOracleSentinel.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IReserveInterestRateStrategy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IScaledBalanceToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IStableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IVariableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/configuration/ReserveConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/configuration/UserConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/helpers/Errors.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/helpers/Helpers.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/GenericLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/IsolationModeLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/LiquidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/ReserveLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/ValidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/MathUtils.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/PercentageMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/WadRayMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/types/DataTypes.sol'])
Adding a base contract link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IInitializableDebtToken.sol to worklist
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IInitializableDebtToken.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/Address.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/IERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IAaveIncentivesController.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IInitializableAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IInitializableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPool.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPriceOracleGetter.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPriceOracleSentinel.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IReserveInterestRateStrategy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IScaledBalanceToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IStableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IVariableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/configuration/ReserveConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/configuration/UserConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/helpers/Errors.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/helpers/Helpers.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/GenericLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/IsolationModeLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/LiquidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/ReserveLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/ValidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/MathUtils.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/PercentageMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/WadRayMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/types/DataTypes.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IStableDebtToken.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/Address.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/IERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IAaveIncentivesController.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IInitializableAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IInitializableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPool.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPriceOracleGetter.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPriceOracleSentinel.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IReserveInterestRateStrategy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IScaledBalanceToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IStableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IVariableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/configuration/ReserveConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/configuration/UserConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/helpers/Errors.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/helpers/Helpers.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/GenericLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/IsolationModeLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/LiquidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/ReserveLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/ValidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/MathUtils.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/PercentageMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/WadRayMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/types/DataTypes.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPriceOracleGetter.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/Address.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/IERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IAaveIncentivesController.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IInitializableAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IInitializableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPool.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPriceOracleGetter.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPriceOracleSentinel.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IReserveInterestRateStrategy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IScaledBalanceToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IStableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IVariableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/configuration/ReserveConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/configuration/UserConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/helpers/Errors.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/helpers/Helpers.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/GenericLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/IsolationModeLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/LiquidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/ReserveLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/ValidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/MathUtils.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/PercentageMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/WadRayMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/types/DataTypes.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/IERC20.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/Address.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/IERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IAaveIncentivesController.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IInitializableAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IInitializableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPool.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPriceOracleGetter.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPriceOracleSentinel.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IReserveInterestRateStrategy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IScaledBalanceToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IStableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IVariableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/configuration/ReserveConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/configuration/UserConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/helpers/Errors.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/helpers/Helpers.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/GenericLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/IsolationModeLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/LiquidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/ReserveLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/ValidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/MathUtils.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/PercentageMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/WadRayMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/types/DataTypes.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IAToken.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/Address.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/IERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IAaveIncentivesController.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IInitializableAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IInitializableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPool.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPriceOracleGetter.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPriceOracleSentinel.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IReserveInterestRateStrategy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IScaledBalanceToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IStableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IVariableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/configuration/ReserveConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/configuration/UserConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/helpers/Errors.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/helpers/Helpers.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/GenericLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/IsolationModeLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/LiquidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/ReserveLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/ValidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/MathUtils.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/PercentageMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/WadRayMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/types/DataTypes.sol'])
Adding a base contract link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IInitializableAToken.sol to worklist
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IInitializableAToken.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/Address.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/IERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IAaveIncentivesController.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IInitializableAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IInitializableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPool.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPriceOracleGetter.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPriceOracleSentinel.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IReserveInterestRateStrategy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IScaledBalanceToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IStableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IVariableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/configuration/ReserveConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/configuration/UserConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/helpers/Errors.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/helpers/Helpers.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/GenericLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/IsolationModeLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/LiquidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/ReserveLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/ValidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/MathUtils.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/PercentageMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/WadRayMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/types/DataTypes.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/helpers/Helpers.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/Address.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/IERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IAaveIncentivesController.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IInitializableAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IInitializableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPool.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPriceOracleGetter.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPriceOracleSentinel.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IReserveInterestRateStrategy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IScaledBalanceToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IStableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IVariableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/configuration/ReserveConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/configuration/UserConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/helpers/Errors.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/helpers/Helpers.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/GenericLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/IsolationModeLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/LiquidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/ReserveLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/ValidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/MathUtils.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/PercentageMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/WadRayMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/types/DataTypes.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/GenericLogic.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/Address.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/IERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IAaveIncentivesController.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IInitializableAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IInitializableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPool.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPriceOracleGetter.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPriceOracleSentinel.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IReserveInterestRateStrategy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IScaledBalanceToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IStableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IVariableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/configuration/ReserveConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/configuration/UserConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/helpers/Errors.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/helpers/Helpers.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/GenericLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/IsolationModeLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/LiquidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/ReserveLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/ValidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/MathUtils.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/PercentageMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/WadRayMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/types/DataTypes.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/types/DataTypes.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/Address.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/IERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IAaveIncentivesController.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IInitializableAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IInitializableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPool.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPriceOracleGetter.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPriceOracleSentinel.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IReserveInterestRateStrategy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IScaledBalanceToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IStableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IVariableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/configuration/ReserveConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/configuration/UserConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/helpers/Errors.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/helpers/Helpers.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/GenericLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/IsolationModeLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/LiquidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/ReserveLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/ValidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/MathUtils.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/PercentageMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/WadRayMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/types/DataTypes.sol'])
Contracts in LiquidationLogic.sol_3 (file contracts/protocol/libraries/logic/LiquidationLogic.sol): ['LiquidationLogic']
Contracts with their chosen addresses: [(274184521717934524641157099916833587300, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/Address.sol:Address'), (274184521717934524641157099916833587301, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/IERC20.sol:IERC20'), (274184521717934524641157099916833587302, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/SafeERC20.sol:SafeERC20'), (274184521717934524641157099916833587303, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IAToken.sol:IAToken'), (274184521717934524641157099916833587304, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IInitializableAToken.sol:IInitializableAToken'), (274184521717934524641157099916833587305, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IInitializableDebtToken.sol:IInitializableDebtToken'), (274184521717934524641157099916833587306, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPriceOracleGetter.sol:IPriceOracleGetter'), (274184521717934524641157099916833587307, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPriceOracleSentinel.sol:IPriceOracleSentinel'), (274184521717934524641157099916833587308, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IReserveInterestRateStrategy.sol:IReserveInterestRateStrategy'), (274184521717934524641157099916833587309, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IScaledBalanceToken.sol:IScaledBalanceToken'), (274184521717934524641157099916833587310, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IStableDebtToken.sol:IStableDebtToken'), (274184521717934524641157099916833587311, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IVariableDebtToken.sol:IVariableDebtToken'), (274184521717934524641157099916833587312, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/configuration/ReserveConfiguration.sol:ReserveConfiguration'), (274184521717934524641157099916833587313, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/configuration/UserConfiguration.sol:UserConfiguration'), (274184521717934524641157099916833587314, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/helpers/Helpers.sol:Helpers'), (274184521717934524641157099916833587315, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/GenericLogic.sol:GenericLogic'), (274184521717934524641157099916833587316, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/IsolationModeLogic.sol:IsolationModeLogic'), (274184521717934524641157099916833587317, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/LiquidationLogic.sol:LiquidationLogic'), (274184521717934524641157099916833587318, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/ReserveLogic.sol:ReserveLogic'), (274184521717934524641157099916833587319, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/ValidationLogic.sol:ValidationLogic'), (274184521717934524641157099916833587320, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/MathUtils.sol:MathUtils'), (274184521717934524641157099916833587321, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/PercentageMath.sol:PercentageMath'), (274184521717934524641157099916833587322, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/WadRayMath.sol:WadRayMath'), (274184521717934524641157099916833587323, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/types/DataTypes.sol:DataTypes')]
Working on contract Address
Working on contract Address
Working on contract IERC20
Working on contract IERC20
Working on contract SafeERC20
Working on contract SafeERC20
Working on contract IAToken
Working on contract IAToken
Working on contract IInitializableAToken
Working on contract IInitializableAToken
Working on contract IInitializableDebtToken
Working on contract IInitializableDebtToken
Working on contract IPriceOracleGetter
Working on contract IPriceOracleGetter
Working on contract IPriceOracleSentinel
Working on contract IPriceOracleSentinel
Working on contract IReserveInterestRateStrategy
Working on contract IReserveInterestRateStrategy
Working on contract IScaledBalanceToken
Working on contract IScaledBalanceToken
Working on contract IStableDebtToken
Working on contract IStableDebtToken
Working on contract IVariableDebtToken
Working on contract IVariableDebtToken
Working on contract ReserveConfiguration
Working on contract ReserveConfiguration
Working on contract UserConfiguration
Working on contract UserConfiguration
Working on contract Helpers
Working on contract Helpers
Working on contract GenericLogic
Working on contract GenericLogic
Working on contract IsolationModeLogic
Working on contract IsolationModeLogic
Working on contract LiquidationLogic
Working on contract LiquidationLogic
Working on contract ReserveLogic
Working on contract ReserveLogic
Working on contract ValidationLogic
Working on contract ValidationLogic
Working on contract MathUtils
Working on contract MathUtils
Working on contract PercentageMath
Working on contract PercentageMath
Working on contract WadRayMath
Working on contract WadRayMath
Working on contract DataTypes
Working on contract DataTypes
For contracts of primary LiquidationLogic
finding primary contract address of /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/LiquidationLogic.sol:LiquidationLogic in [(274184521717934524641157099916833587300, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/Address.sol:Address'), (274184521717934524641157099916833587301, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/IERC20.sol:IERC20'), (274184521717934524641157099916833587302, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/dependencies/openzeppelin/contracts/SafeERC20.sol:SafeERC20'), (274184521717934524641157099916833587303, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IAToken.sol:IAToken'), (274184521717934524641157099916833587304, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IInitializableAToken.sol:IInitializableAToken'), (274184521717934524641157099916833587305, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IInitializableDebtToken.sol:IInitializableDebtToken'), (274184521717934524641157099916833587306, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPriceOracleGetter.sol:IPriceOracleGetter'), (274184521717934524641157099916833587307, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IPriceOracleSentinel.sol:IPriceOracleSentinel'), (274184521717934524641157099916833587308, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IReserveInterestRateStrategy.sol:IReserveInterestRateStrategy'), (274184521717934524641157099916833587309, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IScaledBalanceToken.sol:IScaledBalanceToken'), (274184521717934524641157099916833587310, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IStableDebtToken.sol:IStableDebtToken'), (274184521717934524641157099916833587311, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/interfaces/IVariableDebtToken.sol:IVariableDebtToken'), (274184521717934524641157099916833587312, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/configuration/ReserveConfiguration.sol:ReserveConfiguration'), (274184521717934524641157099916833587313, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/configuration/UserConfiguration.sol:UserConfiguration'), (274184521717934524641157099916833587314, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/helpers/Helpers.sol:Helpers'), (274184521717934524641157099916833587315, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/GenericLogic.sol:GenericLogic'), (274184521717934524641157099916833587316, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/IsolationModeLogic.sol:IsolationModeLogic'), (274184521717934524641157099916833587317, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/LiquidationLogic.sol:LiquidationLogic'), (274184521717934524641157099916833587318, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/ReserveLogic.sol:ReserveLogic'), (274184521717934524641157099916833587319, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/logic/ValidationLogic.sol:ValidationLogic'), (274184521717934524641157099916833587320, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/MathUtils.sol:MathUtils'), (274184521717934524641157099916833587321, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/PercentageMath.sol:PercentageMath'), (274184521717934524641157099916833587322, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/math/WadRayMath.sol:WadRayMath'), (274184521717934524641157099916833587323, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/contracts/protocol/libraries/types/DataTypes.sol:DataTypes')]
Contracts in SDC LiquidationLogic.sol_3: ['Address', 'IERC20', 'SafeERC20', 'IAToken', 'IInitializableAToken', 'IInitializableDebtToken', 'IPriceOracleGetter', 'IPriceOracleSentinel', 'IReserveInterestRateStrategy', 'IScaledBalanceToken', 'IStableDebtToken', 'IVariableDebtToken', 'ReserveConfiguration', 'UserConfiguration', 'Helpers', 'GenericLogic', 'IsolationModeLogic', 'LiquidationLogic', 'ReserveLogic', 'ValidationLogic', 'MathUtils', 'PercentageMath', 'WadRayMath', 'DataTypes']
Building source tree
Backing up current .certora_sources to .certora_internal/24_02_02_08_49_36_072/.certora_sources/.pre_autofinders.3
Running cmd solc -o ".certora_internal/24_02_02_08_49_36_072/.certora_config/LiquidationLogic.sol_3/" --overwrite --allow-paths "/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts",.,"/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/node_modules/@nomiclabs/hardhat-etherscan","/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/node_modules/axios-curlirize","/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/node_modules/tmp-promise" --standard-json
stdout, stderr = .certora_internal/24_02_02_08_49_36_072/.certora_config/LiquidationLogic.sol_3.standard.json.stdout, .certora_internal/24_02_02_08_49_36_072/.certora_config/LiquidationLogic.sol_3.standard.json.stderr
Exitcode 0
Solc run solc -o ".certora_internal/24_02_02_08_49_36_072/.certora_config/LiquidationLogic.sol_3/" --overwrite --allow-paths "/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts",.,"/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/node_modules/@nomiclabs/hardhat-etherscan","/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/node_modules/axios-curlirize","/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/node_modules/tmp-promise" --standard-json time: 1.5157
reading standard json data from .certora_internal/24_02_02_08_49_36_072/.certora_config/LiquidationLogic.sol_3.standard.json.stdout
collecting worklist for /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/LiquidationLogic.sol
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/LiquidationLogic.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/Address.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/IERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IAaveIncentivesController.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IInitializableAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IInitializableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPool.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPriceOracleGetter.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPriceOracleSentinel.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IReserveInterestRateStrategy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IScaledBalanceToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IStableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IVariableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/configuration/ReserveConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/configuration/UserConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/helpers/Errors.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/helpers/Helpers.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/GenericLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/IsolationModeLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/LiquidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/ReserveLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/ValidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/MathUtils.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/PercentageMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/WadRayMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/types/DataTypes.sol'])
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/types/DataTypes.sol to worklist
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/GenericLogic.sol to worklist
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/helpers/Helpers.sol to worklist
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IAToken.sol to worklist
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/IERC20.sol to worklist
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPriceOracleGetter.sol to worklist
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IStableDebtToken.sol to worklist
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IVariableDebtToken.sol to worklist
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/IsolationModeLogic.sol to worklist
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/PercentageMath.sol to worklist
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/configuration/ReserveConfiguration.sol to worklist
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/ReserveLogic.sol to worklist
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/SafeERC20.sol to worklist
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/configuration/UserConfiguration.sol to worklist
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/ValidationLogic.sol to worklist
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/ValidationLogic.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/Address.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/IERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IAaveIncentivesController.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IInitializableAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IInitializableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPool.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPriceOracleGetter.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPriceOracleSentinel.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IReserveInterestRateStrategy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IScaledBalanceToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IStableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IVariableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/configuration/ReserveConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/configuration/UserConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/helpers/Errors.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/helpers/Helpers.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/GenericLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/IsolationModeLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/LiquidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/ReserveLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/ValidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/MathUtils.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/PercentageMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/WadRayMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/types/DataTypes.sol'])
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPriceOracleSentinel.sol to worklist
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IReserveInterestRateStrategy.sol to worklist
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IScaledBalanceToken.sol to worklist
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/WadRayMath.sol to worklist
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/WadRayMath.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/Address.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/IERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IAaveIncentivesController.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IInitializableAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IInitializableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPool.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPriceOracleGetter.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPriceOracleSentinel.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IReserveInterestRateStrategy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IScaledBalanceToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IStableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IVariableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/configuration/ReserveConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/configuration/UserConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/helpers/Errors.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/helpers/Helpers.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/GenericLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/IsolationModeLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/LiquidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/ReserveLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/ValidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/MathUtils.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/PercentageMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/WadRayMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/types/DataTypes.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IScaledBalanceToken.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/Address.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/IERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IAaveIncentivesController.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IInitializableAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IInitializableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPool.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPriceOracleGetter.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPriceOracleSentinel.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IReserveInterestRateStrategy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IScaledBalanceToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IStableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IVariableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/configuration/ReserveConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/configuration/UserConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/helpers/Errors.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/helpers/Helpers.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/GenericLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/IsolationModeLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/LiquidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/ReserveLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/ValidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/MathUtils.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/PercentageMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/WadRayMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/types/DataTypes.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IReserveInterestRateStrategy.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/Address.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/IERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IAaveIncentivesController.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IInitializableAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IInitializableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPool.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPriceOracleGetter.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPriceOracleSentinel.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IReserveInterestRateStrategy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IScaledBalanceToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IStableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IVariableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/configuration/ReserveConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/configuration/UserConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/helpers/Errors.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/helpers/Helpers.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/GenericLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/IsolationModeLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/LiquidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/ReserveLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/ValidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/MathUtils.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/PercentageMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/WadRayMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/types/DataTypes.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPriceOracleSentinel.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/Address.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/IERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IAaveIncentivesController.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IInitializableAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IInitializableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPool.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPriceOracleGetter.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPriceOracleSentinel.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IReserveInterestRateStrategy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IScaledBalanceToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IStableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IVariableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/configuration/ReserveConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/configuration/UserConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/helpers/Errors.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/helpers/Helpers.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/GenericLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/IsolationModeLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/LiquidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/ReserveLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/ValidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/MathUtils.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/PercentageMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/WadRayMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/types/DataTypes.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/configuration/UserConfiguration.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/Address.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/IERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IAaveIncentivesController.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IInitializableAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IInitializableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPool.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPriceOracleGetter.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPriceOracleSentinel.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IReserveInterestRateStrategy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IScaledBalanceToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IStableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IVariableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/configuration/ReserveConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/configuration/UserConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/helpers/Errors.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/helpers/Helpers.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/GenericLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/IsolationModeLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/LiquidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/ReserveLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/ValidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/MathUtils.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/PercentageMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/WadRayMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/types/DataTypes.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/SafeERC20.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/Address.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/IERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IAaveIncentivesController.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IInitializableAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IInitializableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPool.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPriceOracleGetter.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPriceOracleSentinel.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IReserveInterestRateStrategy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IScaledBalanceToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IStableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IVariableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/configuration/ReserveConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/configuration/UserConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/helpers/Errors.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/helpers/Helpers.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/GenericLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/IsolationModeLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/LiquidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/ReserveLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/ValidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/MathUtils.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/PercentageMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/WadRayMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/types/DataTypes.sol'])
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/Address.sol to worklist
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/Address.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/Address.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/IERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IAaveIncentivesController.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IInitializableAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IInitializableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPool.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPriceOracleGetter.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPriceOracleSentinel.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IReserveInterestRateStrategy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IScaledBalanceToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IStableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IVariableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/configuration/ReserveConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/configuration/UserConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/helpers/Errors.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/helpers/Helpers.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/GenericLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/IsolationModeLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/LiquidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/ReserveLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/ValidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/MathUtils.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/PercentageMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/WadRayMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/types/DataTypes.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/ReserveLogic.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/Address.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/IERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IAaveIncentivesController.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IInitializableAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IInitializableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPool.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPriceOracleGetter.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPriceOracleSentinel.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IReserveInterestRateStrategy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IScaledBalanceToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IStableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IVariableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/configuration/ReserveConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/configuration/UserConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/helpers/Errors.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/helpers/Helpers.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/GenericLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/IsolationModeLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/LiquidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/ReserveLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/ValidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/MathUtils.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/PercentageMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/WadRayMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/types/DataTypes.sol'])
Adding internal link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/MathUtils.sol to worklist
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/MathUtils.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/Address.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/IERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IAaveIncentivesController.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IInitializableAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IInitializableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPool.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPriceOracleGetter.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPriceOracleSentinel.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IReserveInterestRateStrategy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IScaledBalanceToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IStableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IVariableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/configuration/ReserveConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/configuration/UserConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/helpers/Errors.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/helpers/Helpers.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/GenericLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/IsolationModeLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/LiquidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/ReserveLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/ValidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/MathUtils.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/PercentageMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/WadRayMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/types/DataTypes.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/configuration/ReserveConfiguration.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/Address.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/IERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IAaveIncentivesController.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IInitializableAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IInitializableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPool.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPriceOracleGetter.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPriceOracleSentinel.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IReserveInterestRateStrategy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IScaledBalanceToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IStableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IVariableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/configuration/ReserveConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/configuration/UserConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/helpers/Errors.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/helpers/Helpers.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/GenericLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/IsolationModeLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/LiquidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/ReserveLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/ValidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/MathUtils.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/PercentageMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/WadRayMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/types/DataTypes.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/PercentageMath.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/Address.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/IERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IAaveIncentivesController.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IInitializableAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IInitializableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPool.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPriceOracleGetter.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPriceOracleSentinel.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IReserveInterestRateStrategy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IScaledBalanceToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IStableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IVariableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/configuration/ReserveConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/configuration/UserConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/helpers/Errors.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/helpers/Helpers.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/GenericLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/IsolationModeLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/LiquidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/ReserveLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/ValidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/MathUtils.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/PercentageMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/WadRayMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/types/DataTypes.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/IsolationModeLogic.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/Address.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/IERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IAaveIncentivesController.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IInitializableAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IInitializableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPool.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPriceOracleGetter.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPriceOracleSentinel.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IReserveInterestRateStrategy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IScaledBalanceToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IStableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IVariableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/configuration/ReserveConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/configuration/UserConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/helpers/Errors.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/helpers/Helpers.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/GenericLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/IsolationModeLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/LiquidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/ReserveLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/ValidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/MathUtils.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/PercentageMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/WadRayMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/types/DataTypes.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IVariableDebtToken.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/Address.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/IERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IAaveIncentivesController.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IInitializableAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IInitializableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPool.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPriceOracleGetter.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPriceOracleSentinel.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IReserveInterestRateStrategy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IScaledBalanceToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IStableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IVariableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/configuration/ReserveConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/configuration/UserConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/helpers/Errors.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/helpers/Helpers.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/GenericLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/IsolationModeLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/LiquidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/ReserveLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/ValidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/MathUtils.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/PercentageMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/WadRayMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/types/DataTypes.sol'])
Adding a base contract link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IInitializableDebtToken.sol to worklist
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IInitializableDebtToken.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/Address.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/IERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IAaveIncentivesController.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IInitializableAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IInitializableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPool.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPriceOracleGetter.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPriceOracleSentinel.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IReserveInterestRateStrategy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IScaledBalanceToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IStableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IVariableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/configuration/ReserveConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/configuration/UserConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/helpers/Errors.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/helpers/Helpers.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/GenericLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/IsolationModeLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/LiquidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/ReserveLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/ValidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/MathUtils.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/PercentageMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/WadRayMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/types/DataTypes.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IStableDebtToken.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/Address.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/IERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IAaveIncentivesController.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IInitializableAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IInitializableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPool.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPriceOracleGetter.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPriceOracleSentinel.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IReserveInterestRateStrategy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IScaledBalanceToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IStableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IVariableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/configuration/ReserveConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/configuration/UserConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/helpers/Errors.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/helpers/Helpers.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/GenericLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/IsolationModeLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/LiquidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/ReserveLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/ValidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/MathUtils.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/PercentageMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/WadRayMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/types/DataTypes.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPriceOracleGetter.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/Address.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/IERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IAaveIncentivesController.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IInitializableAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IInitializableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPool.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPriceOracleGetter.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPriceOracleSentinel.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IReserveInterestRateStrategy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IScaledBalanceToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IStableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IVariableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/configuration/ReserveConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/configuration/UserConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/helpers/Errors.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/helpers/Helpers.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/GenericLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/IsolationModeLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/LiquidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/ReserveLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/ValidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/MathUtils.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/PercentageMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/WadRayMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/types/DataTypes.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/IERC20.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/Address.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/IERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IAaveIncentivesController.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IInitializableAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IInitializableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPool.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPriceOracleGetter.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPriceOracleSentinel.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IReserveInterestRateStrategy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IScaledBalanceToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IStableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IVariableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/configuration/ReserveConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/configuration/UserConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/helpers/Errors.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/helpers/Helpers.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/GenericLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/IsolationModeLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/LiquidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/ReserveLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/ValidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/MathUtils.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/PercentageMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/WadRayMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/types/DataTypes.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IAToken.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/Address.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/IERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IAaveIncentivesController.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IInitializableAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IInitializableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPool.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPriceOracleGetter.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPriceOracleSentinel.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IReserveInterestRateStrategy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IScaledBalanceToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IStableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IVariableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/configuration/ReserveConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/configuration/UserConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/helpers/Errors.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/helpers/Helpers.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/GenericLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/IsolationModeLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/LiquidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/ReserveLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/ValidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/MathUtils.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/PercentageMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/WadRayMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/types/DataTypes.sol'])
Adding a base contract link ref /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IInitializableAToken.sol to worklist
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IInitializableAToken.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/Address.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/IERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IAaveIncentivesController.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IInitializableAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IInitializableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPool.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPriceOracleGetter.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPriceOracleSentinel.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IReserveInterestRateStrategy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IScaledBalanceToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IStableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IVariableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/configuration/ReserveConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/configuration/UserConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/helpers/Errors.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/helpers/Helpers.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/GenericLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/IsolationModeLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/LiquidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/ReserveLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/ValidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/MathUtils.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/PercentageMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/WadRayMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/types/DataTypes.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/helpers/Helpers.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/Address.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/IERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IAaveIncentivesController.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IInitializableAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IInitializableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPool.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPriceOracleGetter.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPriceOracleSentinel.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IReserveInterestRateStrategy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IScaledBalanceToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IStableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IVariableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/configuration/ReserveConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/configuration/UserConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/helpers/Errors.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/helpers/Helpers.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/GenericLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/IsolationModeLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/LiquidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/ReserveLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/ValidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/MathUtils.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/PercentageMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/WadRayMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/types/DataTypes.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/GenericLogic.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/Address.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/IERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IAaveIncentivesController.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IInitializableAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IInitializableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPool.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPriceOracleGetter.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPriceOracleSentinel.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IReserveInterestRateStrategy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IScaledBalanceToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IStableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IVariableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/configuration/ReserveConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/configuration/UserConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/helpers/Errors.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/helpers/Helpers.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/GenericLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/IsolationModeLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/LiquidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/ReserveLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/ValidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/MathUtils.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/PercentageMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/WadRayMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/types/DataTypes.sol'])
Processing dependencies from file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/types/DataTypes.sol
available keys: dict_keys(['/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/Address.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/IERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/SafeERC20.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IAaveIncentivesController.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IInitializableAToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IInitializableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPool.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPoolAddressesProvider.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPriceOracleGetter.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPriceOracleSentinel.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IReserveInterestRateStrategy.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IScaledBalanceToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IStableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IVariableDebtToken.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/configuration/ReserveConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/configuration/UserConfiguration.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/helpers/Errors.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/helpers/Helpers.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/GenericLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/IsolationModeLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/LiquidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/ReserveLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/ValidationLogic.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/MathUtils.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/PercentageMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/WadRayMath.sol', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/types/DataTypes.sol'])
Contracts in LiquidationLogic.sol_3 (file .certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/LiquidationLogic.sol): ['LiquidationLogic']
Contracts with their chosen addresses: [(274184521717934524641157099916833587324, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/Address.sol:Address'), (274184521717934524641157099916833587325, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/IERC20.sol:IERC20'), (274184521717934524641157099916833587326, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/SafeERC20.sol:SafeERC20'), (274184521717934524641157099916833587327, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IAToken.sol:IAToken'), (274184521717934524641157099916833587328, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IInitializableAToken.sol:IInitializableAToken'), (274184521717934524641157099916833587329, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IInitializableDebtToken.sol:IInitializableDebtToken'), (274184521717934524641157099916833587330, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPriceOracleGetter.sol:IPriceOracleGetter'), (274184521717934524641157099916833587331, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPriceOracleSentinel.sol:IPriceOracleSentinel'), (274184521717934524641157099916833587332, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IReserveInterestRateStrategy.sol:IReserveInterestRateStrategy'), (274184521717934524641157099916833587333, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IScaledBalanceToken.sol:IScaledBalanceToken'), (274184521717934524641157099916833587334, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IStableDebtToken.sol:IStableDebtToken'), (274184521717934524641157099916833587335, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IVariableDebtToken.sol:IVariableDebtToken'), (274184521717934524641157099916833587336, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/configuration/ReserveConfiguration.sol:ReserveConfiguration'), (274184521717934524641157099916833587337, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/configuration/UserConfiguration.sol:UserConfiguration'), (274184521717934524641157099916833587338, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/helpers/Helpers.sol:Helpers'), (274184521717934524641157099916833587339, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/GenericLogic.sol:GenericLogic'), (274184521717934524641157099916833587340, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/IsolationModeLogic.sol:IsolationModeLogic'), (274184521717934524641157099916833587341, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/LiquidationLogic.sol:LiquidationLogic'), (274184521717934524641157099916833587342, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/ReserveLogic.sol:ReserveLogic'), (274184521717934524641157099916833587343, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/ValidationLogic.sol:ValidationLogic'), (274184521717934524641157099916833587344, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/MathUtils.sol:MathUtils'), (274184521717934524641157099916833587345, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/PercentageMath.sol:PercentageMath'), (274184521717934524641157099916833587346, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/WadRayMath.sol:WadRayMath'), (274184521717934524641157099916833587347, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/types/DataTypes.sol:DataTypes')]
Working on contract Address
Working on contract Address
Working on contract IERC20
Working on contract IERC20
Working on contract SafeERC20
Working on contract SafeERC20
Working on contract IAToken
Working on contract IAToken
Working on contract IInitializableAToken
Working on contract IInitializableAToken
Working on contract IInitializableDebtToken
Working on contract IInitializableDebtToken
Working on contract IPriceOracleGetter
Working on contract IPriceOracleGetter
Working on contract IPriceOracleSentinel
Working on contract IPriceOracleSentinel
Working on contract IReserveInterestRateStrategy
Working on contract IReserveInterestRateStrategy
Working on contract IScaledBalanceToken
Working on contract IScaledBalanceToken
Working on contract IStableDebtToken
Working on contract IStableDebtToken
Working on contract IVariableDebtToken
Working on contract IVariableDebtToken
Working on contract ReserveConfiguration
Working on contract ReserveConfiguration
Working on contract UserConfiguration
Working on contract UserConfiguration
Working on contract Helpers
Working on contract Helpers
Working on contract GenericLogic
Working on contract GenericLogic
Working on contract IsolationModeLogic
Working on contract IsolationModeLogic
Working on contract LiquidationLogic
Working on contract LiquidationLogic
Working on contract ReserveLogic
Working on contract ReserveLogic
Working on contract ValidationLogic
Working on contract ValidationLogic
Working on contract MathUtils
Working on contract MathUtils
Working on contract PercentageMath
Working on contract PercentageMath
Working on contract WadRayMath
Working on contract WadRayMath
Working on contract DataTypes
Working on contract DataTypes
For contracts of primary LiquidationLogic
finding primary contract address of /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/LiquidationLogic.sol:LiquidationLogic in [(274184521717934524641157099916833587324, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/Address.sol:Address'), (274184521717934524641157099916833587325, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/IERC20.sol:IERC20'), (274184521717934524641157099916833587326, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/dependencies/openzeppelin/contracts/SafeERC20.sol:SafeERC20'), (274184521717934524641157099916833587327, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IAToken.sol:IAToken'), (274184521717934524641157099916833587328, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IInitializableAToken.sol:IInitializableAToken'), (274184521717934524641157099916833587329, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IInitializableDebtToken.sol:IInitializableDebtToken'), (274184521717934524641157099916833587330, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPriceOracleGetter.sol:IPriceOracleGetter'), (274184521717934524641157099916833587331, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IPriceOracleSentinel.sol:IPriceOracleSentinel'), (274184521717934524641157099916833587332, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IReserveInterestRateStrategy.sol:IReserveInterestRateStrategy'), (274184521717934524641157099916833587333, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IScaledBalanceToken.sol:IScaledBalanceToken'), (274184521717934524641157099916833587334, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IStableDebtToken.sol:IStableDebtToken'), (274184521717934524641157099916833587335, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/interfaces/IVariableDebtToken.sol:IVariableDebtToken'), (274184521717934524641157099916833587336, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/configuration/ReserveConfiguration.sol:ReserveConfiguration'), (274184521717934524641157099916833587337, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/configuration/UserConfiguration.sol:UserConfiguration'), (274184521717934524641157099916833587338, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/helpers/Helpers.sol:Helpers'), (274184521717934524641157099916833587339, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/GenericLogic.sol:GenericLogic'), (274184521717934524641157099916833587340, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/IsolationModeLogic.sol:IsolationModeLogic'), (274184521717934524641157099916833587341, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/LiquidationLogic.sol:LiquidationLogic'), (274184521717934524641157099916833587342, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/ReserveLogic.sol:ReserveLogic'), (274184521717934524641157099916833587343, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/logic/ValidationLogic.sol:ValidationLogic'), (274184521717934524641157099916833587344, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/MathUtils.sol:MathUtils'), (274184521717934524641157099916833587345, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/PercentageMath.sol:PercentageMath'), (274184521717934524641157099916833587346, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/math/WadRayMath.sol:WadRayMath'), (274184521717934524641157099916833587347, '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_sources/contracts/protocol/libraries/types/DataTypes.sol:DataTypes')]
Contracts in SDC LiquidationLogic.sol_3: ['Address', 'IERC20', 'SafeERC20', 'IAToken', 'IInitializableAToken', 'IInitializableDebtToken', 'IPriceOracleGetter', 'IPriceOracleSentinel', 'IReserveInterestRateStrategy', 'IScaledBalanceToken', 'IStableDebtToken', 'IVariableDebtToken', 'ReserveConfiguration', 'UserConfiguration', 'Helpers', 'GenericLogic', 'IsolationModeLogic', 'LiquidationLogic', 'ReserveLogic', 'ValidationLogic', 'MathUtils', 'PercentageMath', 'WadRayMath', 'DataTypes']
Backing up instrumented .certora_sources to .certora_internal/24_02_02_08_49_36_072/.certora_sources/.post_autofinders.3
Rolling back .certora_sources to .certora_internal/24_02_02_08_49_36_072/.certora_sources/.pre_autofinders.3 version
Libraries to add = []
Reference to replace with link: _addressesProvider
writing /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_verify.json
writing file /Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072/.certora_build.json
Path to typechecker is /Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/certora_jars/Typechecker.jar
running ['java', '-jar', '/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/certora_jars/Typechecker.jar', '-buildDirectory', '/Users/nelsonpereira/Documents/GitHub/Auditing/Blogs/Aave_v3_tests/aave-v3-core/.certora_internal/24_02_02_08_49_36_072', '-typeCheck']
